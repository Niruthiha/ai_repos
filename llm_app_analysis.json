[
  {
    "repo": "xtekky/gpt4free",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "code_of_conduct.md",
        "contributing.md",
        "legal_notice.md",
        "license",
        "manifest.in",
        "readme.md",
        "security.md",
        "demo.docx"
      ],
      "dirs": [
        ".github",
        "docker",
        "docs",
        "etc",
        "g4f",
        "generated_media",
        "har_and_cookies",
        "models",
        "projects"
      ]
    },
    "search_info": {
      "repo": "xtekky/gpt4free",
      "stars": 64476,
      "language": "Python",
      "description": "The official gpt4free repository | various collection of powerful language models | o4, o3 and deepseek r1, gpt-4.1, gemini 2.5",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/xtekky/gpt4free",
      "topics": [
        "chatbot",
        "chatbots",
        "chatgpt",
        "chatgpt-4",
        "chatgpt-api",
        "chatgpt-free",
        "chatgpt4",
        "deepseek",
        "deepseek-api",
        "deepseek-r1",
        "gpt",
        "gpt-4",
        "gpt-4o",
        "gpt4",
        "gpt4-api",
        "language-model",
        "openai",
        "openai-api",
        "openai-chatgpt",
        "reverse-engineering"
      ],
      "size": 167886,
      "default_branch": "main"
    }
  },
  {
    "repo": "Shubhamsaboo/awesome-llm-apps",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "advanced_ai_agents",
        "advanced_llm_apps",
        "docs",
        "mcp_ai_agents",
        "rag_tutorials",
        "starter_ai_agents",
        "voice_ai_agents"
      ]
    },
    "search_info": {
      "repo": "Shubhamsaboo/awesome-llm-apps",
      "stars": 45154,
      "language": "Python",
      "description": "Collection of awesome LLM apps with AI Agents and RAG using OpenAI, Anthropic, Gemini and opensource models.",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/Shubhamsaboo/awesome-llm-apps",
      "topics": [
        "llms",
        "python",
        "rag"
      ],
      "size": 169738,
      "default_branch": "main"
    }
  },
  {
    "repo": "FlowiseAI/Flowise",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".eslintrc.js",
        ".gitignore",
        ".npmrc",
        "code_of_conduct.md",
        "contributing.md",
        "dockerfile",
        "license.md",
        "readme.md",
        "security.md"
      ],
      "dirs": [
        ".github",
        ".husky",
        "assets",
        "docker",
        "i18n",
        "images",
        "metrics",
        "packages"
      ]
    },
    "search_info": {
      "repo": "FlowiseAI/Flowise",
      "stars": 40424,
      "language": "TypeScript",
      "description": "Build AI Agents, Visually",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/FlowiseAI/Flowise",
      "topics": [
        "agentic-ai",
        "agentic-workflow",
        "agents",
        "artificial-intelligence",
        "chatbot",
        "chatgpt",
        "javascript",
        "langchain",
        "large-language-models",
        "low-code",
        "multiagent-systems",
        "no-code",
        "openai",
        "rag",
        "react",
        "typescript",
        "workflow-automation"
      ],
      "size": 60241,
      "default_branch": "main"
    }
  },
  {
    "repo": "mouredev/Hello-Python",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        "backend",
        "basic",
        "images",
        "intermediate"
      ]
    },
    "search_info": {
      "repo": "mouredev/Hello-Python",
      "stars": 30618,
      "language": "Python",
      "description": "Curso para aprender el lenguaje de programaci\u00f3n Python desde cero y para principiantes. 100 clases, 44 horas en v\u00eddeo, c\u00f3digo, proyectos y grupo de ch",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/mouredev/Hello-Python",
      "topics": [
        "backend",
        "chatgpt",
        "chatgpt-api",
        "fastapi",
        "frontend",
        "gpt-3",
        "gpt-4",
        "mongodb",
        "openai",
        "openai-api",
        "python",
        "python3",
        "reflex",
        "tutorial"
      ],
      "size": 5694,
      "default_branch": "main"
    }
  },
  {
    "repo": "yamadashy/repomix",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".clinerules",
        ".codecov.yml",
        ".coderabbit.yaml",
        ".cursorrules",
        ".dockerignore",
        ".editorconfig",
        ".gitignore",
        ".node-version",
        ".repomixignore",
        ".secretlintrc.json"
      ],
      "dirs": [
        ".claude",
        ".devcontainer",
        ".github",
        "bin",
        "browser",
        "src",
        "tests",
        "website"
      ]
    },
    "search_info": {
      "repo": "yamadashy/repomix",
      "stars": 17077,
      "language": "TypeScript",
      "description": "\ud83d\udce6 Repomix is a powerful tool that packs your entire repository into a single, AI-friendly file. Perfect for when you need to feed your codebase to Lar",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/yamadashy/repomix",
      "topics": [
        "ai",
        "anthropic",
        "artificial-intelligence",
        "chatbot",
        "chatgpt",
        "claude",
        "deepseek",
        "developer-tools",
        "gemini",
        "genai",
        "generative-ai",
        "gpt",
        "javascript",
        "language-model",
        "llama",
        "llm",
        "mcp",
        "nodejs",
        "openai",
        "typescript"
      ],
      "size": 7383,
      "default_branch": "main"
    }
  },
  {
    "repo": "lss233/kirara-ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".editorconfig",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".pylintrc",
        "dockerfile",
        "license",
        "manifest.in",
        "readme.md",
        "alembic.ini"
      ],
      "dirs": [
        ".cursor",
        ".github",
        "data",
        "docker",
        "kirara_ai",
        "tests",
        "web"
      ]
    },
    "search_info": {
      "repo": "lss233/kirara-ai",
      "stars": 15496,
      "language": "Python",
      "description": "\ud83e\udd16 \u53ef DIY \u7684 \u591a\u6a21\u6001 AI \u804a\u5929\u673a\u5668\u4eba | \ud83d\ude80 \u5feb\u901f\u63a5\u5165 \u5fae\u4fe1\u3001 QQ\u3001Telegram\u3001\u7b49\u804a\u5929\u5e73\u53f0 | \ud83e\udd88\u652f\u6301DeepSeek\u3001Grok\u3001Claude\u3001Ollama\u3001Gemini\u3001OpenAI | \u5de5\u4f5c\u6d41\u7cfb\u7edf\u3001\u7f51\u9875\u641c\u7d22\u3001AI\u753b\u56fe\u3001\u4eba\u8bbe\u8c03\u6559\u3001\u865a\u62df\u5973\u4ec6\u3001\u8bed\u97f3\u5bf9\u8bdd | ",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/lss233/kirara-ai",
      "topics": [
        "bard",
        "bot",
        "chatglm-6b",
        "chatgpt",
        "deepseek",
        "discord",
        "ernie",
        "go-cqhttp",
        "grok",
        "mirai",
        "new-bing",
        "ollama",
        "openai",
        "poe",
        "qq",
        "qqbot",
        "sydney",
        "telegram",
        "wechat",
        "xinghuo"
      ],
      "size": 38828,
      "default_branch": "master"
    }
  },
  {
    "repo": "GaiZhenbiao/ChuanhuChatGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        ".gitignore",
        "citation.cff",
        "chuanhuchatbot.py",
        "dockerfile",
        "license",
        "readme.md",
        "config_example.json",
        "requirements.txt",
        "requirements_advanced.txt",
        "run_linux.sh"
      ],
      "dirs": [
        ".github",
        "configs",
        "locale",
        "modules",
        "readme",
        "templates",
        "web_assets"
      ]
    },
    "stats": {
      "total_issues_checked": 17,
      "llm_related_issues": 15,
      "llm_percentage": 88.2,
      "issues_with_labels": 14,
      "label_percentage": 82.4,
      "avg_labels_per_issue": 1.0,
      "total_repo_labels": 22,
      "repo_stars": 15412,
      "repo_language": "Python",
      "repo_description": "GUI for ChatGPT API and many LLMs. Supports agents, file-based QA, GPT finetuning and query with web",
      "created_at": "2023-03-02T13:37:13Z",
      "updated_at": "2025-06-21T15:33:50Z"
    },
    "search_info": {
      "repo": "GaiZhenbiao/ChuanhuChatGPT",
      "stars": 15412,
      "language": "Python",
      "description": "GUI for ChatGPT API and many LLMs. Supports agents, file-based QA, GPT finetuning and query with web search. All with a neat UI.",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/GaiZhenbiao/ChuanhuChatGPT",
      "topics": [
        "chatbot",
        "chatglm",
        "chatgpt-api",
        "claude",
        "dalle3",
        "ernie",
        "gemini",
        "gemma",
        "inspurai",
        "llama",
        "midjourney",
        "minimax",
        "moss",
        "ollama",
        "qwen",
        "spark",
        "stablelm"
      ],
      "size": 3259,
      "default_branch": "main"
    }
  },
  {
    "repo": "RockChinQ/LangBot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "readme_en.md",
        "readme_jp.md",
        "components.yaml"
      ],
      "dirs": [
        ".github",
        "libs",
        "pkg",
        "res",
        "templates",
        "web"
      ]
    },
    "search_info": {
      "repo": "RockChinQ/LangBot",
      "stars": 12125,
      "language": "Python",
      "description": "\ud83e\udd29 Easy-to-use global IM bot platform designed for the LLM era / \u7b80\u5355\u6613\u7528\u7684\u5927\u6a21\u578b\u5373\u65f6\u901a\u4fe1\u673a\u5668\u4eba\u5f00\u53d1\u5e73\u53f0 \u26a1\ufe0f Bots for QQ / QQ\u9891\u9053 / Discord / WeChat\uff08\u4f01\u4e1a\u5fae\u4fe1\u3001\u4e2a\u4eba\u5fae\u4fe1\uff09/ Telegram / \u98de\u4e66",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/RockChinQ/LangBot",
      "topics": [
        "agent",
        "ai",
        "bot",
        "chatgpt",
        "deepseek",
        "dify",
        "dingtalk",
        "discord",
        "feishu",
        "langbot",
        "lark",
        "llm",
        "n8n",
        "ollama",
        "openai",
        "plugins",
        "qq",
        "rag",
        "telegram",
        "wechat"
      ],
      "size": 33453,
      "default_branch": "master"
    }
  },
  {
    "repo": "h2oai/h2ogpt",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 5,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".env",
        ".gitattributes",
        ".gitignore",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "docker-compose-cpu.yml",
        "docker-compose-vllm.yml"
      ],
      "dirs": [
        ".github",
        "benchmarks",
        "blog",
        "ci",
        "cloud",
        "data",
        "dev_installers",
        "docs",
        "gradio_utils",
        "h2ogpt"
      ]
    },
    "stats": {
      "total_issues_checked": 10,
      "llm_related_issues": 9,
      "llm_percentage": 90.0,
      "issues_with_labels": 1,
      "label_percentage": 10.0,
      "avg_labels_per_issue": 0.3,
      "total_repo_labels": 30,
      "repo_stars": 11844,
      "repo_language": "Python",
      "repo_description": "Private chat with local GPT with document, images, video, etc. 100% private, Apache 2.0. Supports oL",
      "created_at": "2023-03-24T21:31:25Z",
      "updated_at": "2025-06-21T17:12:15Z"
    },
    "search_info": {
      "repo": "h2oai/h2ogpt",
      "stars": 11844,
      "language": "Python",
      "description": "Private chat with local GPT with document, images, video, etc. 100% private, Apache 2.0. Supports oLLaMa, Mixtral, llama.cpp, and more. Demo: https://",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/h2oai/h2ogpt",
      "topics": [
        "ai",
        "chatgpt",
        "embeddings",
        "generative",
        "gpt",
        "gpt4all",
        "llama2",
        "llm",
        "mixtral",
        "pdf",
        "private",
        "privategpt",
        "vectorstore"
      ],
      "size": 54964,
      "default_branch": "main"
    }
  },
  {
    "repo": "AstrBotDevs/AstrBot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 2
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "code_of_conduct.md",
        "dockerfile",
        "dockerfile_with_node",
        "license",
        "readme.md",
        "readme_en.md"
      ],
      "dirs": [
        ".github",
        "astrbot",
        "changelogs",
        "dashboard",
        "packages",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 15,
      "llm_related_issues": 6,
      "llm_percentage": 40.0,
      "issues_with_labels": 13,
      "label_percentage": 86.7,
      "avg_labels_per_issue": 0.87,
      "total_repo_labels": 20,
      "repo_stars": 9950,
      "repo_language": "Python",
      "repo_description": "\u2728 \u6613\u4e0a\u624b\u7684\u591a\u5e73\u53f0 LLM \u804a\u5929\u673a\u5668\u4eba\u53ca\u5f00\u53d1\u6846\u67b6 \u2728 \u5e73\u53f0\u652f\u6301 QQ\u3001QQ\u9891\u9053\u3001Telegram\u3001\u5fae\u4fe1\u3001\u4f01\u5fae\u3001\u98de\u4e66\u3001\u9489\u9489 | \u77e5\u8bc6\u5e93\u3001MCP \u670d\u52a1\u5668\u3001OpenAI\u3001DeepSeek\u3001Gemini\u3001\u7845\u57fa",
      "created_at": "2022-12-08T13:27:46Z",
      "updated_at": "2025-06-21T23:15:12Z"
    },
    "search_info": {
      "repo": "AstrBotDevs/AstrBot",
      "stars": 9950,
      "language": "Python",
      "description": "\u2728 \u6613\u4e0a\u624b\u7684\u591a\u5e73\u53f0 LLM \u804a\u5929\u673a\u5668\u4eba\u53ca\u5f00\u53d1\u6846\u67b6 \u2728 \u5e73\u53f0\u652f\u6301 QQ\u3001QQ\u9891\u9053\u3001Telegram\u3001\u5fae\u4fe1\u3001\u4f01\u5fae\u3001\u98de\u4e66\u3001\u9489\u9489 | \u77e5\u8bc6\u5e93\u3001MCP \u670d\u52a1\u5668\u3001OpenAI\u3001DeepSeek\u3001Gemini\u3001\u7845\u57fa\u6d41\u52a8\u3001\u6708\u4e4b\u6697\u9762\u3001Ollama\u3001OneAPI\u3001Dify \u7b49\u3002 WebUI\u3002",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/AstrBotDevs/AstrBot",
      "topics": [
        "agent",
        "ai",
        "chatbot",
        "chatgpt",
        "docker",
        "gemini",
        "gpt",
        "llama",
        "llm",
        "mcp",
        "openai",
        "python",
        "qq",
        "qqbot",
        "qqchannel",
        "telegram"
      ],
      "size": 31735,
      "default_branch": "master"
    }
  },
  {
    "repo": "e2b-dev/E2B",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.cjs",
        ".gitattributes",
        ".gitignore",
        ".npmrc",
        ".prettierignore",
        ".prettierrc",
        ".vale.ini",
        "codeowners",
        "contributing.md",
        "dev.md"
      ],
      "dirs": [
        ".changeset",
        ".github",
        ".vscode",
        "apps",
        "packages",
        "readme-assets",
        "scripts",
        "spec",
        "supabase",
        "templates"
      ]
    },
    "search_info": {
      "repo": "e2b-dev/E2B",
      "stars": 8686,
      "language": "MDX",
      "description": "Secure open source cloud runtime for AI apps & AI agents",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/e2b-dev/E2B",
      "topics": [
        "agent",
        "ai",
        "ai-agent",
        "ai-agents",
        "code-interpreter",
        "copilot",
        "development",
        "devtools",
        "gpt",
        "gpt-4",
        "javascript",
        "llm",
        "nextjs",
        "openai",
        "python",
        "react",
        "software",
        "typescript"
      ],
      "size": 121882,
      "default_branch": "main"
    }
  },
  {
    "repo": "qodo-ai/pr-agent",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 3,
        "llm_usage": 2
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".pr_agent.toml",
        ".pre-commit-config.yaml",
        "changelog.md",
        "code_of_conduct.md",
        "contributing.md",
        "dockerfile.github_action",
        "dockerfile.github_action_dockerhub",
        "license"
      ],
      "dirs": [
        ".github",
        "docker",
        "docs",
        "github_action",
        "pr_agent",
        "tests"
      ]
    },
    "search_info": {
      "repo": "qodo-ai/pr-agent",
      "stars": 8178,
      "language": "Python",
      "description": "\ud83d\ude80 PR-Agent (Qodo Merge open-source): An AI-Powered \ud83e\udd16 Tool for Automated Pull Request Analysis, Feedback, Suggestions and More! \ud83d\udcbb\ud83d\udd0d",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/qodo-ai/pr-agent",
      "topics": [
        "code-review",
        "codereview",
        "coding-assistant",
        "devtools",
        "gpt-4",
        "openai",
        "pull-request",
        "pull-requests"
      ],
      "size": 99414,
      "default_branch": "main"
    }
  },
  {
    "repo": "xiangsx/gpt4free-ts",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".prettierrc",
        "dockerfile",
        "howtouse.md",
        "license.txt",
        "readme.md",
        "readme_ja.md",
        "readme_zh.md",
        "asyncstore.ts"
      ],
      "dirs": [
        ".github",
        "model",
        "utils"
      ]
    },
    "search_info": {
      "repo": "xiangsx/gpt4free-ts",
      "stars": 7754,
      "language": "TypeScript",
      "description": "Providing a free OpenAI GPT-4 API !   This is a replication project for the typescript version of xtekky/gpt4free",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/xiangsx/gpt4free-ts",
      "topics": [
        "chatbot",
        "chatbots",
        "chatgpt",
        "chatgpt-free",
        "chatgpt4",
        "free-gpt",
        "gpt",
        "gpt-3",
        "gpt-35-turbo",
        "gpt-4",
        "gpt4",
        "gpt4-api",
        "gpt4free",
        "nodejs",
        "openai",
        "typescript"
      ],
      "size": 3092,
      "default_branch": "master"
    }
  },
  {
    "repo": "bhaskatripathi/pdfGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 6,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        "dockerfile",
        "license.txt",
        "readme.md",
        "api.py",
        "app.py",
        "docker-compose.yaml",
        "requirements.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 20,
      "llm_related_issues": 16,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 7131,
      "repo_language": "Python",
      "repo_description": "PDF GPT allows you to chat with the contents of your PDF file by using GPT capabilities. The most ef",
      "created_at": "2023-03-07T18:24:30Z",
      "updated_at": "2025-06-21T23:07:27Z"
    },
    "search_info": {
      "repo": "bhaskatripathi/pdfGPT",
      "stars": 7131,
      "language": "Python",
      "description": "PDF GPT allows you to chat with the contents of your PDF file by using GPT capabilities. The most effective open source solution to turn your pdf file",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/bhaskatripathi/pdfGPT",
      "topics": [
        "chatpdf",
        "chatwithpdf",
        "pdfgpt"
      ],
      "size": 126,
      "default_branch": "main"
    }
  },
  {
    "repo": "run-llama/rags",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "1_\ud83c\udfe0_home.py",
        "license",
        "makefile",
        "readme.md",
        "pg_essay.txt",
        "pyproject.toml",
        "requirements.txt",
        "st_utils.py"
      ],
      "dirs": [
        ".github",
        "core",
        "pages",
        "tests"
      ]
    },
    "search_info": {
      "repo": "run-llama/rags",
      "stars": 6467,
      "language": "Python",
      "description": "Build ChatGPT over your data, all with natural language",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/run-llama/rags",
      "topics": [
        "agent",
        "chatbot",
        "chatgpt",
        "gpts",
        "llamaindex",
        "llm",
        "openai",
        "rag",
        "streamlit"
      ],
      "size": 160,
      "default_branch": "main"
    }
  },
  {
    "repo": "topoteretes/cognee",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.template",
        ".gitattributes",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".pylintrc",
        "code_of_conduct.md",
        "contributing.md",
        "contributors.md",
        "dco.md"
      ],
      "dirs": [
        ".dlt",
        ".github",
        "alembic",
        "assets",
        "bin",
        "cognee-frontend",
        "cognee-mcp",
        "cognee",
        "deployment",
        "evals"
      ]
    },
    "search_info": {
      "repo": "topoteretes/cognee",
      "stars": 5777,
      "language": "Python",
      "description": "Memory for AI Agents in 5 lines of code",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/topoteretes/cognee",
      "topics": [
        "ai",
        "ai-agents",
        "ai-memory",
        "cognitive-architecture",
        "cognitive-memory",
        "contributions-welcome",
        "good-first-issue",
        "good-first-pr",
        "graph-database",
        "graph-rag",
        "graphrag",
        "help-wanted",
        "knowledge",
        "knowledge-graph",
        "neo4j",
        "open-source",
        "openai",
        "rag",
        "vector-database"
      ],
      "size": 89709,
      "default_branch": "main"
    }
  },
  {
    "repo": "ddean2009/MoneyPrinterPlus",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".gitignore",
        "copyright",
        "license",
        "readme.md",
        "auto_video_publish.gif",
        "group.jpg",
        "gui.py",
        "issue.md",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        ".streamlit",
        "bgmusic",
        "chattts",
        "config",
        "const",
        "docker",
        "docs",
        "fasterwhisper",
        "final",
        "fonts"
      ]
    },
    "stats": {
      "total_issues_checked": 17,
      "llm_related_issues": 10,
      "llm_percentage": 58.8,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 4364,
      "repo_language": "Python",
      "repo_description": "AI\u4e00\u952e\u6279\u91cf\u751f\u6210\u5404\u7c7b\u77ed\u89c6\u9891,\u81ea\u52a8\u6279\u91cf\u6df7\u526a\u77ed\u89c6\u9891,\u81ea\u52a8\u628a\u89c6\u9891\u53d1\u5e03\u5230\u6296\u97f3,\u5feb\u624b,\u5c0f\u7ea2\u4e66,\u89c6\u9891\u53f7\u4e0a,\u8d5a\u94b1\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u5bb9\u6613\u8fc7! \u652f\u6301\u672c\u5730\u8bed\u97f3\u6a21\u578bchatTTS,fasterwhisper,GPTSoVITS,",
      "created_at": "2024-05-09T08:52:57Z",
      "updated_at": "2025-06-21T17:08:12Z"
    },
    "search_info": {
      "repo": "ddean2009/MoneyPrinterPlus",
      "stars": 4364,
      "language": "Python",
      "description": "AI\u4e00\u952e\u6279\u91cf\u751f\u6210\u5404\u7c7b\u77ed\u89c6\u9891,\u81ea\u52a8\u6279\u91cf\u6df7\u526a\u77ed\u89c6\u9891,\u81ea\u52a8\u628a\u89c6\u9891\u53d1\u5e03\u5230\u6296\u97f3,\u5feb\u624b,\u5c0f\u7ea2\u4e66,\u89c6\u9891\u53f7\u4e0a,\u8d5a\u94b1\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u5bb9\u6613\u8fc7! \u652f\u6301\u672c\u5730\u8bed\u97f3\u6a21\u578bchatTTS,fasterwhisper,GPTSoVITS,\u652f\u6301\u4e91\u8bed\u97f3\uff1aAzure,\u963f\u91cc\u4e91,\u817e\u8baf\u4e91\u3002\u652f\u6301Stable diffusion,comfyUI\u76f4\u63a5AI",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/ddean2009/MoneyPrinterPlus",
      "topics": [],
      "size": 111358,
      "default_branch": "main"
    }
  },
  {
    "repo": "zhayujie/bot-on-anything",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "app.py",
        "config-template.json",
        "config.py",
        "requirements.txt",
        "sensitive_words.txt"
      ],
      "dirs": [
        ".github",
        "bridge",
        "channel",
        "common",
        "docs",
        "model",
        "plugins",
        "scripts"
      ]
    },
    "stats": {
      "total_issues_checked": 15,
      "llm_related_issues": 12,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 4083,
      "repo_language": "Python",
      "repo_description": "A large model-based chatbot builder that can quickly integrate AI models (including ChatGPT, Claude,",
      "created_at": "2023-02-09T17:07:29Z",
      "updated_at": "2025-06-21T15:49:40Z"
    },
    "search_info": {
      "repo": "zhayujie/bot-on-anything",
      "stars": 4083,
      "language": "Python",
      "description": "A large model-based chatbot builder that can quickly integrate AI models (including ChatGPT, Claude, Gemini) into various software applications (such ",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/zhayujie/bot-on-anything",
      "topics": [
        "chatgpt",
        "claude",
        "gemini",
        "gmail",
        "slack",
        "telegram",
        "web"
      ],
      "size": 372,
      "default_branch": "master"
    }
  },
  {
    "repo": "simstudioai/sim",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".npmrc",
        "license",
        "notice",
        "readme.md",
        "biome.json",
        "bun.lock",
        "bunfig.toml",
        "docker-compose.local.yml"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        ".husky",
        "apps",
        "docker",
        "packages",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "simstudioai/sim",
      "stars": 4009,
      "language": "TypeScript",
      "description": "Sim Studio is an open-source AI agent workflow builder. Sim Studio's interface is a lightweight, intuitive way to quickly build and deploy LLMs that c",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/simstudioai/sim",
      "topics": [
        "agent-workflow",
        "agentic-workflow",
        "agents",
        "ai",
        "aiagents",
        "anthropic",
        "artificial-intelligence",
        "automation",
        "chatbot",
        "deepseek",
        "gemini",
        "low-code",
        "nextjs",
        "no-code",
        "openai",
        "rag",
        "react",
        "typescript"
      ],
      "size": 89259,
      "default_branch": "main"
    }
  },
  {
    "repo": "BrainBlend-AI/atomic-agents",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".coveragerc",
        ".flake8",
        ".gitignore",
        "license",
        "readme.md",
        "poetry.lock",
        "pyproject.toml",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": [
        ".assets",
        ".github",
        "atomic-agents",
        "atomic-assembler",
        "atomic-examples",
        "atomic-forge",
        "docs",
        "guides",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "BrainBlend-AI/atomic-agents",
      "stars": 4007,
      "language": "Python",
      "description": "Building AI agents, atomically",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/BrainBlend-AI/atomic-agents",
      "topics": [
        "ai",
        "artificial-intelligence",
        "large-language-model",
        "large-language-models",
        "llms",
        "openai",
        "openai-api"
      ],
      "size": 13013,
      "default_branch": "main"
    }
  },
  {
    "repo": "yuruotong1/autoMate",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "license",
        "readme.md",
        "readme_cn.md",
        "readme_ja.md",
        "install.py",
        "main.py",
        "main.spec",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "auto_control",
        "imgs",
        "ui",
        "util"
      ]
    },
    "stats": {
      "total_issues_checked": 19,
      "llm_related_issues": 13,
      "llm_percentage": 68.4,
      "issues_with_labels": 18,
      "label_percentage": 94.7,
      "avg_labels_per_issue": 0.95,
      "total_repo_labels": 9,
      "repo_stars": 3494,
      "repo_language": "Python",
      "repo_description": "Like Manus, Computer Use Agent(CUA) and Omniparser, we are computer-using agents.AI-driven local aut",
      "created_at": "2024-01-20T03:04:09Z",
      "updated_at": "2025-06-21T17:31:15Z"
    },
    "search_info": {
      "repo": "yuruotong1/autoMate",
      "stars": 3494,
      "language": "Python",
      "description": "Like Manus, Computer Use Agent(CUA) and Omniparser, we are computer-using agents.AI-driven local automation assistant that uses natural language to ma",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/yuruotong1/autoMate",
      "topics": [
        "agent",
        "ai",
        "computeruse",
        "deepseek",
        "manus",
        "ollama",
        "omniparser",
        "openai",
        "openmanus",
        "response",
        "rpa"
      ],
      "size": 89500,
      "default_branch": "master"
    }
  },
  {
    "repo": "yuka-friends/Windrecorder",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "changelog.md",
        "license",
        "readme.md",
        "install_update.bat",
        "main.py",
        "onboard_setting.py",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".streamlit",
        "__assets__",
        "extension",
        "ocr_lib",
        "windrecorder"
      ]
    },
    "search_info": {
      "repo": "yuka-friends/Windrecorder",
      "stars": 3348,
      "language": "Python",
      "description": "Windrecorder is a memory search app by records everything on your screen in small size, to let you rewind what you have seen, query through OCR text o",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/yuka-friends/Windrecorder",
      "topics": [
        "ffmpeg",
        "productivity",
        "recall",
        "rewind",
        "search",
        "streamlit"
      ],
      "size": 125981,
      "default_branch": "main"
    }
  },
  {
    "repo": "pydantic/logfire",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "changelog.md",
        "contributing.md",
        "license",
        "makefile",
        "readme.md",
        "mkdocs.yml",
        "pyproject.toml",
        "uv.lock"
      ],
      "dirs": [
        ".github",
        ".hyperlint",
        ".vscode",
        "docs",
        "examples",
        "logfire-api",
        "logfire",
        "pyodide_test",
        "release",
        "tests"
      ]
    },
    "search_info": {
      "repo": "pydantic/logfire",
      "stars": 3250,
      "language": "Python",
      "description": "Uncomplicated Observability for Python and beyond! \ud83e\udeb5\ud83d\udd25",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/pydantic/logfire",
      "topics": [
        "fastapi",
        "logging",
        "metrics",
        "observability",
        "openai",
        "opentelemetry",
        "pydantic",
        "python",
        "trace"
      ],
      "size": 48344,
      "default_branch": "main"
    }
  },
  {
    "repo": "ml-tooling/opyrator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".editorconfig",
        ".gitignore",
        "contributing.md",
        "license",
        "pipfile",
        "pipfile.lock",
        "readme.md",
        "build.py",
        "pyproject.toml",
        "setup.cfg"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "docs",
        "examples",
        "playground",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "ml-tooling/opyrator",
      "stars": 3130,
      "language": "Python",
      "description": "\ud83e\ude84 Turns your machine learning code into microservices with web API, interactive GUI, and more.",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/ml-tooling/opyrator",
      "topics": [
        "deployment",
        "faas",
        "fastapi",
        "functions",
        "machine-learning",
        "microservices",
        "pydantic",
        "python",
        "python-functions",
        "serverless",
        "streamlit",
        "type-hints"
      ],
      "size": 2569,
      "default_branch": "main"
    }
  },
  {
    "repo": "daveshap/OpenAI_Agent_Swarm",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "code_of_conduct.md",
        "contributing.md",
        "mission.md",
        "requirements.txt"
      ],
      "dirs": [
        "agents",
        "documentation",
        "global_context",
        "shared"
      ]
    },
    "stats": {
      "total_issues_checked": 7,
      "llm_related_issues": 6,
      "llm_percentage": 85.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 3068,
      "repo_language": "Python",
      "repo_description": "HAAS = Hierarchical Autonomous Agent Swarm - \"Resistance is futile!\"",
      "created_at": "2023-11-07T23:12:05Z",
      "updated_at": "2025-06-21T12:06:45Z"
    },
    "search_info": {
      "repo": "daveshap/OpenAI_Agent_Swarm",
      "stars": 3068,
      "language": "Python",
      "description": "HAAS = Hierarchical Autonomous Agent Swarm - \"Resistance is futile!\"",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/daveshap/OpenAI_Agent_Swarm",
      "topics": [
        "agent",
        "autonomous",
        "swarm"
      ],
      "size": 349,
      "default_branch": "main"
    }
  },
  {
    "repo": "Josh-XT/AGiXT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 3,
        "framework_files": 3,
        "llm_usage": 2
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "code_of_conduct.md",
        "dockerfile",
        "license",
        "manifest.in",
        "security.md",
        "book.json",
        "docker-compose-dev.yml",
        "docker-compose.yml"
      ],
      "dirs": [
        ".github",
        "agixt",
        "docs",
        "examples",
        "models",
        "tests"
      ]
    },
    "search_info": {
      "repo": "Josh-XT/AGiXT",
      "stars": 3031,
      "language": "Python",
      "description": "AGiXT is a dynamic AI Agent Automation Platform that seamlessly orchestrates instruction management and complex task execution across diverse AI provi",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/Josh-XT/AGiXT",
      "topics": [
        "agent-llm",
        "agi",
        "agixt",
        "ai",
        "artificial",
        "automation",
        "chromadb",
        "intelligence",
        "llama",
        "llamacpp",
        "llm",
        "llmops",
        "openai",
        "python"
      ],
      "size": 176129,
      "default_branch": "main"
    }
  },
  {
    "repo": "gmpetrov/databerry",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "gmpetrov/databerry",
      "stars": 2933,
      "language": null,
      "description": "The no-code platform for building custom LLM Agents",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/gmpetrov/databerry",
      "topics": [
        "ai",
        "aichatbot",
        "chatbot",
        "chatbots",
        "chatgpt",
        "llm",
        "no-code",
        "openai",
        "qdrant",
        "semantic-search",
        "typescript"
      ],
      "size": 76710,
      "default_branch": "main"
    }
  },
  {
    "repo": "LearningCircuit/local-deep-research",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 5,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".flake8",
        ".gitignore",
        ".isort.cfg",
        ".pre-commit-config.yaml",
        "contributing.md",
        "dockerfile",
        "license",
        "manifest.in",
        "readme.md",
        "security.md"
      ],
      "dirs": [
        ".github",
        "cookiecutter-docker",
        "data",
        "docs",
        "examples",
        "installers",
        "scripts",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "LearningCircuit/local-deep-research",
      "stars": 2887,
      "language": "Python",
      "description": "Local Deep Research is an AI-powered assistant that transforms complex questions into comprehensive, cited reports by conducting iterative analysis us",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/LearningCircuit/local-deep-research",
      "topics": [
        "academia",
        "ai",
        "arxiv",
        "brave",
        "deep-research",
        "gemma",
        "llama",
        "local",
        "local-deep-research",
        "local-llm",
        "mistral",
        "pubmed",
        "research",
        "research-tool",
        "retrieval-augmented-generation",
        "search",
        "search-engine",
        "searxng",
        "self-hosted",
        "wikipedia"
      ],
      "size": 4873,
      "default_branch": "main"
    }
  },
  {
    "repo": "muellerberndt/mini-agi",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".env_example",
        ".gitignore",
        ".pylintrc",
        "docker.md",
        "dockerfile",
        "license.txt",
        "readme.md",
        "build.sh",
        "commands.py",
        "env.sh"
      ],
      "dirs": [
        ".github",
        "docs",
        "static"
      ]
    },
    "stats": {
      "total_issues_checked": 20,
      "llm_related_issues": 12,
      "llm_percentage": 60.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 2873,
      "repo_language": "Python",
      "repo_description": "MiniAGI is a simple general-purpose AI agent based on the OpenAI API.",
      "created_at": "2023-04-14T05:33:58Z",
      "updated_at": "2025-06-21T15:21:56Z"
    },
    "search_info": {
      "repo": "muellerberndt/mini-agi",
      "stars": 2873,
      "language": "Python",
      "description": "MiniAGI is a simple general-purpose AI agent based on the OpenAI API.",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/muellerberndt/mini-agi",
      "topics": [
        "agent",
        "agi",
        "artificial-intelligence",
        "gpt-3",
        "gpt-4"
      ],
      "size": 5013,
      "default_branch": "main"
    }
  },
  {
    "repo": "TracecatHQ/tracecat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".all-contributorsrc",
        ".env.example",
        ".gitignore",
        ".pre-commit-config.yaml",
        "claude.md",
        "code_of_conduct.md",
        "contributing.md",
        "caddyfile",
        "dockerfile",
        "dockerfile.dev"
      ],
      "dirs": [
        ".cursor",
        ".github",
        ".vscode",
        "alembic",
        "docs",
        "frontend",
        "img",
        "registry",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "TracecatHQ/tracecat",
      "stars": 2854,
      "language": "Python",
      "description": "Open source Tines / Splunk SOAR alternative. All-in-one automation platform (workflows, tables, cases) for security and IT teams.",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/TracecatHQ/tracecat",
      "topics": [
        "automation",
        "cybersecurity",
        "event-driven",
        "fastapi",
        "incident-response",
        "llm",
        "low-code",
        "monitoring",
        "nextjs",
        "openapi",
        "orchestration",
        "pydantic",
        "security",
        "temporalio",
        "workflow-engine"
      ],
      "size": 56662,
      "default_branch": "main"
    }
  },
  {
    "repo": "chrieke/prettymapp",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "changelog.md",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "conftest.py",
        "pylintrc",
        "pyproject.toml",
        "pytest.ini"
      ],
      "dirs": [
        ".streamlit",
        "cache",
        "prettymapp",
        "streamlit-prettymapp"
      ]
    },
    "search_info": {
      "repo": "chrieke/prettymapp",
      "stars": 2539,
      "language": "Python",
      "description": "\ud83d\uddbc\ufe0f Create beautiful maps from OpenStreetMap data in a streamlit webapp",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/chrieke/prettymapp",
      "topics": [
        "app",
        "art",
        "cartography",
        "geography",
        "map",
        "osm",
        "prettymaps",
        "streamlit"
      ],
      "size": 39217,
      "default_branch": "main"
    }
  },
  {
    "repo": "om-ai-lab/OmAgent",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "contributing.md",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "docker",
        "docs",
        "examples",
        "omagent-core"
      ]
    },
    "search_info": {
      "repo": "om-ai-lab/OmAgent",
      "stars": 2509,
      "language": "Python",
      "description": "Build multimodal language agents for fast prototype and production",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/om-ai-lab/OmAgent",
      "topics": [
        "agent",
        "chatbot",
        "gemini",
        "gpt",
        "gpt4",
        "gradio",
        "language-agent",
        "large-language-models",
        "llama",
        "llava",
        "llm",
        "multimodal",
        "multimodal-agent",
        "openai",
        "python",
        "rag",
        "smart-hardware",
        "vision-and-language",
        "vlm",
        "workflow"
      ],
      "size": 11956,
      "default_branch": "main"
    }
  },
  {
    "repo": "IntelligenzaArtificiale/Free-Auto-GPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".env",
        "autogpt.py",
        "babyagi.py",
        "camel.py",
        "license",
        "metaprompt.py",
        "readme.md",
        "transformersagent.py",
        "cookiesbing.json",
        "requirements.txt"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        "babyagi",
        "embedding",
        "freellm",
        "otheragent",
        "plugandplaystart",
        "hfagent"
      ]
    },
    "stats": {
      "total_issues_checked": 15,
      "llm_related_issues": 13,
      "llm_percentage": 86.7,
      "issues_with_labels": 1,
      "label_percentage": 6.7,
      "avg_labels_per_issue": 0.13,
      "total_repo_labels": 9,
      "repo_stars": 2499,
      "repo_language": "Python",
      "repo_description": "Free Auto GPT with NO paids API is a repository that offers a simple version of Auto GPT, an autonom",
      "created_at": "2023-04-19T07:12:11Z",
      "updated_at": "2025-06-19T06:04:05Z"
    },
    "search_info": {
      "repo": "IntelligenzaArtificiale/Free-Auto-GPT",
      "stars": 2499,
      "language": "Python",
      "description": "Free Auto GPT with NO paids API is a repository that offers a simple version of Auto GPT, an autonomous AI agent capable of performing tasks independe",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/IntelligenzaArtificiale/Free-Auto-GPT",
      "topics": [
        "ai",
        "auto-gpt",
        "autogpt",
        "autogpt-no-paid-api",
        "chatgpt",
        "chatgpt-api",
        "chatgpt-free",
        "democratize-ai",
        "free-autogpt",
        "gpt-4",
        "gpt-4-api",
        "gpt4",
        "open-source-auto-gpt",
        "open-source-gpt",
        "openai",
        "python",
        "reverse-engineering"
      ],
      "size": 36267,
      "default_branch": "main"
    }
  },
  {
    "repo": "jackmpcollins/magentic",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.template",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "contributing.md",
        "license",
        "makefile",
        "readme.md",
        "mkdocs.yml",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "docs",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "jackmpcollins/magentic",
      "stars": 2322,
      "language": "Python",
      "description": "Seamlessly integrate LLMs as Python functions",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/jackmpcollins/magentic",
      "topics": [
        "agent",
        "agentic",
        "ai",
        "chatbot",
        "chatgpt",
        "gpt",
        "llm",
        "magenta",
        "magentic",
        "magnetic",
        "openai",
        "openai-api",
        "prompt",
        "pydantic"
      ],
      "size": 8182,
      "default_branch": "main"
    }
  },
  {
    "repo": "business-science/ai-data-science-team",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 2,
        "llm_usage": 1
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "license",
        "manifest.in",
        "readme.md",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": [
        ".streamlit",
        ".vscode",
        "ai_data_science_team",
        "apps",
        "data",
        "examples",
        "img"
      ]
    },
    "stats": {
      "total_issues_checked": 19,
      "llm_related_issues": 8,
      "llm_percentage": 42.1,
      "issues_with_labels": 9,
      "label_percentage": 47.4,
      "avg_labels_per_issue": 0.53,
      "total_repo_labels": 9,
      "repo_stars": 2130,
      "repo_language": "Python",
      "repo_description": "An AI-powered data science team of agents to help you perform common data science tasks 10X faster.",
      "created_at": "2024-12-11T16:07:45Z",
      "updated_at": "2025-06-21T13:03:16Z"
    },
    "search_info": {
      "repo": "business-science/ai-data-science-team",
      "stars": 2130,
      "language": "Python",
      "description": "An AI-powered data science team of agents to help you perform common data science tasks 10X faster.",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/business-science/ai-data-science-team",
      "topics": [
        "agents",
        "ai",
        "ai-engineer",
        "ai-engineering",
        "copilot",
        "data-science",
        "data-scientist",
        "generative-ai",
        "gpt",
        "machine-learning",
        "ml-engineer",
        "ml-engineering",
        "openai"
      ],
      "size": 24010,
      "default_branch": "master"
    }
  },
  {
    "repo": "LlmKira/Openaibot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.exp",
        ".gitignore",
        ".nerve.toml",
        ".pre-commit-config.yaml",
        "citation.cff",
        "dockerfile",
        "license",
        "notice.md",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "app",
        "docs",
        "llmkira",
        "playground",
        "tests"
      ]
    },
    "search_info": {
      "repo": "LlmKira/Openaibot",
      "stars": 1987,
      "language": "Python",
      "description": "\u26a1\ufe0f Build Your Own chatgpt Bot|\ud83e\uddc0 Discord/Slack/Kook/Telegram |\u26d3 ToolCall|\ud83d\udd16 Plugin Support | \ud83c\udf3b out-of-box | gpt-4o",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/LlmKira/Openaibot",
      "topics": [
        "assistant",
        "chat-gpt",
        "discordbot",
        "gpt-4",
        "gpt-4-vision-preview",
        "gpt-4o",
        "gpt-4o-mini",
        "kook-bot",
        "openai",
        "slack-bot"
      ],
      "size": 18779,
      "default_branch": "main"
    }
  },
  {
    "repo": "mkhorasani/Streamlit-Authenticator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "license",
        "readme.md",
        "config.yaml",
        "readthedocs.yaml",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": [
        ".github",
        "docs",
        "graphics",
        "streamlit_authenticator",
        "tests"
      ]
    },
    "search_info": {
      "repo": "mkhorasani/Streamlit-Authenticator",
      "stars": 1943,
      "language": "Python",
      "description": "A secure authentication module to manage user access in a Streamlit application.",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/mkhorasani/Streamlit-Authenticator",
      "topics": [
        "2fa",
        "authentication",
        "oauth2",
        "python",
        "streamlit",
        "streamlit-component"
      ],
      "size": 4603,
      "default_branch": "main"
    }
  },
  {
    "repo": "fiatrete/OpenDAN-Personal-AI-OS",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".pylintrc",
        "dockerfile",
        "license",
        "readme.md",
        "build_all_in_one.sh",
        "package-lock.json"
      ],
      "dirs": [
        "poc",
        "doc",
        "rootfs",
        "src",
        "test"
      ]
    },
    "search_info": {
      "repo": "fiatrete/OpenDAN-Personal-AI-OS",
      "stars": 1852,
      "language": "Python",
      "description": "OpenDAN is an open source Personal AI OS , which consolidates various AI modules in one place for your personal use.",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/fiatrete/OpenDAN-Personal-AI-OS",
      "topics": [
        "agent",
        "ai",
        "autogpt",
        "llm",
        "openai",
        "os"
      ],
      "size": 7343,
      "default_branch": "main"
    }
  },
  {
    "repo": "altryne/chatGPT-telegram-bot",
    "suitable": false,
    "reason": "NO_ISSUES_ENABLED",
    "search_info": {
      "repo": "altryne/chatGPT-telegram-bot",
      "stars": 1666,
      "language": "Python",
      "description": "This is a very early attempt at having chatGPT work within a telegram bot",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/altryne/chatGPT-telegram-bot",
      "topics": [],
      "size": 785,
      "default_branch": "main"
    }
  },
  {
    "repo": "jrieke/traingenerator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 5,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "contributing.md",
        "license",
        "pipfile",
        "pipfile.lock",
        "procfile",
        "readme.md",
        "heroku-setup.sh",
        "requirements-dev.txt",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "app",
        "data",
        "docs",
        "scripts",
        "templates",
        "tests"
      ]
    },
    "search_info": {
      "repo": "jrieke/traingenerator",
      "stars": 1372,
      "language": "Python",
      "description": "\ud83e\uddd9 A web app to generate template code for machine learning",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/jrieke/traingenerator",
      "topics": [
        "deep-learning",
        "machine-learning",
        "machine-learning-tutorials",
        "pytorch",
        "pytorch-ignite",
        "pytorch-lightning",
        "scikit-learn",
        "sklearn",
        "streamlit",
        "template",
        "tensorflow",
        "webapp",
        "website"
      ],
      "size": 10335,
      "default_branch": "main"
    }
  },
  {
    "repo": "MLSysOps/MLE-agent",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 3,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "contributing.md",
        "license",
        "manifest.in",
        "readme.md",
        "requirements.txt",
        "setup.cfg",
        "setup.py"
      ],
      "dirs": [
        ".github",
        "assets",
        "mle",
        "tests",
        "web"
      ]
    },
    "search_info": {
      "repo": "MLSysOps/MLE-agent",
      "stars": 1297,
      "language": "Python",
      "description": "\ud83e\udd16 MLE-Agent: Your intelligent companion for seamless AI engineering and research. \ud83d\udd0d Integrate with arxiv and paper with code to provide better code/re",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/MLSysOps/MLE-agent",
      "topics": [
        "agent",
        "ai",
        "llm",
        "ml",
        "mle",
        "mlops"
      ],
      "size": 2340,
      "default_branch": "main"
    }
  },
  {
    "repo": "CJackHwang/AIstudioProxyAPI",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 4,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "excluded_models.txt",
        "fetch_camoufox_data.py",
        "gui_launcher.py",
        "index.html",
        "launch_camoufox.py"
      ],
      "dirs": [
        "api_utils",
        "auth_profiles",
        "browser_utils",
        "certs",
        "config",
        "deprecated_javascript_version",
        "docker",
        "docs",
        "logging_utils",
        "models"
      ]
    },
    "search_info": {
      "repo": "CJackHwang/AIstudioProxyAPI",
      "stars": 1277,
      "language": "Python",
      "description": "\u4e00\u4e2aPython + FastAPI + Playwright + Camoufox \u4e2d\u95f4\u5c42\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u517c\u5bb9 OpenAI API\u4e14\u652f\u6301\u53c2\u6570\u8bbe\u7f6e\u3001toolcall\u548cab\u6d4b\u8bd5\u6a21\u578b\u7b49\uff0c\u901a\u8fc7\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 Google AI Studio \u7f51\u9875\u7248\u7684\u5bf9\u8bdd\uff0c\u5e76\u540c\u6837\u6309\u7167\u6807\u51c6\u683c\u5f0f\u8fd4\u56de\u8f93\u51fa\u7684\u5de5\u5177\u3002\u8bfe\u4f59\u65f6\u95f4\u6709\u9650\uff0c\u968f\u7f18\u66f4",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/CJackHwang/AIstudioProxyAPI",
      "topics": [],
      "size": 7017,
      "default_branch": "main"
    }
  },
  {
    "repo": "jakobhoeg/nextjs-ollama-llm-ui",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".example.env",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "components.json",
        "next.config.mjs",
        "ollama-nextjs-ui.gif",
        "package-lock.json"
      ],
      "dirs": [
        "public",
        "src"
      ]
    },
    "search_info": {
      "repo": "jakobhoeg/nextjs-ollama-llm-ui",
      "stars": 1265,
      "language": "TypeScript",
      "description": "Fully-featured web interface for Ollama LLMs",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/jakobhoeg/nextjs-ollama-llm-ui",
      "topics": [
        "ai",
        "chatbot",
        "gemma",
        "llm",
        "local",
        "localstorage",
        "mistral",
        "mistral-7b",
        "nextjs",
        "nextjs14",
        "offline",
        "ollama",
        "openai",
        "react",
        "shadcn",
        "tailwindcss",
        "typescript"
      ],
      "size": 6053,
      "default_branch": "master"
    }
  },
  {
    "repo": "daveebbelaar/python-whatsapp-bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "licence.txt",
        "readme.md",
        "example.env",
        "requirements.txt",
        "run.py"
      ],
      "dirs": [
        "app",
        "data",
        "docs",
        "img",
        "start"
      ]
    },
    "stats": {
      "total_issues_checked": 9,
      "llm_related_issues": 4,
      "llm_percentage": 44.4,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 1259,
      "repo_language": "Python",
      "repo_description": "Build AI WhatsApp Bots with Pure Python",
      "created_at": "2023-10-10T01:34:50Z",
      "updated_at": "2025-06-21T14:48:53Z"
    },
    "search_info": {
      "repo": "daveebbelaar/python-whatsapp-bot",
      "stars": 1259,
      "language": "Python",
      "description": "Build AI WhatsApp Bots with Pure Python",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/daveebbelaar/python-whatsapp-bot",
      "topics": [
        "ai",
        "flask",
        "llm",
        "openai",
        "python",
        "whatsapp"
      ],
      "size": 818,
      "default_branch": "main"
    }
  },
  {
    "repo": "PablocFonseca/streamlit-aggrid",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".gitmodules",
        ".yarnrc.yml",
        "license",
        "manifest.in",
        "readme.md",
        "example.gif",
        "group_selection_example.gif",
        "package.json",
        "poetry.lock"
      ],
      "dirs": [
        ".github",
        ".streamlit",
        ".yarn",
        "st_aggrid",
        "test"
      ]
    },
    "search_info": {
      "repo": "PablocFonseca/streamlit-aggrid",
      "stars": 1202,
      "language": "Python",
      "description": "Implementation of Ag-Grid component for Streamlit",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/PablocFonseca/streamlit-aggrid",
      "topics": [
        "component",
        "grid",
        "streamlit",
        "table"
      ],
      "size": 21837,
      "default_branch": "main"
    }
  },
  {
    "repo": "kantord/SeaGOAT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        ".licrc",
        ".markdownlintignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "changelog.md",
        "code_of_conduct.md",
        "contributing.md",
        "license"
      ],
      "dirs": [
        ".github",
        "asciinema",
        "assets",
        "docs",
        "seagoat",
        "tests",
        "typings"
      ]
    },
    "search_info": {
      "repo": "kantord/SeaGOAT",
      "stars": 1159,
      "language": "Python",
      "description": "local-first semantic code search engine",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/kantord/SeaGOAT",
      "topics": [
        "ai",
        "ai-project",
        "code-search",
        "code-search-engine",
        "embeddings",
        "grep",
        "grep-like",
        "hacktoberfest",
        "hacktoberfest2023",
        "llm",
        "regular-expression",
        "ripgrep",
        "vector-database",
        "vector-embeddings"
      ],
      "size": 20922,
      "default_branch": "main"
    }
  },
  {
    "repo": "peterw/Chat-with-Github-Repo",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".env.example",
        ".flake8",
        ".gitignore",
        "license",
        "readme.md",
        "dev-requirements.txt",
        "pyproject.toml",
        "requirements.txt"
      ],
      "dirs": [
        ".vscode",
        "src"
      ]
    },
    "stats": {
      "total_issues_checked": 14,
      "llm_related_issues": 12,
      "llm_percentage": 85.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 1158,
      "repo_language": "Python",
      "repo_description": "This repository contains two Python scripts that demonstrate how to create a chatbot using Streamlit",
      "created_at": "2023-04-25T02:41:24Z",
      "updated_at": "2025-06-10T04:01:36Z"
    },
    "search_info": {
      "repo": "peterw/Chat-with-Github-Repo",
      "stars": 1158,
      "language": "Python",
      "description": "This repository contains two Python scripts that demonstrate how to create a chatbot using Streamlit, OpenAI GPT-3.5-turbo, and Activeloop's Deep Lake",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/peterw/Chat-with-Github-Repo",
      "topics": [],
      "size": 32,
      "default_branch": "main"
    }
  },
  {
    "repo": "MemeMeow-Studio/MemeMeow",
    "suitable": false,
    "reason": "NO_LLM_USAGE",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 6,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "api.md",
        "api.py",
        "app.py",
        "base.py",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        ".streamlit",
        ".vscode",
        "config",
        "data",
        "middleware",
        "resource_packs",
        "screenshots",
        "services",
        "stpages"
      ]
    },
    "stats": {
      "total_issues_checked": 7,
      "llm_related_issues": 0,
      "llm_percentage": 0.0,
      "issues_with_labels": 6,
      "label_percentage": 85.7,
      "avg_labels_per_issue": 1.14,
      "total_repo_labels": 10,
      "repo_stars": 1124,
      "repo_language": "Python",
      "repo_description": "\u667a\u80fd\u68c0\u7d22\u5f20\u7ef4\u4e3a\u8868\u60c5\u5305",
      "created_at": "2025-02-11T13:28:11Z",
      "updated_at": "2025-06-21T10:03:59Z"
    },
    "search_info": {
      "repo": "MemeMeow-Studio/MemeMeow",
      "stars": 1124,
      "language": "Python",
      "description": "\u667a\u80fd\u68c0\u7d22\u5f20\u7ef4\u4e3a\u8868\u60c5\u5305",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/MemeMeow-Studio/MemeMeow",
      "topics": [
        "artificial-intelligence",
        "embeddings-word2vec",
        "python",
        "streamlit",
        "streamlit-webapp"
      ],
      "size": 40229,
      "default_branch": "main"
    }
  },
  {
    "repo": "szczyglis-dev/py-gpt",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 3,
        "framework_files": 2,
        "llm_usage": 3
      },
      "files": [
        ".gitignore",
        ".readthedocs.yaml",
        "changelog.md",
        "contributing.md",
        "install.md",
        "license",
        "pygpt_linux_pad_file.xml",
        "pygpt_windows_pad_file.xml",
        "readme.md",
        "security.md"
      ],
      "dirs": [
        ".github",
        "bin",
        "docs",
        "examples",
        "snap",
        "src",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 19,
      "llm_related_issues": 15,
      "llm_percentage": 78.9,
      "issues_with_labels": 1,
      "label_percentage": 5.3,
      "avg_labels_per_issue": 0.05,
      "total_repo_labels": 11,
      "repo_stars": 1075,
      "repo_language": "Python",
      "repo_description": "Desktop AI Assistant powered by o1, o3, GPT-4, GPT-4 Vision, Gemini, Claude, Llama 3, DeepSeek, Biel",
      "created_at": "2023-04-09T23:48:06Z",
      "updated_at": "2025-06-21T22:52:42Z"
    },
    "search_info": {
      "repo": "szczyglis-dev/py-gpt",
      "stars": 1075,
      "language": "Python",
      "description": "Desktop AI Assistant powered by o1, o3, GPT-4, GPT-4 Vision, Gemini, Claude, Llama 3, DeepSeek, Bielik, DALL-E,  chat, vision, voice control, image ge",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/szczyglis-dev/py-gpt",
      "topics": [
        "ai",
        "ai-assistant",
        "artificial-intelligence",
        "autonomous-agent",
        "chatbot",
        "claude",
        "dalle-3",
        "deepseek",
        "desktop-app",
        "gemini",
        "gpt-4",
        "gpt-4-vision",
        "llama-index",
        "llama3",
        "llm",
        "o1",
        "o3-mini",
        "ollama",
        "openai",
        "perplexity"
      ],
      "size": 42994,
      "default_branch": "master"
    }
  },
  {
    "repo": "yym68686/ChatGPT-Telegram-Bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 7,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        ".gitmodules",
        "dockerfile",
        "dockerfile.build",
        "dockerfile.hugging.build",
        "license",
        "readme.md",
        "readme_cn.md",
        "aient"
      ],
      "dirs": [
        ".github",
        "assets",
        "test",
        "utils"
      ]
    },
    "search_info": {
      "repo": "yym68686/ChatGPT-Telegram-Bot",
      "stars": 1060,
      "language": "Python",
      "description": "TeleChat: \ud83e\udd16\ufe0f an AI chat Telegram bot can Web Search Powered by GPT-3.5/4/4 Turbo/4o, DALL\u00b7E 3, Groq, Gemini 1.5 Pro/Flash and the official Claude2.1/3",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/yym68686/ChatGPT-Telegram-Bot",
      "topics": [
        "agent",
        "chatgpt",
        "claude",
        "claude-3-opus",
        "claude-api",
        "docker",
        "fly-io",
        "gemini",
        "gpt-4-api",
        "groq",
        "koyeb",
        "langchain",
        "mixtral-8x7b",
        "python-telegram-bot",
        "replit",
        "replit-bot",
        "telegram-bot",
        "vertex-ai",
        "zeabur"
      ],
      "size": 1043,
      "default_branch": "main"
    }
  },
  {
    "repo": "kreneskyp/ix",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".coveragerc",
        ".dockerignore",
        ".env.template",
        ".flake8",
        ".gitignore",
        ".prettierignore",
        "changelog.md",
        "dockerfile",
        "license",
        "makefile"
      ],
      "dirs": [
        ".github",
        "bin",
        "client_config",
        "docs",
        "frontend",
        "ix",
        "test_data",
        "vault"
      ]
    },
    "stats": {
      "total_issues_checked": 4,
      "llm_related_issues": 3,
      "llm_percentage": 75.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 10,
      "repo_stars": 1030,
      "repo_language": "Python",
      "repo_description": "Autonomous GPT-4 agent platform",
      "created_at": "2023-04-05T03:05:22Z",
      "updated_at": "2025-06-18T01:57:09Z"
    },
    "search_info": {
      "repo": "kreneskyp/ix",
      "stars": 1030,
      "language": "Python",
      "description": "Autonomous GPT-4 agent platform",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/kreneskyp/ix",
      "topics": [
        "ai",
        "gpt-4",
        "openai",
        "python"
      ],
      "size": 6769,
      "default_branch": "master"
    }
  },
  {
    "repo": "Dicklesworthstone/swiss_army_llama",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env",
        ".gitignore",
        ".python-version",
        "dockerfile",
        "readme.md",
        "add_mount.sh",
        "database_functions.py",
        "embeddings_data_models.py",
        "end_to_end_tests.py",
        "environment.yml"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "grammar_files",
        "image_files",
        "models",
        "sample_input_files_for_end_to_end_tests",
        "tests"
      ]
    },
    "search_info": {
      "repo": "Dicklesworthstone/swiss_army_llama",
      "stars": 1017,
      "language": "Python",
      "description": "A FastAPI service for semantic text search using precomputed embeddings and advanced similarity measures, with built-in support for various file types",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/Dicklesworthstone/swiss_army_llama",
      "topics": [
        "embedding-similarity",
        "embedding-vectors",
        "embeddings",
        "llama2",
        "llamacpp",
        "semantic-search"
      ],
      "size": 7603,
      "default_branch": "main"
    }
  },
  {
    "repo": "EmbeddedLLM/JamAIBase",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".flake8",
        ".gitattributes",
        ".gitignore",
        ".gitmodules",
        ".prettierignore",
        ".prettierrc",
        "changelog.md",
        "jamai_base_cover.png"
      ],
      "dirs": [
        ".github",
        "clients",
        "docker",
        "scripts",
        "services"
      ]
    },
    "search_info": {
      "repo": "EmbeddedLLM/JamAIBase",
      "stars": 1017,
      "language": "Python",
      "description": "The collaborative spreadsheet for AI. Chain cells into powerful pipelines, experiment with prompts and models, and evaluate LLM responses in real-time",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/EmbeddedLLM/JamAIBase",
      "topics": [
        "agents",
        "ai",
        "ai-agents-framework",
        "baas",
        "backend-as-a-service",
        "chatbot",
        "chatgpt",
        "intelligent-spreadsheet",
        "lancedb",
        "llama3-1",
        "llm",
        "llm-ops",
        "orchestration",
        "python",
        "rag",
        "retrieval-augmented-generation",
        "serverless",
        "spreadsheet",
        "svelte",
        "workflow"
      ],
      "size": 14019,
      "default_branch": "main"
    }
  },
  {
    "repo": "PromtEngineer/Verbi",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 2,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "__init__.py",
        "example.env",
        "piper_server.py",
        "requirements.txt",
        "run_voice_assistant.py",
        "setup.py"
      ],
      "dirs": [
        "voice_assistant",
        "voice_samples"
      ]
    },
    "stats": {
      "total_issues_checked": 13,
      "llm_related_issues": 11,
      "llm_percentage": 84.6,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 1017,
      "repo_language": "Python",
      "repo_description": "A modular voice assistant application for experimenting with state-of-the-art transcription, respons",
      "created_at": "2024-05-20T04:36:58Z",
      "updated_at": "2025-06-21T12:54:02Z"
    },
    "search_info": {
      "repo": "PromtEngineer/Verbi",
      "stars": 1017,
      "language": "Python",
      "description": "A modular voice assistant application for experimenting with state-of-the-art transcription, response generation, and text-to-speech models. Supports ",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/PromtEngineer/Verbi",
      "topics": [],
      "size": 311,
      "default_branch": "main"
    }
  },
  {
    "repo": "HKUDS/Auto-Deep-Research",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".env.template",
        ".gitignore",
        "manifest.in",
        "readme.md",
        "constant.py",
        "pyproject.toml",
        "setup.cfg"
      ],
      "dirs": [
        "assets",
        "autoagent",
        "loop_utils"
      ]
    },
    "search_info": {
      "repo": "HKUDS/Auto-Deep-Research",
      "stars": 1014,
      "language": "Python",
      "description": "\"Your Fully-Automated Personal AI Assistant, and Open-Source & Cost-Efficient Alternative to OpenAI's Deep Research\"",
      "search_query": "ai agent openai language:python stars:>3",
      "search_description": "AI agent applications",
      "url": "https://github.com/HKUDS/Auto-Deep-Research",
      "topics": [
        "agent",
        "deep-research",
        "llm"
      ],
      "size": 1040,
      "default_branch": "main"
    }
  },
  {
    "repo": "cirediatpl/FigmaChain",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".env.example",
        ".gitignore",
        "readme.md",
        "chatbot.py",
        "generatecode.py",
        "output.html",
        "requirements.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 5,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 972,
      "repo_language": "Python",
      "repo_description": "FigmaChain is a set of Python scripts that generate HTML/CSS code based on Figma designs. Using Open",
      "created_at": "2023-04-27T22:09:01Z",
      "updated_at": "2025-06-19T07:04:11Z"
    },
    "search_info": {
      "repo": "cirediatpl/FigmaChain",
      "stars": 972,
      "language": "Python",
      "description": "FigmaChain is a set of Python scripts that generate HTML/CSS code based on Figma designs. Using OpenAI's GPT-3 model, FigmaChain enables developers to",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/cirediatpl/FigmaChain",
      "topics": [],
      "size": 15,
      "default_branch": "main"
    }
  },
  {
    "repo": "madox2/vim-ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "demo.gif",
        "install.sh",
        "pytest.ini",
        "roles-default.ini",
        "roles-example.ini"
      ],
      "dirs": [
        ".github",
        "autoload",
        "doc",
        "ftdetect",
        "ftplugin",
        "plugin",
        "py",
        "syntax",
        "tests"
      ]
    },
    "search_info": {
      "repo": "madox2/vim-ai",
      "stars": 957,
      "language": "Python",
      "description": "AI-powered code assistant for Vim. OpenAI and ChatGPT plugin for Vim and Neovim.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/madox2/vim-ai",
      "topics": [
        "chatgpt",
        "code-generation",
        "gemini",
        "gpt-4",
        "llm",
        "neovim",
        "openai",
        "vim"
      ],
      "size": 16304,
      "default_branch": "main"
    }
  },
  {
    "repo": "opengeos/streamlit-geospatial",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "home.py",
        "license",
        "procfile",
        "readme.md",
        "environment-bk.yml",
        "index.html",
        "packages.txt",
        "postbuild"
      ],
      "dirs": [
        ".github",
        "data",
        "pages"
      ]
    },
    "search_info": {
      "repo": "opengeos/streamlit-geospatial",
      "stars": 947,
      "language": "Python",
      "description": "A multi-page streamlit app for geospatial",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/opengeos/streamlit-geospatial",
      "topics": [
        "data-science",
        "datascience",
        "dataviz",
        "geopython",
        "geospatial",
        "housing-data",
        "housing-market",
        "huggingface",
        "mapping",
        "open-source",
        "python",
        "real-estate",
        "streamlit",
        "streamlit-webapp"
      ],
      "size": 1199,
      "default_branch": "master"
    }
  },
  {
    "repo": "iusztinpaul/energy-forecasting",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.default",
        ".gitignore",
        "license",
        "readme.md",
        "readme_cicd.md",
        "readme_deploy.md"
      ],
      "dirs": [
        ".github",
        "airflow",
        "app-api",
        "app-frontend",
        "app-monitoring",
        "batch-prediction-pipeline",
        "deploy",
        "feature-pipeline",
        "images",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "iusztinpaul/energy-forecasting",
      "stars": 928,
      "language": "Python",
      "description": "\ud83c\udf00 \ud835\udde7\ud835\uddf5\ud835\uddf2 \ud835\uddd9\ud835\ude02\ud835\uddf9\ud835\uddf9 \ud835\udde6\ud835\ude01\ud835\uddee\ud835\uddf0\ud835\uddf8 \ud835\udff3-\ud835\udde6\ud835\ude01\ud835\uddf2\ud835\uddfd\ud835\ude00 \ud835\udde0\ud835\udddf\ud835\udde2\ud835\uddfd\ud835\ude00 \ud835\uddd9\ud835\uddff\ud835\uddee\ud835\uddfa\ud835\uddf2\ud835\ude04\ud835\uddfc\ud835\uddff\ud835\uddf8 | \ud835\udddf\ud835\uddf2\ud835\uddee\ud835\uddff\ud835\uddfb \ud835\udde0\ud835\udddf\ud835\uddd8 & \ud835\udde0\ud835\udddf\ud835\udde2\ud835\uddfd\ud835\ude00 for free by designing, building and deploying an end-to-end ML batch system ~ \ud835\ude34\ud835\ude30\ud835\ude36\ud835\ude33\ud835\ude24\ud835\ude26 \ud835\ude24\ud835\ude30\ud835\ude25\ud835\ude26",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/iusztinpaul/energy-forecasting",
      "topics": [
        "3-pipeline-design",
        "airflow",
        "batch-processing",
        "cicd",
        "data-versioning",
        "docker",
        "fastapi",
        "feature-store",
        "gcp",
        "github-actions",
        "great-expectations",
        "hopsworks",
        "ml-monitoring",
        "mlops",
        "model-registry",
        "poetry",
        "python",
        "sktime",
        "streamlit",
        "weights-and-biases"
      ],
      "size": 4296,
      "default_branch": "main"
    }
  },
  {
    "repo": "JohnSnowLabs/nlu",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 3,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "manifest.in",
        "readme.md",
        "version",
        "pytest.ini",
        "setup.py"
      ],
      "dirs": [
        ".github",
        "conda",
        "docs",
        "examples",
        "nlu",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "JohnSnowLabs/nlu",
      "stars": 922,
      "language": "Python",
      "description": "1 line for thousands of State of The Art NLP models in hundreds of languages  The fastest and most accurate way to solve text problems.",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/JohnSnowLabs/nlu",
      "topics": [
        "bert-embedding",
        "dependency-parsing",
        "entity-resolution",
        "language-detection",
        "lemmatizer",
        "named-entity-recognition",
        "natural-language-understanding",
        "nlu",
        "pandas",
        "sentence-embeddings",
        "sentiment-analysis",
        "sentiment-classifier",
        "seq2seq",
        "spell-checker",
        "streamlit",
        "t5",
        "text-classification",
        "text-summarization",
        "text-translation",
        "transformers"
      ],
      "size": 496718,
      "default_branch": "master"
    }
  },
  {
    "repo": "SkywalkerDarren/chatWeb",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 7,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "ai.py",
        "api.py",
        "config.example.json",
        "config.py",
        "console.py",
        "contents.py",
        "docker-compose.yml"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 15,
      "llm_related_issues": 7,
      "llm_percentage": 46.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 905,
      "repo_language": "Python",
      "repo_description": "ChatWeb can crawl web pages, read PDF, DOCX, TXT, and extract the main content, then answer your que",
      "created_at": "2023-03-09T12:15:07Z",
      "updated_at": "2025-06-16T12:02:38Z"
    },
    "search_info": {
      "repo": "SkywalkerDarren/chatWeb",
      "stars": 905,
      "language": "Python",
      "description": "ChatWeb can crawl web pages, read PDF, DOCX, TXT, and extract the main content, then answer your questions based on the content, or summarize the key ",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/SkywalkerDarren/chatWeb",
      "topics": [
        "ai",
        "chatgpt",
        "crawler",
        "docx",
        "embedding",
        "faiss",
        "gpt",
        "gpt-35-turbo",
        "news-extractor",
        "newspaper",
        "openai",
        "pdf",
        "pgvector",
        "postgresql",
        "vector-database"
      ],
      "size": 101,
      "default_branch": "master"
    }
  },
  {
    "repo": "strnad/CrewAI-Studio",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".dockerignore",
        ".env_example",
        ".gitattributes",
        ".gitignore",
        "dockerfile",
        "licence",
        "readme.md",
        "docker-compose-no_env.yaml",
        "docker-compose.yaml",
        "install_conda.bat"
      ],
      "dirs": [
        ".github",
        ".streamlit",
        "app",
        "img"
      ]
    },
    "stats": {
      "total_issues_checked": 11,
      "llm_related_issues": 6,
      "llm_percentage": 54.5,
      "issues_with_labels": 1,
      "label_percentage": 9.1,
      "avg_labels_per_issue": 0.09,
      "total_repo_labels": 9,
      "repo_stars": 882,
      "repo_language": "Python",
      "repo_description": "A user-friendly, multi-platform GUI for managing and running CrewAI agents and tasks. Supports Conda",
      "created_at": "2024-05-30T08:15:40Z",
      "updated_at": "2025-06-21T14:06:34Z"
    },
    "search_info": {
      "repo": "strnad/CrewAI-Studio",
      "stars": 882,
      "language": "Python",
      "description": "A user-friendly, multi-platform GUI for managing and running CrewAI agents and tasks. Supports Conda and virtual environments, no coding needed. ",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/strnad/CrewAI-Studio",
      "topics": [
        "agents",
        "ai",
        "crewai",
        "crewaigui",
        "crewaiui",
        "gui",
        "no-code",
        "streamlit"
      ],
      "size": 1269,
      "default_branch": "main"
    }
  },
  {
    "repo": "arnaudmiribel/streamlit-extras",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".flake8",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "contributing.md",
        "license",
        "readme.md",
        "mkdocs.yml",
        "netlify.toml",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "docs",
        "gallery",
        "overrides",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "arnaudmiribel/streamlit-extras",
      "stars": 876,
      "language": "Python",
      "description": "Discover, try, install and share Streamlit re-usable bits we call \"extras\"!",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/arnaudmiribel/streamlit-extras",
      "topics": [
        "data",
        "python",
        "streamlit",
        "ui",
        "web"
      ],
      "size": 2622,
      "default_branch": "main"
    }
  },
  {
    "repo": "dissorial/doc-chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".eslintrc.json",
        ".gitignore",
        ".prettierrc",
        "readme.md",
        "next.config.js",
        "package.json",
        "postcss.config.cjs",
        "tailwind.config.cjs",
        "tsconfig.json"
      ],
      "dirs": [
        "components",
        "declarations",
        "hooks",
        "libs",
        "pages",
        "public",
        "styles",
        "tmp",
        "types",
        "utils"
      ]
    },
    "search_info": {
      "repo": "dissorial/doc-chatbot",
      "stars": 858,
      "language": "TypeScript",
      "description": "Document chatbot \u2014 multiple files, topics, chat windows and chat history. Powered by GPT.",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/dissorial/doc-chatbot",
      "topics": [
        "chat",
        "chatbot",
        "document-embedding",
        "gpt-3",
        "gpt-4",
        "langchain",
        "mongoose",
        "nextjs",
        "openai",
        "openai-api",
        "pdf-processing",
        "pinecone",
        "reactjs",
        "tailwindcss",
        "typescript",
        "vectorization"
      ],
      "size": 2660,
      "default_branch": "master"
    }
  },
  {
    "repo": "explosion/spacy-streamlit",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "requirements.txt",
        "setup.cfg",
        "setup.py"
      ],
      "dirs": [
        "bin",
        "examples",
        "spacy_streamlit"
      ]
    },
    "search_info": {
      "repo": "explosion/spacy-streamlit",
      "stars": 841,
      "language": "Python",
      "description": "\ud83d\udc51 spaCy building blocks and visualizers for Streamlit apps",
      "search_query": "RAG OR \"retrieval augmented\" streamlit language:python stars:>3",
      "search_description": "RAG document analysis apps",
      "url": "https://github.com/explosion/spacy-streamlit",
      "topics": [
        "dependency-parsing",
        "machine-learning",
        "named-entity-recognition",
        "natural-language-processing",
        "ner",
        "nlp",
        "part-of-speech-tagging",
        "spacy",
        "streamlit",
        "text-classification",
        "tokenization",
        "visualizer",
        "visualizers",
        "word-vectors"
      ],
      "size": 63,
      "default_branch": "master"
    }
  },
  {
    "repo": "junruxiong/IncarnaMind",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 7
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "configparser.ini",
        "convo_qa_chain.py",
        "docs2db.py",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "data",
        "figs",
        "toolkit"
      ]
    },
    "stats": {
      "total_issues_checked": 10,
      "llm_related_issues": 8,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 10,
      "repo_stars": 797,
      "repo_language": "Python",
      "repo_description": "Connect and chat with your multiple documents (pdf and txt) through GPT 3.5, GPT-4 Turbo, Claude and",
      "created_at": "2023-08-25T14:13:15Z",
      "updated_at": "2025-06-07T13:49:06Z"
    },
    "search_info": {
      "repo": "junruxiong/IncarnaMind",
      "stars": 797,
      "language": "Python",
      "description": "Connect and chat with your multiple documents (pdf and txt) through GPT 3.5, GPT-4 Turbo, Claude and Local Open-Source LLMs",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/junruxiong/IncarnaMind",
      "topics": [
        "ai",
        "chatbot",
        "generative-ai",
        "gpt",
        "langchain",
        "llm",
        "nlp",
        "openai",
        "pdf"
      ],
      "size": 52915,
      "default_branch": "main"
    }
  },
  {
    "repo": "talkingwallace/ChatGPT-Paper-Reader",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "readme.md",
        "alexnet.pdf",
        "console.png",
        "example.py",
        "gui.py",
        "requirements.txt",
        "test.py",
        "webui.png"
      ],
      "dirs": [
        "gpt_reader",
        "img"
      ]
    },
    "stats": {
      "total_issues_checked": 16,
      "llm_related_issues": 14,
      "llm_percentage": 87.5,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 757,
      "repo_language": "Python",
      "repo_description": "This repo offers a simple interface that helps you to read&summerize research papers in pdf format. ",
      "created_at": "2023-03-06T07:48:58Z",
      "updated_at": "2025-05-07T21:21:28Z"
    },
    "search_info": {
      "repo": "talkingwallace/ChatGPT-Paper-Reader",
      "stars": 757,
      "language": "Python",
      "description": "This repo offers a simple interface that helps you to read&summerize research papers in pdf format. You can ask some questions after reading. This int",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/talkingwallace/ChatGPT-Paper-Reader",
      "topics": [],
      "size": 1891,
      "default_branch": "main"
    }
  },
  {
    "repo": "RockChinQ/free-one-api",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "readme_en.md",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "assets",
        "design",
        "docs",
        "free_one_api",
        "test",
        "web"
      ]
    },
    "stats": {
      "total_issues_checked": 17,
      "llm_related_issues": 13,
      "llm_percentage": 76.5,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 13,
      "repo_stars": 697,
      "repo_language": "Python",
      "repo_description": "LLM \u9006\u5411\u5de5\u7a0b\u63a5\u53e3\u7ba1\u7406 | \u901a\u8fc7\u6807\u51c6 OpenAI API \u8bbf\u95ee ChatGPT / gpt4free / Bard / Claude / HuggingChat / \u901a\u4e49\u5343\u95ee \u7b49 AI \u7684\u7834\u89e3\u7248 ",
      "created_at": "2023-09-14T03:16:35Z",
      "updated_at": "2025-06-17T13:53:14Z"
    },
    "search_info": {
      "repo": "RockChinQ/free-one-api",
      "stars": 697,
      "language": "Python",
      "description": "LLM \u9006\u5411\u5de5\u7a0b\u63a5\u53e3\u7ba1\u7406 | \u901a\u8fc7\u6807\u51c6 OpenAI API \u8bbf\u95ee ChatGPT / gpt4free / Bard / Claude / HuggingChat / \u901a\u4e49\u5343\u95ee \u7b49 AI \u7684\u7834\u89e3\u7248 || ChatGPT reverse engineering API management | Ac",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/RockChinQ/free-one-api",
      "topics": [
        "bard",
        "chatbot",
        "chatgpt",
        "claude",
        "free",
        "free-gpt",
        "freechatgpt",
        "gpt",
        "gpt4free",
        "huggingchat",
        "one-api",
        "openai",
        "proxy",
        "revchatgpt",
        "reverse-engineering",
        "tongyiqianwen"
      ],
      "size": 1405,
      "default_branch": "main"
    }
  },
  {
    "repo": "V-know/ChatGPT-Telegram-Bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "V-know/ChatGPT-Telegram-Bot",
      "stars": 635,
      "language": "Python",
      "description": "A Telegram bot with a silky smooth AI experience. UI enabled.",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/V-know/ChatGPT-Telegram-Bot",
      "topics": [
        "chatgpt",
        "python",
        "telegram"
      ],
      "size": 2445,
      "default_branch": "main"
    }
  },
  {
    "repo": "YonkoSam/whatsapp-python-chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        "readme.md",
        "message_splitter.py",
        "persona.json.example",
        "pytest.ini",
        "requirements-dev.txt",
        "requirements.txt",
        "run_all_tests.py",
        "script.py",
        "whatsapp_bot.log"
      ],
      "dirs": [
        "conversations",
        "tests"
      ]
    },
    "search_info": {
      "repo": "YonkoSam/whatsapp-python-chatbot",
      "stars": 605,
      "language": "Python",
      "description": "WhatsApp Chatbot using Gemini + WasenderAPI",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/YonkoSam/whatsapp-python-chatbot",
      "topics": [],
      "size": 47,
      "default_branch": "main"
    }
  },
  {
    "repo": "jakobdylanc/llmcord",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license.md",
        "readme.md",
        "config-example.yaml",
        "docker-compose.yaml",
        "llmcord.py",
        "requirements.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 11,
      "llm_related_issues": 10,
      "llm_percentage": 90.9,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 584,
      "repo_language": "Python",
      "repo_description": "Make Discord your LLM frontend \u25cf Supports any OpenAI compatible API (Ollama, LM Studio, vLLM, OpenRo",
      "created_at": "2023-05-08T23:07:07Z",
      "updated_at": "2025-06-21T13:37:46Z"
    },
    "search_info": {
      "repo": "jakobdylanc/llmcord",
      "stars": 584,
      "language": "Python",
      "description": "Make Discord your LLM frontend \u25cf Supports any OpenAI compatible API (Ollama, LM Studio, vLLM, OpenRouter, xAI, Mistral, Groq and more)",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/jakobdylanc/llmcord",
      "topics": [
        "chatbot",
        "discord",
        "discord-bot",
        "gemini",
        "gpt-4",
        "llama",
        "llama3",
        "llama4",
        "llm",
        "mistral",
        "o3",
        "o4",
        "ollama",
        "openai",
        "vllm"
      ],
      "size": 237,
      "default_branch": "main"
    }
  },
  {
    "repo": "judahpaul16/gpt-home",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitattributes",
        ".gitignore",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "schematic.fzz"
      ],
      "dirs": [
        ".github",
        "contrib",
        "screenshots",
        "src"
      ]
    },
    "search_info": {
      "repo": "judahpaul16/gpt-home",
      "stars": 580,
      "language": "Python",
      "description": "ChatGPT at home! Basically a better Google Nest Hub or Amazon Alexa home assistant. Built on the Raspberry Pi using the OpenAI API.",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/judahpaul16/gpt-home",
      "topics": [
        "ai",
        "async",
        "automation",
        "chatgpt",
        "docker",
        "fastapi",
        "home-assistant",
        "home-automation",
        "iot",
        "llm",
        "nginx",
        "nlp",
        "nodejs",
        "openai",
        "python",
        "raspberry-pi",
        "react",
        "speech-recognition",
        "spotify",
        "typescript"
      ],
      "size": 51701,
      "default_branch": "main"
    }
  },
  {
    "repo": "xNul/code-llama-for-vscode",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "llamacpp_mock_api.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "xNul/code-llama-for-vscode",
      "stars": 571,
      "language": "Python",
      "description": "Use Code Llama with Visual Studio Code and the Continue extension. A local LLM alternative to GitHub Copilot.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/xNul/code-llama-for-vscode",
      "topics": [
        "assistant",
        "code",
        "code-llama",
        "codellama",
        "continue",
        "continuedev",
        "copilot",
        "llama",
        "llama2",
        "llamacpp",
        "llm",
        "local",
        "meta",
        "ollama",
        "studio",
        "visual",
        "vscode"
      ],
      "size": 11,
      "default_branch": "main"
    }
  },
  {
    "repo": "arthurhenrique/cookiecutter-fastapi",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "cookiecutter.json",
        "setup.py"
      ],
      "dirs": [
        ".github",
        "docs",
        "sample",
        "{{cookiecutter.project_slug}}"
      ]
    },
    "search_info": {
      "repo": "arthurhenrique/cookiecutter-fastapi",
      "stars": 564,
      "language": "Python",
      "description": "Cookiecutter template for FastAPI projects using: Machine Learning, uv, Github Actions and Pytests",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/arthurhenrique/cookiecutter-fastapi",
      "topics": [
        "ai",
        "black",
        "boilerplate",
        "cli",
        "cookiecutter",
        "cookiecutter-fastapi",
        "deep-learning",
        "docker",
        "fastapi",
        "fastapi-boilerplate",
        "hacktoberfest",
        "llm",
        "machine-learning",
        "ml",
        "mlops",
        "neural-network",
        "openai",
        "python",
        "uv"
      ],
      "size": 517,
      "default_branch": "main"
    }
  },
  {
    "repo": "Blazity/shadcn-chatbot-kit",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".commitlintrc.json",
        ".editorconfig",
        ".eslintrc.json",
        ".gitignore",
        ".npmrc",
        ".nvmrc",
        ".prettierignore",
        "license.md",
        "readme.md",
        "package.json"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "apps"
      ]
    },
    "search_info": {
      "repo": "Blazity/shadcn-chatbot-kit",
      "stars": 543,
      "language": "TypeScript",
      "description": "\ud83e\udd16 Beautifully designed chatbot components based on shadcn/ui",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/Blazity/shadcn-chatbot-kit",
      "topics": [
        "ai-sdk",
        "generative-ai",
        "llm",
        "nextjs",
        "openai",
        "react",
        "shadcn",
        "shadcn-ui",
        "typescript"
      ],
      "size": 18733,
      "default_branch": "main"
    }
  },
  {
    "repo": "seratch/ChatGPT-in-Slack",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        ".env.example",
        ".flake8",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "main.py",
        "main_prod.py",
        "manifest-dev.yml",
        "manifest-prod.yml"
      ],
      "dirs": [
        ".github",
        "app",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 8,
      "llm_percentage": 100.0,
      "issues_with_labels": 8,
      "label_percentage": 100.0,
      "avg_labels_per_issue": 1.0,
      "total_repo_labels": 9,
      "repo_stars": 499,
      "repo_language": "Python",
      "repo_description": "Swift demonstration of how to build a Slack app that enables end-users to interact with a ChatGPT bo",
      "created_at": "2023-03-02T09:52:41Z",
      "updated_at": "2025-06-20T05:51:43Z"
    },
    "search_info": {
      "repo": "seratch/ChatGPT-in-Slack",
      "stars": 499,
      "language": "Python",
      "description": "Swift demonstration of how to build a Slack app that enables end-users to interact with a ChatGPT bot",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/seratch/ChatGPT-in-Slack",
      "topics": [
        "ai",
        "aws",
        "chatbot",
        "chatbots",
        "chatgpt",
        "lambda-functions",
        "openai",
        "productivity",
        "productivity-tools",
        "python",
        "python3",
        "serverless",
        "slack"
      ],
      "size": 156,
      "default_branch": "main"
    }
  },
  {
    "repo": "AlexandreSajus/JARVIS",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 4
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "conv.txt",
        "display.css",
        "display.py",
        "main.py",
        "record.py",
        "requirements.txt",
        "status.txt"
      ],
      "dirs": [
        ".vscode",
        "audio",
        "media"
      ]
    },
    "stats": {
      "total_issues_checked": 11,
      "llm_related_issues": 10,
      "llm_percentage": 90.9,
      "issues_with_labels": 1,
      "label_percentage": 9.1,
      "avg_labels_per_issue": 0.09,
      "total_repo_labels": 9,
      "repo_stars": 497,
      "repo_language": "Python",
      "repo_description": "Your own personal voice assistant: Voice to Text to LLM to Speech, displayed in a web interface",
      "created_at": "2023-12-15T13:41:02Z",
      "updated_at": "2025-06-17T23:16:11Z"
    },
    "search_info": {
      "repo": "AlexandreSajus/JARVIS",
      "stars": 497,
      "language": "Python",
      "description": "Your own personal voice assistant: Voice to Text to LLM to Speech, displayed in a web interface",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/AlexandreSajus/JARVIS",
      "topics": [
        "deepgram",
        "elevenlabs",
        "llm",
        "openai",
        "python",
        "taipy",
        "tts",
        "voice-assistant"
      ],
      "size": 1220,
      "default_branch": "main"
    }
  },
  {
    "repo": "Narratium/Narratium.ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 5,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "readme_zh.md",
        "docker-compose.yml",
        "eslint.config.mjs",
        "next.config.ts",
        "package.json"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "app",
        "assets",
        "components",
        "contexts",
        "docs",
        "function",
        "hooks",
        "lib"
      ]
    },
    "search_info": {
      "repo": "Narratium/Narratium.ai",
      "stars": 491,
      "language": "TypeScript",
      "description": "Open-source platform for AI-driven storytelling, worldbuilding, and immersive roleplay",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/Narratium/Narratium.ai",
      "topics": [
        "adventure-game",
        "ai-npc",
        "ai-storytelling",
        "chatbot",
        "interactive-fiction",
        "llm",
        "nextjs",
        "open-source-ai",
        "openai",
        "roleplay",
        "sillytavern",
        "text-adventure",
        "typescript",
        "visual-novel"
      ],
      "size": 164552,
      "default_branch": "main"
    }
  },
  {
    "repo": "Nya-Foundation/NyaProxy",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "changelog.md",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "docker-compose.yml",
        "pyproject.toml",
        "pytest.ini"
      ],
      "dirs": [
        ".github",
        "assets",
        "configs",
        "docs",
        "nya"
      ]
    },
    "search_info": {
      "repo": "Nya-Foundation/NyaProxy",
      "stars": 480,
      "language": "Python",
      "description": "NyaProxy acts like a smart, central manager for accessing various online services (APIs) \u2013 think AI tools (like OpenAI, Gemini, Anthropic), image gene",
      "search_query": "ANTHROPIC_API_KEY language:python stars:>3",
      "search_description": "Apps with Claude API usage",
      "url": "https://github.com/Nya-Foundation/NyaProxy",
      "topics": [
        "api-management",
        "api-monitoring",
        "developer-tools",
        "gemini-api",
        "gemini-proxy",
        "llm-tools",
        "load-balancer",
        "openai-proxy",
        "python",
        "rate-limiting"
      ],
      "size": 1795,
      "default_branch": "main"
    }
  },
  {
    "repo": "jbexta/AgentPilot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 2
      },
      "files": [
        "contributing.md",
        "license",
        "readme.md",
        "build.py",
        "build.spec",
        "data.db",
        "icon.icns",
        "icon.ico",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        "docs",
        "src",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 4,
      "llm_percentage": 50.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 468,
      "repo_language": "Python",
      "repo_description": "A versatile workflow automation platform to create, organize, and execute AI workflows, from a singl",
      "created_at": "2023-09-11T10:57:48Z",
      "updated_at": "2025-06-21T22:25:54Z"
    },
    "search_info": {
      "repo": "jbexta/AgentPilot",
      "stars": 468,
      "language": "Python",
      "description": "A versatile workflow automation platform to create, organize, and execute AI workflows, from a single LLM to complex AI-driven workflows.",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/jbexta/AgentPilot",
      "topics": [
        "agent",
        "agi",
        "ai",
        "artificial-intelligence",
        "claude",
        "copilot",
        "copilot-chat",
        "desktop-assistant",
        "gemini",
        "gui",
        "openai",
        "python",
        "realtime-api",
        "structured-output",
        "tool-calling",
        "windows-copilot",
        "workflow-automation",
        "workflow-engine"
      ],
      "size": 41421,
      "default_branch": "master"
    }
  },
  {
    "repo": "Lex-au/Orpheus-FastAPI",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        "dockerfile.cpu",
        "dockerfile.gpu",
        "license",
        "readme.md",
        "system_prompt.md",
        "app.py",
        "docker-compose-cpu.yaml"
      ],
      "dirs": [
        "docs",
        "static",
        "templates",
        "tts_engine"
      ]
    },
    "stats": {
      "total_issues_checked": 16,
      "llm_related_issues": 8,
      "llm_percentage": 50.0,
      "issues_with_labels": 11,
      "label_percentage": 68.8,
      "avg_labels_per_issue": 0.69,
      "total_repo_labels": 9,
      "repo_stars": 439,
      "repo_language": "Python",
      "repo_description": "High-performance Text-to-Speech server with OpenAI-compatible API, 8 voices, emotion tags, and moder",
      "created_at": "2025-03-21T15:24:16Z",
      "updated_at": "2025-06-19T18:45:19Z"
    },
    "search_info": {
      "repo": "Lex-au/Orpheus-FastAPI",
      "stars": 439,
      "language": "Python",
      "description": "High-performance Text-to-Speech server with OpenAI-compatible API, 8 voices, emotion tags, and modern web UI. Optimized for RTX GPUs.",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/Lex-au/Orpheus-FastAPI",
      "topics": [
        "ai-text-to-speech",
        "ai-voice",
        "artificial-intelligence"
      ],
      "size": 13500,
      "default_branch": "main"
    }
  },
  {
    "repo": "voxos-ai/bolna",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".env.sample",
        ".gitignore",
        "license",
        "readme.md",
        "pyproject.toml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "bolna",
        "examples",
        "local_setup"
      ]
    },
    "stats": {
      "total_issues_checked": 6,
      "llm_related_issues": 4,
      "llm_percentage": 66.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 13,
      "repo_stars": 421,
      "repo_language": "Python",
      "repo_description": "End-to-end platform for building voice first multimodal agents",
      "created_at": "2023-12-13T09:07:35Z",
      "updated_at": "2025-06-19T10:38:53Z"
    },
    "search_info": {
      "repo": "voxos-ai/bolna",
      "stars": 421,
      "language": "Python",
      "description": "End-to-end platform for building voice first multimodal agents",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/voxos-ai/bolna",
      "topics": [
        "anyscale",
        "chatgpt-api",
        "claude-3-sonnet",
        "deepgram",
        "elevenlabs",
        "fastapi",
        "gpt-4o",
        "llama3",
        "llm",
        "mistral",
        "openai",
        "perplexity-api",
        "polly",
        "telephony",
        "twilio",
        "voice-assistant",
        "websocket-chat",
        "websockets",
        "whisper",
        "xtts"
      ],
      "size": 19269,
      "default_branch": "master"
    }
  },
  {
    "repo": "gia-guar/JARVIS-ChatGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "bootjarvis.pdf",
        "license",
        "readme.md",
        "updatehistory.md",
        "env.txt",
        "openai_api_chatbot.py",
        "run.bat",
        "setup.bat",
        "test_tts.py"
      ],
      "dirs": [
        "assistant",
        "tts.egg-info",
        "tts",
        "tts_additional_material",
        "vicuna",
        "demos",
        "saved_chats",
        "whisper_edits",
        "workspaces"
      ]
    },
    "search_info": {
      "repo": "gia-guar/JARVIS-ChatGPT",
      "stars": 414,
      "language": "Python",
      "description": "A Conversational Assistant equipped with synthetic voices including J.A.R.V.I.S's. Powered by OpenAI and IBM Watson APIs and a Tacotron model for voic",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/gia-guar/JARVIS-ChatGPT",
      "topics": [
        "ai",
        "chat-gpt-3",
        "chatgpt",
        "chatgpt-api",
        "elevenlabs",
        "ibm-watson",
        "jarvis-ai",
        "openai",
        "python",
        "pytorch",
        "speech-recognition",
        "stt",
        "tacotron",
        "tts"
      ],
      "size": 112352,
      "default_branch": "main"
    }
  },
  {
    "repo": "tom-doerr/codex-readme",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "codex_readme.py",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 4,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 406,
      "repo_language": "Python",
      "repo_description": "Revolutionize your project documentation with the Codex-README generator, utilizing OpenAI's Codex f",
      "created_at": "2021-09-24T01:11:08Z",
      "updated_at": "2025-06-02T04:12:17Z"
    },
    "search_info": {
      "repo": "tom-doerr/codex-readme",
      "stars": 406,
      "language": "Python",
      "description": "Revolutionize your project documentation with the Codex-README generator, utilizing OpenAI's Codex for intelligent README creation.",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/tom-doerr/codex-readme",
      "topics": [
        "ai",
        "codex",
        "openai",
        "readme",
        "readme-generator"
      ],
      "size": 32,
      "default_branch": "main"
    }
  },
  {
    "repo": "Azure-Samples/rag-postgres-openai-python",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 4,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.sample",
        ".gitattributes",
        ".gitignore",
        ".pre-commit-config.yaml",
        "contributing.md",
        "license.md",
        "readme.md",
        "azure.yaml",
        "locustfile.py",
        "pyproject.toml"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        ".vscode",
        "docs",
        "evals",
        "infra",
        "scripts",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "Azure-Samples/rag-postgres-openai-python",
      "stars": 388,
      "language": "Python",
      "description": "A RAG app to ask questions about rows in a database table. Deployable on Azure Container Apps with PostgreSQL Flexible Server.",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/Azure-Samples/rag-postgres-openai-python",
      "topics": [
        "ai-azd-templates",
        "azd-templates",
        "azure-container-apps",
        "azure-openai",
        "containers",
        "fastapi",
        "openai",
        "pgvector",
        "postgres",
        "postgresql",
        "python"
      ],
      "size": 9081,
      "default_branch": "main"
    }
  },
  {
    "repo": "pedrorito/ChatGPTSlackBot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "app.py",
        "docker-compose.yml",
        "requirements.txt",
        "variables.env"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 7,
      "llm_related_issues": 5,
      "llm_percentage": 71.4,
      "issues_with_labels": 1,
      "label_percentage": 14.3,
      "avg_labels_per_issue": 0.14,
      "total_repo_labels": 9,
      "repo_stars": 386,
      "repo_language": "Python",
      "repo_description": "\ud83e\udd16 A Slack bot that integrates with OpenAI's ChatGPT to provide answers, written in Python",
      "created_at": "2022-12-04T21:56:18Z",
      "updated_at": "2025-05-06T08:14:01Z"
    },
    "search_info": {
      "repo": "pedrorito/ChatGPTSlackBot",
      "stars": 386,
      "language": "Python",
      "description": "\ud83e\udd16 A Slack bot that integrates with OpenAI's ChatGPT to provide answers, written in Python",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/pedrorito/ChatGPTSlackBot",
      "topics": [],
      "size": 34,
      "default_branch": "main"
    }
  },
  {
    "repo": "pdsuwwz/chatgpt-vue3-light-mvp",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.template",
        ".eslintrc-auto-import.json",
        ".gitignore",
        ".stylelintignore",
        ".stylelintrc.cjs",
        "license",
        "readme.md",
        "auto-imports.d.ts",
        "babel.config.cjs",
        "components-instance.d.ts"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "public",
        "src"
      ]
    },
    "search_info": {
      "repo": "pdsuwwz/chatgpt-vue3-light-mvp",
      "stars": 382,
      "language": "TypeScript",
      "description": "\ud83d\udcad \u4e00\u4e2a\u53ef\u4e8c\u6b21\u5f00\u53d1 Chat Bot \u5355\u8f6e\u5bf9\u8bdd Web \u7aef MVP \u539f\u578b\u6a21\u677f, \u57fa\u4e8e Vue 3, Vite 6, TypeScript, Naive UI, Pinia(v3), UnoCSS \u7b49\u4e3b\u6d41\u6280\u672f\u6784\u5efa, \ud83e\udde4\u7b80\u5355\u96c6\u6210\u5927\u6a21\u578b API, \u91c7\u7528\u5355\u8f6e AI \u95ee\u7b54\u5bf9\u8bdd\u6a21\u5f0f, \u6bcf\u6b21\u63d0\u95ee\u72ec\u7acb\u54cd\u5e94, \u65e0\u9700\u4e0a",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/pdsuwwz/chatgpt-vue3-light-mvp",
      "topics": [
        "ai",
        "chat",
        "chatbot",
        "deepseek",
        "event",
        "glm",
        "gpt",
        "kimi",
        "llm",
        "moonshot",
        "ollama",
        "openai",
        "qwen",
        "reasoner",
        "siliconcloud",
        "siliconflow",
        "source",
        "spark",
        "stream",
        "ts"
      ],
      "size": 18112,
      "default_branch": "main"
    }
  },
  {
    "repo": "hiDaDeng/cntext",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        ".readthedocs.yaml",
        "citation.cff",
        "license",
        "readme.md",
        "english_readme.md",
        "paper.bib",
        "paper.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        ".idea",
        "build",
        "cntext.egg-info",
        "cntext",
        "dist",
        "docs",
        "evaluate_data",
        "examples",
        "img"
      ]
    },
    "search_info": {
      "repo": "hiDaDeng/cntext",
      "stars": 358,
      "language": "Python",
      "description": "text analysis, supporting multiple methods including word count, readability, document similarity, sentiment analysis, Word2Vec/GloVe, and Large Langu",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/hiDaDeng/cntext",
      "topics": [
        "chinese",
        "content-analysis",
        "discourse-analysis",
        "glove",
        "llm",
        "nlp",
        "semantic-analysis",
        "sentiment-analysis",
        "social-science",
        "text-analysis",
        "text-mining",
        "word2vec"
      ],
      "size": 67094,
      "default_branch": "main"
    }
  },
  {
    "repo": "vintasoftware/django-ai-assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".coveragerc",
        ".editorconfig",
        ".env.example",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "changelog.md",
        "contributing.md",
        "license.txt",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "django_ai_assistant",
        "docs",
        "example",
        "frontend",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "vintasoftware/django-ai-assistant",
      "stars": 352,
      "language": "Python",
      "description": "Integrate AI Assistants with Django to build intelligent applications",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/vintasoftware/django-ai-assistant",
      "topics": [
        "ai",
        "ai-agent",
        "ai-assistant",
        "chatgpt",
        "django",
        "gpt",
        "langchain",
        "openai"
      ],
      "size": 3374,
      "default_branch": "main"
    }
  },
  {
    "repo": "F33RNI/GPT-Telegramus",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "_version.py",
        "async_helper.py",
        "banner.png",
        "bot_handler.py",
        "bot_sender.py"
      ],
      "dirs": [
        ".github",
        "langs",
        "module_configs"
      ]
    },
    "stats": {
      "total_issues_checked": 12,
      "llm_related_issues": 7,
      "llm_percentage": 58.3,
      "issues_with_labels": 3,
      "label_percentage": 25.0,
      "avg_labels_per_issue": 0.33,
      "total_repo_labels": 10,
      "repo_stars": 349,
      "repo_language": "Python",
      "repo_description": "\ud83d\udc9c The best free Telegram bot for ChatGPT, Microsoft Copilot (aka Bing AI / Sidney / EdgeGPT), Micros",
      "created_at": "2023-02-02T05:31:12Z",
      "updated_at": "2025-06-16T13:55:25Z"
    },
    "search_info": {
      "repo": "F33RNI/GPT-Telegramus",
      "stars": 349,
      "language": "Python",
      "description": "\ud83d\udc9c The best free Telegram bot for ChatGPT, Microsoft Copilot (aka Bing AI / Sidney / EdgeGPT), Microsoft Copilot Designer (aka BingImageCreator), Gemin",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/F33RNI/GPT-Telegramus",
      "topics": [
        "ai",
        "bing",
        "bing-image-creator",
        "bot",
        "chatgpt",
        "dalle",
        "edge-ai",
        "edgegpt",
        "gemini",
        "google",
        "gpt",
        "groq",
        "linux",
        "microsoft",
        "microsoft-copilot-ai",
        "openai",
        "proxy",
        "python",
        "telegram"
      ],
      "size": 10017,
      "default_branch": "main"
    }
  },
  {
    "repo": "Nikorasu/LiveWhisper",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "assistant.py",
        "livewhisper.py",
        "mediactl.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Nikorasu/LiveWhisper",
      "stars": 348,
      "language": "Python",
      "description": "A nearly-live implementation of OpenAI's Whisper, using sounddevice. Requires existing Whisper install.",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/Nikorasu/LiveWhisper",
      "topics": [
        "ai",
        "assistant",
        "chatbot",
        "dictation",
        "numpy",
        "openai",
        "openai-whisper",
        "python",
        "sounddevice",
        "speech-recognition",
        "speech-to-text",
        "terminal",
        "text-to-speech",
        "transcription",
        "translation",
        "tts",
        "voice",
        "voice-assistant",
        "voice-recognition",
        "whisper"
      ],
      "size": 56,
      "default_branch": "main"
    }
  },
  {
    "repo": "nalgeon/pokitoki",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "compose.yml",
        "config.example.yml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "bot",
        "tests"
      ]
    },
    "search_info": {
      "repo": "nalgeon/pokitoki",
      "stars": 336,
      "language": "Python",
      "description": "Humble AI Telegram Bot",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/nalgeon/pokitoki",
      "topics": [
        "ai",
        "bot",
        "chat-gpt",
        "chatbot",
        "deepseek",
        "gpt",
        "openai",
        "telegram"
      ],
      "size": 1679,
      "default_branch": "main"
    }
  },
  {
    "repo": "khive-ai/lionagi",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".coveragerc",
        ".env.example",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".python-version",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "main.py"
      ],
      "dirs": [
        ".github",
        "cookbooks",
        "docs",
        "lionagi",
        "notebooks",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "khive-ai/lionagi",
      "stars": 334,
      "language": "Python",
      "description": "An Intelligence Operating System",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/khive-ai/lionagi",
      "topics": [
        "agents",
        "ai",
        "automation",
        "data",
        "llm",
        "machine-learning",
        "workflow"
      ],
      "size": 23312,
      "default_branch": "main"
    }
  },
  {
    "repo": "Admyral-Technologies/admyral",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".prettierignore",
        ".prettierrc.json",
        "contributing.md",
        "license",
        "readme.md",
        "security.md"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "admyral",
        "deploy",
        "docker",
        "docs",
        "examples",
        "img",
        "scripts",
        "temporal"
      ]
    },
    "search_info": {
      "repo": "Admyral-Technologies/admyral",
      "stars": 330,
      "language": "Python",
      "description": "\ud83e\udd16 Admyral enables continuous control monitoring for any custom control",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/Admyral-Technologies/admyral",
      "topics": [
        "ai-assistant",
        "automation",
        "compliance-as-code",
        "compliance-automation",
        "compliance-platform",
        "control",
        "copilot",
        "cybersecurity",
        "gpt",
        "grc",
        "llm",
        "nextjs",
        "open-source",
        "python",
        "security",
        "security-automation",
        "security-compliance",
        "soar",
        "typescript",
        "workflow"
      ],
      "size": 31117,
      "default_branch": "main"
    }
  },
  {
    "repo": "ChatLunaLab/chatluna",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".editorconfig",
        ".eslintignore",
        ".eslintrc.yml",
        ".gitignore",
        ".prettierrc",
        "license",
        "readme.md",
        "readme_en.md",
        "readme_jp.md",
        "logo.png"
      ],
      "dirs": [
        ".github",
        "packages",
        "screenshots"
      ]
    },
    "search_info": {
      "repo": "ChatLunaLab/chatluna",
      "stars": 314,
      "language": "TypeScript",
      "description": "\u591a\u5e73\u53f0\u6a21\u578b\u63a5\u5165\uff0c\u53ef\u6269\u5c55\uff0c\u591a\u79cd\u8f93\u51fa\u683c\u5f0f\uff0c\u63d0\u4f9b\u5927\u8bed\u8a00\u6a21\u578b\u804a\u5929\u670d\u52a1\u7684\u63d2\u4ef6 | A bot plugin for LLM chat with multi-model integration, extensibility, and various output formats",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/ChatLunaLab/chatluna",
      "topics": [
        "ai",
        "bot",
        "chatbot",
        "chatglm",
        "chatgpt",
        "claude",
        "deepseek",
        "deepseek-v3",
        "gemini",
        "gpt",
        "gpt-4o",
        "koishi",
        "langchain",
        "llm",
        "mcp-client",
        "openai",
        "plugin",
        "qq-bot",
        "qwen",
        "typescript"
      ],
      "size": 21831,
      "default_branch": "v1-dev"
    }
  },
  {
    "repo": "Kabanosk/whisper-website",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".gitmodules",
        "code_of_conduct.md",
        "dockerfile",
        "license",
        "readme.md",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "src"
      ]
    },
    "search_info": {
      "repo": "Kabanosk/whisper-website",
      "stars": 306,
      "language": "Python",
      "description": "Simple web application, which can be used to convert audio to subtitles by OpenAI's Whisper model",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/Kabanosk/whisper-website",
      "topics": [
        "audio-to-text",
        "fastapi",
        "hacktoberfest",
        "open-source",
        "openai",
        "python3",
        "speech-to-text",
        "subtitles",
        "subtitles-generator",
        "uvicorn",
        "website",
        "whisper"
      ],
      "size": 50,
      "default_branch": "main"
    }
  },
  {
    "repo": "wandb/wandbot",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "wandb/wandbot",
      "stars": 300,
      "language": "Python",
      "description": "wandbot is a technical support bot for Weights & Biases' AI developer tools that can run in Discord, Slack, ChatGPT and Zendesk",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/wandb/wandbot",
      "topics": [
        "ai",
        "chat",
        "discord",
        "gpt",
        "gpt-4",
        "openai",
        "slack",
        "support-bot",
        "wandb",
        "zendesk"
      ],
      "size": 4096,
      "default_branch": "main"
    }
  },
  {
    "repo": "summarizepaper/summarizepaper",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "procfile",
        "readme.md",
        "db.sqlite3",
        "favicon.ico",
        "faviconex.png",
        "filename.pdf",
        "foo.pkl",
        "logo.png"
      ],
      "dirs": [
        "arxivsummarizer",
        "font",
        "locale",
        "savedocsearch",
        "static",
        "staticfiles",
        "summarizer",
        "templates"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 6,
      "llm_percentage": 75.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 293,
      "repo_language": "Python",
      "repo_description": "An AI-powered arXiv paper summarization website with a virtual assistant for answering questions.",
      "created_at": "2023-03-16T09:32:53Z",
      "updated_at": "2025-06-16T17:07:46Z"
    },
    "search_info": {
      "repo": "summarizepaper/summarizepaper",
      "stars": 293,
      "language": "Python",
      "description": "An AI-powered arXiv paper summarization website with a virtual assistant for answering questions.",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/summarizepaper/summarizepaper",
      "topics": [
        "ai",
        "arxiv",
        "arxiv-papers",
        "chatgpt",
        "django",
        "gpt3",
        "langchain",
        "llm",
        "openai",
        "python",
        "question-answering",
        "research-paper",
        "research-tool",
        "summarization",
        "summarization-platform",
        "summarizepaper"
      ],
      "size": 75903,
      "default_branch": "master"
    }
  },
  {
    "repo": "c0sogi/LLMChat",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".env-sample",
        ".flake8",
        ".gitattributes",
        ".gitignore",
        ".gitmodules",
        "license",
        "build-web.bat",
        "docker-compose-local.yaml",
        "docker-compose-prod.yaml"
      ],
      "dirs": [
        ".idea",
        ".vscode",
        "app",
        "llama_models",
        "notebook",
        "qdrant",
        "repositories",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 18,
      "llm_related_issues": 15,
      "llm_percentage": 83.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 10,
      "repo_stars": 284,
      "repo_language": "Python",
      "repo_description": "A full-stack Webui implementation of Large Language model, such as ChatGPT or LLaMA.",
      "created_at": "2023-03-01T16:34:28Z",
      "updated_at": "2025-06-16T00:49:21Z"
    },
    "search_info": {
      "repo": "c0sogi/LLMChat",
      "stars": 284,
      "language": "Python",
      "description": "A full-stack Webui implementation of Large Language model, such as ChatGPT or LLaMA.",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/c0sogi/LLMChat",
      "topics": [
        "chatbot",
        "chatgpt",
        "docker",
        "docker-compose",
        "fastapi",
        "flutter",
        "fullstack",
        "langchain",
        "llm",
        "mysql",
        "openai",
        "python",
        "redis",
        "restapi",
        "sqlalchemy",
        "websocket",
        "webui"
      ],
      "size": 61154,
      "default_branch": "master"
    }
  },
  {
    "repo": "bigsk1/voice-chat-ai",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "bigsk1/voice-chat-ai",
      "stars": 270,
      "language": "Python",
      "description": "\ud83c\udf99\ufe0f Speak with AI - Run locally using Ollama, OpenAI, Anthropic or xAI - Speech uses XTTS, OpenAI, ElevenLabs or Kokoro",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/bigsk1/voice-chat-ai",
      "topics": [
        "ai-chat",
        "ai-speech",
        "ai-voice",
        "ai-voice-agent",
        "anthropic-claude",
        "elevenlabs-api",
        "fastapi",
        "gpt-4o-mini-tts",
        "llama3",
        "llm",
        "mistral",
        "ollama",
        "openai",
        "openai-api",
        "python",
        "selfhosted",
        "tts",
        "whisper-ai",
        "xai",
        "xtts"
      ],
      "size": 86576,
      "default_branch": "main"
    }
  },
  {
    "repo": "haseeb-heaven/code-interpreter",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".config",
        ".gitignore",
        "license.txt",
        "readme.md",
        "interpreter",
        "interpreter.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "configs",
        "history",
        "libs",
        "resources",
        "scripts",
        "system",
        "tests"
      ]
    },
    "search_info": {
      "repo": "haseeb-heaven/code-interpreter",
      "stars": 268,
      "language": "Python",
      "description": "An innovative open-source Code Interpreter with (GPT,Gemini,Claude,LLaMa) models.",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/haseeb-heaven/code-interpreter",
      "topics": [
        "bard-coder",
        "bing-coder",
        "bingai",
        "chatbot",
        "chatgpt",
        "code-interpreter",
        "code-llama",
        "google-bard",
        "gpt",
        "gpt-4",
        "huggingface",
        "interpreter",
        "llm",
        "llm-coder",
        "open-interpreter",
        "openai",
        "phind-coder",
        "python",
        "wizard-coder"
      ],
      "size": 12172,
      "default_branch": "main"
    }
  },
  {
    "repo": "yesbhautik/Master-AI-BOT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "yesbhautik/Master-AI-BOT",
      "stars": 261,
      "language": "Python",
      "description": "Master AI BOT \ud83e\udd16: Unleash the power of GPT-4 Turbo with our fast and limitless Telegram bot. Say goodbye to daily usage limits and laggy interfaces. Ex",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/yesbhautik/Master-AI-BOT",
      "topics": [
        "chatbot",
        "chatgpt",
        "docker",
        "gpt-4",
        "hacksquad",
        "hacksquad2023-accepted",
        "hacktoberfest",
        "hacktoberfest-accepted",
        "mongodb",
        "open-source",
        "openai",
        "python",
        "telegram-bot",
        "yesbhautik"
      ],
      "size": 17781,
      "default_branch": "main"
    }
  },
  {
    "repo": "zilliztech/akcio",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".coverage",
        ".gitignore",
        ".pylintrc",
        "contributing.md",
        "license",
        "owners",
        "readme.md",
        "config.py",
        "gradio_demo.py",
        "main.py"
      ],
      "dirs": [
        ".github",
        "docker",
        "offline_tools",
        "pics",
        "src",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 7,
      "llm_percentage": 87.5,
      "issues_with_labels": 7,
      "label_percentage": 87.5,
      "avg_labels_per_issue": 1.25,
      "total_repo_labels": 22,
      "repo_stars": 256,
      "repo_language": "Python",
      "repo_description": "Akcio is a demonstration project for Retrieval Augmented Generation (RAG). It leverages the power of",
      "created_at": "2023-05-23T02:39:07Z",
      "updated_at": "2025-05-31T01:41:33Z"
    },
    "search_info": {
      "repo": "zilliztech/akcio",
      "stars": 256,
      "language": "Python",
      "description": "Akcio is a demonstration project for Retrieval Augmented Generation (RAG). It leverages the power of LLM to generate responses and uses vector databas",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/zilliztech/akcio",
      "topics": [
        "artificial-intelligence",
        "chatbot",
        "chatgpt",
        "dolly",
        "embeddings",
        "ernie-bot",
        "fastapi",
        "gradio",
        "langchain",
        "llm",
        "milvus",
        "minimax",
        "nlp",
        "openai",
        "retrieval-augmented-generation",
        "retrieval-chatbot",
        "semantic-search",
        "towhee"
      ],
      "size": 1639,
      "default_branch": "main"
    }
  },
  {
    "repo": "devnen/Dia-TTS-Server",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 6,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "config.py",
        "docker-compose.yml",
        "documentation.md",
        "download_model.py",
        "engine.py",
        "env.example.txt"
      ],
      "dirs": [
        ".github",
        "dia",
        "reference_audio",
        "static",
        "ui",
        "voices"
      ]
    },
    "stats": {
      "total_issues_checked": 16,
      "llm_related_issues": 14,
      "llm_percentage": 87.5,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 253,
      "repo_language": "Python",
      "repo_description": "Self-host the powerful Dia TTS model. This server offers a user-friendly Web UI, flexible API endpoi",
      "created_at": "2025-04-22T17:03:37Z",
      "updated_at": "2025-06-21T14:04:43Z"
    },
    "search_info": {
      "repo": "devnen/Dia-TTS-Server",
      "stars": 253,
      "language": "Python",
      "description": "Self-host the powerful Dia TTS model. This server offers a user-friendly Web UI, flexible API endpoints (incl. OpenAI compatible), support for SafeTen",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/devnen/Dia-TTS-Server",
      "topics": [
        "ai",
        "api-server",
        "audio-generation",
        "cuda",
        "dia",
        "dia-tts",
        "dialogue-tts",
        "fastapi",
        "huggingface",
        "openai-api",
        "python",
        "pytorch",
        "speech-synthesis",
        "speech-synthesis-api",
        "text-to-speech",
        "tts",
        "tts-api",
        "voice-cloning",
        "web-ui"
      ],
      "size": 32848,
      "default_branch": "main"
    }
  },
  {
    "repo": "smalltong02/keras-llm-robot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        "license",
        "__about__.py",
        "__init__.py",
        "__webgui_server__.py",
        "readme-cn.md",
        "readme.md",
        "requirements-macos.txt",
        "requirements-ubuntu.txt",
        "requirements-windows.txt",
        "webui-startup-windows.bat"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "webui",
        "img",
        "models",
        "test_gpt4v_gemini",
        "tools"
      ]
    },
    "search_info": {
      "repo": "smalltong02/keras-llm-robot",
      "stars": 249,
      "language": "Python",
      "description": "A web UI Project In order to learn the large language model. This project includes features such as chat, quantization, fine-tuning, prompt engineerin",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/smalltong02/keras-llm-robot",
      "topics": [
        "chatbot",
        "chatgpt",
        "code-interpreter",
        "faiss",
        "fastchat",
        "gemini",
        "knowledgebase",
        "llm",
        "milvus",
        "multimodal",
        "pgvector",
        "rag",
        "speech-to-text",
        "streamlit",
        "text-to-speech",
        "vectorization"
      ],
      "size": 171659,
      "default_branch": "main"
    }
  },
  {
    "repo": "tychozzz/gpt-web-terminal",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "readme_cn.md",
        "readme_en.md",
        "components.d.ts",
        "index.html",
        "package-lock.json"
      ],
      "dirs": [
        "gpt-test-demo",
        "public",
        "service",
        "src"
      ]
    },
    "search_info": {
      "repo": "tychozzz/gpt-web-terminal",
      "stars": 249,
      "language": "TypeScript",
      "description": "\u2728 Open ChatGPT with Programmer's Approach! GPT Terminal is a platform that allows you to communicate with GPT in a terminal.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/tychozzz/gpt-web-terminal",
      "topics": [
        "chatgpt",
        "cli",
        "command-line",
        "express",
        "gpt",
        "gpt-cli",
        "javascript",
        "nodejs",
        "openai",
        "terminal",
        "typescript",
        "vue3"
      ],
      "size": 562,
      "default_branch": "master"
    }
  },
  {
    "repo": "tpai/summary-gpt-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "tpai/summary-gpt-bot",
      "stars": 229,
      "language": "Python",
      "description": "An AI-powered text summarization Telegram bot that generates concise summaries of text, URLs, PDFs, and YouTube videos.",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/tpai/summary-gpt-bot",
      "topics": [
        "gpt",
        "summarytools",
        "telegram-bot"
      ],
      "size": 1411,
      "default_branch": "master"
    }
  },
  {
    "repo": "ausbitbank/ChatGPTDiscord",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "chatgptdiscord.py",
        "license",
        "readme.md",
        "config.json.example"
      ],
      "dirs": [
        "image"
      ]
    },
    "search_info": {
      "repo": "ausbitbank/ChatGPTDiscord",
      "stars": 224,
      "language": "Python",
      "description": "Discord bot for interacting with ChatGPT's API by OpenAI",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/ausbitbank/ChatGPTDiscord",
      "topics": [
        "chatgpt",
        "discord-bot",
        "gpt-3"
      ],
      "size": 224,
      "default_branch": "main"
    }
  },
  {
    "repo": "essamamdani/search-result-scraper-markdown",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "essamamdani/search-result-scraper-markdown",
      "stars": 222,
      "language": "Python",
      "description": "This project provides a powerful web scraping tool that fetches search results and converts them into Markdown format using FastAPI, SearXNG, and Brow",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/essamamdani/search-result-scraper-markdown",
      "topics": [
        "ai",
        "browserless",
        "exa",
        "exaai",
        "fastapi",
        "firecrawl",
        "groq",
        "httpx",
        "jina",
        "markdown",
        "metasearch",
        "openai",
        "proxy",
        "python",
        "reader",
        "requests",
        "scrape",
        "searxng"
      ],
      "size": 89,
      "default_branch": "main"
    }
  },
  {
    "repo": "small-cactus/M.I.L.E.S",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "security.md",
        "miles_logo.png"
      ],
      "dirs": [
        ".github",
        "miles-v2",
        "screenshots"
      ]
    },
    "search_info": {
      "repo": "small-cactus/M.I.L.E.S",
      "stars": 218,
      "language": "Python",
      "description": "M.I.L.E.S, a GPT-4-Turbo voice assistant, self-adapts its prompts and AI model, can play any Spotify song, adjusts system and Spotify volume, performs",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/small-cactus/M.I.L.E.S",
      "topics": [
        "ai",
        "ai-assistant",
        "calculator",
        "chatbot",
        "customization",
        "electron-app",
        "gpt-4-turbo",
        "home-assistant-integration",
        "jarvis-assistant",
        "large-language-models",
        "llm",
        "macos",
        "memory",
        "openai",
        "spotify",
        "tts",
        "ui",
        "voice-assistant",
        "voice-recognition",
        "windows"
      ],
      "size": 2928,
      "default_branch": "main"
    }
  },
  {
    "repo": "narenmanoharan/gpt-code-assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".bandit",
        ".gitattributes",
        ".gitignore",
        ".pre-commit-config.yaml",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "ai",
        "core",
        "data",
        "index",
        "public",
        "repository"
      ]
    },
    "search_info": {
      "repo": "narenmanoharan/gpt-code-assistant",
      "stars": 206,
      "language": "Python",
      "description": "gpt-code-assistant is an open-source coding assistant leveraging language models to search, retrieve, explore and understand any codebase.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/narenmanoharan/gpt-code-assistant",
      "topics": [
        "ai",
        "code",
        "gpt-4",
        "llm",
        "search"
      ],
      "size": 105680,
      "default_branch": "main"
    }
  },
  {
    "repo": "Run-Tu/MindFlow",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "license",
        "readme.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "docs",
        "mindflow"
      ]
    },
    "search_info": {
      "repo": "Run-Tu/MindFlow",
      "stars": 205,
      "language": "Python",
      "description": "A multimodal personal assistant that allows Large Language Models (LLMs) to run code locally, acting as an autonomous agent capable of completing and ",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/Run-Tu/MindFlow",
      "topics": [],
      "size": 12786,
      "default_branch": "master"
    }
  },
  {
    "repo": "mme/beakjs",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "version",
        "package.json",
        "tsconfig.json",
        "yarn.lock"
      ],
      "dirs": [
        ".github",
        ".placeholder",
        ".vscode",
        "demo",
        "docs",
        "packages",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "mme/beakjs",
      "stars": 205,
      "language": "TypeScript",
      "description": "\ud83d\udc26 Custom conversational assistants for your React app.",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/mme/beakjs",
      "topics": [
        "assistant",
        "chatbot",
        "chatgpt",
        "copilot",
        "frontend",
        "gpt-4",
        "javascript",
        "openai",
        "react",
        "reactjs",
        "typescript",
        "web"
      ],
      "size": 5372,
      "default_branch": "main"
    }
  },
  {
    "repo": "ciuzaak/Claude-Telegram-Bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "bot.py",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        "config",
        "scripts",
        "utils"
      ]
    },
    "stats": {
      "total_issues_checked": 18,
      "llm_related_issues": 16,
      "llm_percentage": 88.9,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 204,
      "repo_language": "Python",
      "repo_description": "Anthropic Claude & Google Bard Bot for Telegram.",
      "created_at": "2023-04-05T09:36:52Z",
      "updated_at": "2025-06-16T22:19:14Z"
    },
    "search_info": {
      "repo": "ciuzaak/Claude-Telegram-Bot",
      "stars": 204,
      "language": "Python",
      "description": "Anthropic Claude & Google Bard Bot for Telegram.",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/ciuzaak/Claude-Telegram-Bot",
      "topics": [
        "anthropic",
        "bard",
        "bot",
        "chatbot",
        "claude",
        "claude-ai",
        "google-bard",
        "gpt",
        "telegram",
        "telegram-bot"
      ],
      "size": 75,
      "default_branch": "main"
    }
  },
  {
    "repo": "jmaczan/gdansk-ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "citation.cff",
        "license",
        "readme.md",
        "gdansk-ai.png"
      ],
      "dirs": [
        "ai-api",
        "web-api",
        "web"
      ]
    },
    "search_info": {
      "repo": "jmaczan/gdansk-ai",
      "stars": 198,
      "language": "TypeScript",
      "description": "Full stack voice chatbot",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/jmaczan/gdansk-ai",
      "topics": [
        "ai",
        "auth0",
        "gdansk",
        "google",
        "google-cloud",
        "gpt-35-turbo",
        "llm",
        "ml",
        "nodejs",
        "openai",
        "python",
        "speech-to-text",
        "stripe",
        "text-to-speech",
        "typescript",
        "voice-ai",
        "voice-assistant",
        "voice-chat",
        "voice-chat-bot",
        "whisper-ai"
      ],
      "size": 3127,
      "default_branch": "main"
    }
  },
  {
    "repo": "passivebot/midjourney-automation-bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        "license",
        "readme.md",
        "chrome_zrfwerjemb.png",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "midjourney_automation_bot"
      ]
    },
    "stats": {
      "total_issues_checked": 9,
      "llm_related_issues": 6,
      "llm_percentage": 66.7,
      "issues_with_labels": 5,
      "label_percentage": 55.6,
      "avg_labels_per_issue": 0.56,
      "total_repo_labels": 9,
      "repo_stars": 196,
      "repo_language": "Python",
      "repo_description": "This repository hosts the Midjourney Automation Bot, a free script leveraging OpenAI's GPT-3 for aut",
      "created_at": "2023-04-28T22:52:38Z",
      "updated_at": "2025-06-19T09:20:00Z"
    },
    "search_info": {
      "repo": "passivebot/midjourney-automation-bot",
      "stars": 196,
      "language": "Python",
      "description": "This repository hosts the Midjourney Automation Bot, a free script leveraging OpenAI's GPT-3 for automated image generation via Discord. It offers a s",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/passivebot/midjourney-automation-bot",
      "topics": [
        "automation",
        "bot",
        "chatgpt",
        "discord",
        "discord-bot",
        "gpt-3",
        "midjourney",
        "midjourney-api-bot",
        "midjourney-app",
        "midjourney-bot",
        "midjourney-download",
        "midjourney-downloader",
        "playwright",
        "playwright-python",
        "python"
      ],
      "size": 418,
      "default_branch": "main"
    }
  },
  {
    "repo": "Avaiga/demo-chatbot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 4
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "readme.md",
        "main.css",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "media"
      ]
    },
    "stats": {
      "total_issues_checked": 6,
      "llm_related_issues": 2,
      "llm_percentage": 33.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 0,
      "repo_stars": 194,
      "repo_language": "Python",
      "repo_description": "A template to create any LLM Inference Web Apps using Python only",
      "created_at": "2023-12-07T14:30:57Z",
      "updated_at": "2025-05-31T15:55:43Z"
    },
    "search_info": {
      "repo": "Avaiga/demo-chatbot",
      "stars": 194,
      "language": "Python",
      "description": "A template to create any LLM Inference Web Apps using Python only",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/Avaiga/demo-chatbot",
      "topics": [
        "chatbot",
        "gpt",
        "gpt-3",
        "llm",
        "openai",
        "python",
        "taipy"
      ],
      "size": 613,
      "default_branch": "develop"
    }
  },
  {
    "repo": "kaifcoder/gemini_multipdf_chat",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        "dockerfile",
        "readme.docker.md",
        "readme.md",
        "app.py",
        "compose.yaml",
        "requirements.txt"
      ],
      "dirs": [
        ".devcontainer",
        ".github"
      ]
    },
    "stats": {
      "total_issues_checked": 12,
      "llm_related_issues": 10,
      "llm_percentage": 83.3,
      "issues_with_labels": 3,
      "label_percentage": 25.0,
      "avg_labels_per_issue": 0.42,
      "total_repo_labels": 9,
      "repo_stars": 188,
      "repo_language": "Python",
      "repo_description": "Gemini PDF Chatbot: A Streamlit-based application powered by the Gemini conversational AI model. Upl",
      "created_at": "2024-01-09T11:17:01Z",
      "updated_at": "2025-06-08T13:28:42Z"
    },
    "search_info": {
      "repo": "kaifcoder/gemini_multipdf_chat",
      "stars": 188,
      "language": "Python",
      "description": "Gemini PDF Chatbot: A Streamlit-based application powered by the Gemini conversational AI model. Upload multiple PDF files, extract text, and engage i",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/kaifcoder/gemini_multipdf_chat",
      "topics": [
        "gemini-api",
        "gemini-pro",
        "langchain",
        "llms",
        "rag"
      ],
      "size": 12,
      "default_branch": "main"
    }
  },
  {
    "repo": "flynnoct/chatgpt-telegram-bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "license.md",
        "readme.md",
        "config.json.template",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        "bin",
        "docs",
        "src"
      ]
    },
    "stats": {
      "total_issues_checked": 14,
      "llm_related_issues": 8,
      "llm_percentage": 57.1,
      "issues_with_labels": 6,
      "label_percentage": 42.9,
      "avg_labels_per_issue": 0.57,
      "total_repo_labels": 9,
      "repo_stars": 176,
      "repo_language": "Python",
      "repo_description": "Telegram bot implemented by OFFICIAL OpenAI ChatGPT API (gpt-3.5-turbo, released on 2023-03-01)",
      "created_at": "2023-03-02T02:18:31Z",
      "updated_at": "2025-05-26T12:36:57Z"
    },
    "search_info": {
      "repo": "flynnoct/chatgpt-telegram-bot",
      "stars": 176,
      "language": "Python",
      "description": "Telegram bot implemented by OFFICIAL OpenAI ChatGPT API (gpt-3.5-turbo, released on 2023-03-01)",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/flynnoct/chatgpt-telegram-bot",
      "topics": [
        "chatgpt",
        "openai",
        "telegram",
        "telegram-bot"
      ],
      "size": 2840,
      "default_branch": "main"
    }
  },
  {
    "repo": "Timmy-web/Poe-Telegram-Chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "dockerfile",
        "readme.md",
        "bot.py",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        ".github"
      ]
    },
    "search_info": {
      "repo": "Timmy-web/Poe-Telegram-Chatbot",
      "stars": 170,
      "language": "Python",
      "description": "\u8c03\u7528Poe\u5b98\u65b9API\u5b9e\u73b0Telegram\u5bf9\u8bdd\u673a\u5668\u4eba\uff0c\u4e3b\u8981\u8c03\u7528GPT-4\u548cClaude-3-Opus\u6a21\u578b\u3002",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/Timmy-web/Poe-Telegram-Chatbot",
      "topics": [],
      "size": 4,
      "default_branch": "main"
    }
  },
  {
    "repo": "jw782cn/RepoChat-200k",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".env-template",
        ".gitattributes",
        ".gitignore",
        "license",
        "readme.md",
        "app.py",
        "config.py",
        "config.yaml",
        "llm_service.py",
        "repo_service.py"
      ],
      "dirs": [
        "examples",
        "useful_tool"
      ]
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 4,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 168,
      "repo_language": "Python",
      "repo_description": "\u26a1Chat with GitHub Repo Using 200k context window of Claude instead of RAG!\u26a1",
      "created_at": "2024-03-15T11:12:12Z",
      "updated_at": "2025-06-10T22:51:03Z"
    },
    "search_info": {
      "repo": "jw782cn/RepoChat-200k",
      "stars": 168,
      "language": "Python",
      "description": "\u26a1Chat with GitHub Repo Using 200k context window of Claude instead of RAG!\u26a1",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/jw782cn/RepoChat-200k",
      "topics": [
        "chatbot",
        "claude",
        "llm",
        "openai",
        "openrouter",
        "streamlit"
      ],
      "size": 3923,
      "default_branch": "main"
    }
  },
  {
    "repo": "rabilrbl/gemini-pro-bot",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "rabilrbl/gemini-pro-bot",
      "stars": 163,
      "language": "Python",
      "description": "A Python Telegram bot powered by Google's gemini-pro LLM API",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/rabilrbl/gemini-pro-bot",
      "topics": [
        "bard",
        "chatbot",
        "gemini",
        "gemini-pro",
        "gemini-pro-bot",
        "gemini-pro-vision",
        "google-bard",
        "google-gemini",
        "gpt",
        "llm",
        "llm-bot",
        "multimodal",
        "multimodal-bot",
        "telegram-bot"
      ],
      "size": 179,
      "default_branch": "main"
    }
  },
  {
    "repo": "nrl-ai/pautobot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "manifest.in",
        "readme.md",
        "build.sh",
        "build_and_publish_pypi.sh",
        "build_frontend.sh",
        "pyproject.toml",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": [
        "docs",
        "frontend",
        "pautobot",
        "tests"
      ]
    },
    "search_info": {
      "repo": "nrl-ai/pautobot",
      "stars": 159,
      "language": "Python",
      "description": "\ud83d\udd25 Your private task assistant with GPT \ud83d\udd25 - Ask questions about your documents.",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/nrl-ai/pautobot",
      "topics": [
        "autogpt",
        "automation",
        "chatbot",
        "chatgpt",
        "docsearch",
        "gpt",
        "gpt4",
        "private-gpt",
        "privategpt",
        "rpa"
      ],
      "size": 5396,
      "default_branch": "main"
    }
  },
  {
    "repo": "the-llm-lab/CommanderGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        ".gitignore",
        "readme.md",
        "config.yml.example",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        ".devcontainer",
        "media"
      ]
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 3,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 157,
      "repo_language": "Python",
      "repo_description": "Voice Assisted Desktop Automation for Simple to Complex Tasks using ChatGPT",
      "created_at": "2023-05-19T14:28:48Z",
      "updated_at": "2025-06-12T02:39:15Z"
    },
    "search_info": {
      "repo": "the-llm-lab/CommanderGPT",
      "stars": 157,
      "language": "Python",
      "description": "Voice Assisted Desktop Automation for Simple to Complex Tasks using ChatGPT",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/the-llm-lab/CommanderGPT",
      "topics": [
        "ai",
        "automation",
        "chatgpt",
        "desktop",
        "ml"
      ],
      "size": 2139,
      "default_branch": "main"
    }
  },
  {
    "repo": "limcheekin/open-text-embeddings",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "changelog.md",
        "citation.cff",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "release.md",
        "download.sh",
        "embeddings.ipynb"
      ],
      "dirs": [
        ".github",
        "open"
      ]
    },
    "search_info": {
      "repo": "limcheekin/open-text-embeddings",
      "stars": 153,
      "language": "Python",
      "description": "Open Source Text Embedding Models with OpenAI Compatible API",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/limcheekin/open-text-embeddings",
      "topics": [
        "aws-lambda",
        "embeddings",
        "fastapi",
        "huggingface",
        "langchain",
        "langchain-python",
        "openai",
        "opensource",
        "python",
        "sentence-transformers",
        "serverless-framework",
        "text-embeddings",
        "universal-sentence-encoder"
      ],
      "size": 229,
      "default_branch": "main"
    }
  },
  {
    "repo": "jorge-armando-navarro-flores/chat_with_your_docs",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "jorge-armando-navarro-flores/chat_with_your_docs",
      "stars": 150,
      "language": "Python",
      "description": "Discover and converse with advanced AI models like Mistral, LLAMA2, and GPT-3.5 from leading sources like OLLAMA, Hugging Face, and OpenAI. Easily ext",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/jorge-armando-navarro-flores/chat_with_your_docs",
      "topics": [
        "chatbot",
        "docs",
        "faiss",
        "gemma",
        "gpt-3-5-turbo",
        "gpt-4",
        "gradio",
        "huggingface",
        "langchain",
        "llama2",
        "llms",
        "mistral",
        "ollama",
        "openai",
        "pdf",
        "python",
        "retrieval-chatbot",
        "vectorstore",
        "web",
        "youtube"
      ],
      "size": 10563,
      "default_branch": "master"
    }
  },
  {
    "repo": "Anil-matcha/Youtube-to-chatbot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        "license",
        "readme.md",
        "chat_channel.py",
        "chat_youtube.py",
        "requirements.txt",
        "streamlitui.py",
        "summarize_youtube.py",
        "youtubequery.py"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 2,
      "llm_percentage": 66.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 144,
      "repo_language": "Python",
      "repo_description": "Chat with any Youtube video. Easily input the video url you'd like to chat with. Instant answers. As",
      "created_at": "2023-05-17T18:38:27Z",
      "updated_at": "2025-06-20T02:28:40Z"
    },
    "search_info": {
      "repo": "Anil-matcha/Youtube-to-chatbot",
      "stars": 144,
      "language": "Python",
      "description": "Chat with any Youtube video. Easily input the video url you'd like to chat with. Instant answers. Ask questions, extract information, and summarize do",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/Anil-matcha/Youtube-to-chatbot",
      "topics": [
        "chatbot",
        "chatgpt",
        "chatwithyoutube",
        "gpt",
        "gpt4",
        "langchain",
        "openai",
        "youtube",
        "youtube-chatbot",
        "youtube-to-chatbot"
      ],
      "size": 9,
      "default_branch": "main"
    }
  },
  {
    "repo": "redis-developer/redis-arXiv-search",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.template",
        ".gitignore",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "docker-local-redis.yml"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "backend",
        "frontend",
        "k8s"
      ]
    },
    "search_info": {
      "repo": "redis-developer/redis-arXiv-search",
      "stars": 144,
      "language": "Python",
      "description": "Vector search demo with the arXiv paper dataset, RedisVL, HuggingFace, OpenAI, Cohere, FastAPI, React, and Redis.",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/redis-developer/redis-arXiv-search",
      "topics": [
        "arxiv",
        "arxiv-papers",
        "cohere",
        "document-retrieval",
        "document-search",
        "huggingface",
        "machine-learning",
        "nlp",
        "openai",
        "react",
        "redis",
        "vector-database",
        "vector-search"
      ],
      "size": 1028,
      "default_branch": "main"
    }
  },
  {
    "repo": "codedog-ai/codedog",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.sample",
        ".flake8",
        ".gitattributes",
        ".gitignore",
        "architecture.md",
        "changelog.md",
        "license",
        "readme.md",
        "updates.md",
        "fetch_samples_mcp.py"
      ],
      "dirs": [
        ".github",
        "codedog",
        "docs",
        "examples",
        "tests"
      ]
    },
    "search_info": {
      "repo": "codedog-ai/codedog",
      "stars": 140,
      "language": "Python",
      "description": "Code review assistant powered by LLM",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/codedog-ai/codedog",
      "topics": [
        "code-review",
        "code-review-bot",
        "langchain",
        "pull-request-review"
      ],
      "size": 7257,
      "default_branch": "master"
    }
  },
  {
    "repo": "yjg30737/pyqt-openai",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 2,
        "llm_usage": 3
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "manifest.in",
        "makefile",
        "readme.md",
        "pyproject.toml",
        "requirements.txt",
        "version_info.txt"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "har_and_cookies",
        "pyqt_openai"
      ]
    },
    "stats": {
      "total_issues_checked": 4,
      "llm_related_issues": 4,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 10,
      "repo_stars": 138,
      "repo_language": "Python",
      "repo_description": "VividNode: Multi-purpose Text & Image Generation Desktop Chatbot (supporting various models includin",
      "created_at": "2023-02-05T10:56:15Z",
      "updated_at": "2025-06-04T12:12:53Z"
    },
    "search_info": {
      "repo": "yjg30737/pyqt-openai",
      "stars": 138,
      "language": "Python",
      "description": "VividNode: Multi-purpose Text & Image Generation Desktop Chatbot (supporting various models including GPT).",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/yjg30737/pyqt-openai",
      "topics": [
        "chatbot",
        "chatgpt-desktop",
        "claude",
        "gemini",
        "gpt",
        "gpt4free",
        "litellm",
        "llama",
        "llm",
        "openai",
        "pyqt",
        "pyside6",
        "replicate"
      ],
      "size": 26003,
      "default_branch": "main"
    }
  },
  {
    "repo": "michaeloo0/chatgpt-doc-translator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "readme.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        "models",
        "server",
        "services",
        "tests"
      ]
    },
    "search_info": {
      "repo": "michaeloo0/chatgpt-doc-translator",
      "stars": 132,
      "language": "Python",
      "description": "This is a web service built using FastAPI and OpenAI's GPT-3.5-Turbo model that enables translation of various types of documents. The service current",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/michaeloo0/chatgpt-doc-translator",
      "topics": [],
      "size": 80,
      "default_branch": "main"
    }
  },
  {
    "repo": "jakecyr/chatgpt-voice-assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        ".python-version",
        "development.md",
        "readme.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "chatgpt_voice_assistant",
        "tests"
      ]
    },
    "search_info": {
      "repo": "jakecyr/chatgpt-voice-assistant",
      "stars": 131,
      "language": "Python",
      "description": "A chatbot that integrates OpenAI Whisper, Chat Completions and Voice Generation. Also provides the option to use free transcription / TTS options.",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/jakecyr/chatgpt-voice-assistant",
      "topics": [
        "artificial-intelligence",
        "chatgpt",
        "machine-learning",
        "python",
        "voice-assistant",
        "voice-recognition"
      ],
      "size": 441,
      "default_branch": "master"
    }
  },
  {
    "repo": "sean1832/SumGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "sean1832/SumGPT",
      "stars": 123,
      "language": "Python",
      "description": "Bulk summarization of documents using ChatGPT API",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/sean1832/SumGPT",
      "topics": [
        "artificial-intelligence",
        "bulk-operation",
        "gpt-3",
        "gpt-4",
        "knowledgemanagement",
        "note-taking",
        "openai",
        "openai-chatgpt",
        "parallel-computing",
        "python",
        "summarization",
        "ultrafast"
      ],
      "size": 97,
      "default_branch": "master"
    }
  },
  {
    "repo": "aju22/DocumentGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        "license",
        "readme.md",
        "app.py",
        "requirements.txt",
        "utils.py"
      ],
      "dirs": [
        ".streamlit",
        "conversation",
        "customtools",
        "filereader",
        "serp",
        "imgs",
        "pages",
        "static"
      ]
    },
    "stats": {
      "total_issues_checked": 6,
      "llm_related_issues": 5,
      "llm_percentage": 83.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 118,
      "repo_language": "Python",
      "repo_description": "DocumentGPT is a web application that allows you to chat over your research document using OpenAI's ",
      "created_at": "2023-06-16T17:32:35Z",
      "updated_at": "2025-06-17T11:58:22Z"
    },
    "search_info": {
      "repo": "aju22/DocumentGPT",
      "stars": 118,
      "language": "Python",
      "description": "DocumentGPT is a web application that allows you to chat over your research document using OpenAI's chat API and perform semantic search using vector ",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/aju22/DocumentGPT",
      "topics": [
        "chatgpt-api",
        "conversational-ai",
        "faiss",
        "gpt",
        "langchain",
        "llm",
        "natural-language-processing",
        "semantic-search",
        "streamlit",
        "vector-database",
        "webapp"
      ],
      "size": 1165,
      "default_branch": "main"
    }
  },
  {
    "repo": "1600822305/AetherLink",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".augment-guidelines",
        ".dockerignore",
        ".gitignore",
        ".nvmrc",
        "dockerfile",
        "license",
        "readme.md",
        "tasks_2025-06-20t22-28-02.md",
        "assets.config.json",
        "capacitor.config.ts"
      ],
      "dirs": [
        ".github",
        "android",
        "docs",
        "huggingface",
        "ios",
        "public",
        "python",
        "resources",
        "scripts",
        "src"
      ]
    },
    "search_info": {
      "repo": "1600822305/AetherLink",
      "stars": 116,
      "language": "TypeScript",
      "description": "AetherLink\u79fb\u52a8\u5e94\u7528\u662f\u4e00\u4e2a\u57fa\u4e8e\u73b0\u4ee3Web\u6280\u672f\u6784\u5efa\u7684\u8de8\u5e73\u53f0AI\u52a9\u624b\u5e94\u7528\u3002\u8be5\u5e94\u7528\u652f\u6301\u4e0e\u591a\u79cdAI\u6a21\u578b\uff08\u5982OpenAI\u3001Google Gemini\u3001Anthropic Claude\u3001Grok\u3001\u7845\u57fa\u6d41\u52a8\u3001\u706b\u5c71\u65b9\u821f\u7b49\uff09\u7684\u4ea4\u4e92\uff0c\u63d0\u4f9b\u6d41\u7545\u7684\u5bf9\u8bdd\u4f53\u9a8c\uff0c\u5e76\u652f\u6301Android\u5e73\u53f0\u90e8\u7f72\u3002\u5e94\u7528\u91c7\u7528React\u3001Type",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/1600822305/AetherLink",
      "topics": [
        "android-app",
        "capacitor",
        "chatbot",
        "ios-app",
        "llm",
        "mcp-client",
        "openai"
      ],
      "size": 17448,
      "default_branch": "main"
    }
  },
  {
    "repo": "ediziks/BingGPT-Discord-Bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".example.env",
        ".gitignore",
        ".pre-commit-config.yaml",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "dcbot.sh",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "ediziks/BingGPT-Discord-Bot",
      "stars": 115,
      "language": "Python",
      "description": "BingGPT Discord Bot that can handle /ask & /imagine prompts using reverse engineered API of Microsoft's Bing Chat under the hood",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/ediziks/BingGPT-Discord-Bot",
      "topics": [
        "bing",
        "bing-api",
        "bing-chat",
        "bingapi",
        "bingchat",
        "chat",
        "chatbot",
        "chatbots",
        "chatgpt",
        "chatgpt-api",
        "chatgpt-bot",
        "chatgpt4",
        "discord",
        "discord-bot",
        "edge",
        "edgegpt",
        "gpt",
        "gpt-4",
        "gpt4",
        "openai"
      ],
      "size": 64,
      "default_branch": "main"
    }
  },
  {
    "repo": "abinthomasonline/repopack-py",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 4,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        ".pre-commit-config.yaml",
        "dev.md",
        "license",
        "manifest.in",
        "readme.md",
        "pyproject.toml",
        "pytest.ini",
        "requirements-dev.txt"
      ],
      "dirs": [
        ".github",
        "repopack",
        "tests"
      ]
    },
    "search_info": {
      "repo": "abinthomasonline/repopack-py",
      "stars": 115,
      "language": "Python",
      "description": "Python version of \ud83d\udce6 repopack (https://github.com/yamadashy/repopack) by yamadashy (https://github.com/yamadashy)",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/abinthomasonline/repopack-py",
      "topics": [
        "ai",
        "ai-assistant",
        "anthropic",
        "chatbot",
        "chatgpt",
        "claude",
        "developer-tools",
        "development-tools",
        "devtools",
        "gemini",
        "generative-ai",
        "gpt",
        "llm",
        "openai",
        "python"
      ],
      "size": 81,
      "default_branch": "main"
    }
  },
  {
    "repo": "Kourva/AwesomeChatGPTBot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "init.py",
        "main.py",
        "requirements.txt",
        "titles.py",
        "token.txt",
        "utils.py"
      ],
      "dirs": [
        ".github",
        "accounts",
        "providers"
      ]
    },
    "search_info": {
      "repo": "Kourva/AwesomeChatGPTBot",
      "stars": 110,
      "language": "Python",
      "description": "ChatGPT Telegram bot: Free & Rich-Feature bot for enhanced conversations.",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/Kourva/AwesomeChatGPTBot",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "chatgpt3",
        "chatgpt4",
        "freechatgpt",
        "pytelegrambotapi",
        "python",
        "telegrambot"
      ],
      "size": 233,
      "default_branch": "main"
    }
  },
  {
    "repo": "zyzisastudyreallyhardguy/LLM4SD",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        "license",
        "readme.md",
        "code_gen_and_eval.py",
        "create_prompt.py",
        "eval.py",
        "eval_code.sh",
        "inference.py",
        "llm4sd_models.json",
        "requirements.txt",
        "run_others.sh"
      ],
      "dirs": [
        "eval_code_generation_repo",
        "eval_result",
        "inference_model_response",
        "prompt_file",
        "scaffold_datasets",
        "summarized_inference_rules",
        "synthesize_model_response"
      ]
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 1,
      "llm_percentage": 33.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 109,
      "repo_language": "Python",
      "repo_description": "The Open Source Code for LLM4SD (Large Language Models for Scientific Synthesis, Inference and Expla",
      "created_at": "2023-10-12T00:05:50Z",
      "updated_at": "2025-06-16T11:39:59Z"
    },
    "search_info": {
      "repo": "zyzisastudyreallyhardguy/LLM4SD",
      "stars": 109,
      "language": "Python",
      "description": "The Open Source Code for LLM4SD (Large Language Models for Scientific Synthesis, Inference and Explanation)",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/zyzisastudyreallyhardguy/LLM4SD",
      "topics": [],
      "size": 25901,
      "default_branch": "main"
    }
  },
  {
    "repo": "Sets88/sets88_telegram_bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Sets88/sets88_telegram_bot",
      "stars": 107,
      "language": "Python",
      "description": "Personal Telegram bot with a wide range of capabilities, it stays in permanent proof of concept stage so don't blame me for quality of code )",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/Sets88/sets88_telegram_bot",
      "topics": [
        "ai",
        "chatgpt",
        "claude",
        "claude-3",
        "dall-e",
        "gpt",
        "gpt-3",
        "gpt-4",
        "telegram",
        "telegram-bot"
      ],
      "size": 619,
      "default_branch": "master"
    }
  },
  {
    "repo": "securityfortech/secops-mcp",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        "docs",
        "tools"
      ]
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 1,
      "llm_percentage": 33.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 103,
      "repo_language": "Python",
      "repo_description": "All-in-one security testing toolbox that brings together popular open source tools through a single ",
      "created_at": "2025-03-28T10:26:05Z",
      "updated_at": "2025-06-19T18:14:48Z"
    },
    "search_info": {
      "repo": "securityfortech/secops-mcp",
      "stars": 103,
      "language": "Python",
      "description": "All-in-one security testing toolbox that brings together popular open source tools through a single MCP interface. Connected to an AI agent, it enable",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/securityfortech/secops-mcp",
      "topics": [],
      "size": 52,
      "default_branch": "main"
    }
  },
  {
    "repo": "rohitg00/manim-video-generator",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        ".ds_store",
        ".env.example",
        ".gitignore",
        "basictex.pkg",
        "dockerfile",
        "license",
        "mactex.pkg",
        "readme.md",
        "app.py",
        "mactex-basictex.pkg"
      ],
      "dirs": [
        "__pycache__",
        "static",
        "templates",
        "venv"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 1,
      "llm_percentage": 50.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 98,
      "repo_language": "Python",
      "repo_description": "This application allows you to generate mathematical animations using natural language descriptions.",
      "created_at": "2024-11-23T17:02:02Z",
      "updated_at": "2025-06-18T09:47:56Z"
    },
    "search_info": {
      "repo": "rohitg00/manim-video-generator",
      "stars": 98,
      "language": "Python",
      "description": "This application allows you to generate mathematical animations using natural language descriptions. It uses OpenAI's GPT model to convert your descri",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/rohitg00/manim-video-generator",
      "topics": [],
      "size": 13591,
      "default_branch": "main"
    }
  },
  {
    "repo": "M4cs/yourAI",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "discordbot.py",
        "train.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "M4cs/yourAI",
      "stars": 97,
      "language": "Python",
      "description": "GPT-2 Discord Bot and Steps to Train Something Like You",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/M4cs/yourAI",
      "topics": [
        "discordpy",
        "gpt-2",
        "gpt-2-simple",
        "openai"
      ],
      "size": 22,
      "default_branch": "master"
    }
  },
  {
    "repo": "hc20k/LLMChat",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license.md",
        "readme.md",
        "config.example.ini",
        "main.py",
        "requirements.txt",
        "update.py"
      ],
      "dirs": [
        "assets",
        "llmchat",
        "optional"
      ]
    },
    "stats": {
      "total_issues_checked": 19,
      "llm_related_issues": 17,
      "llm_percentage": 89.5,
      "issues_with_labels": 3,
      "label_percentage": 15.8,
      "avg_labels_per_issue": 0.16,
      "total_repo_labels": 9,
      "repo_stars": 97,
      "repo_language": "Python",
      "repo_description": "A Discord chatbot that supports popular LLMs for text generation and ultra-realistic voices for voic",
      "created_at": "2023-04-09T00:57:45Z",
      "updated_at": "2025-06-14T02:23:56Z"
    },
    "search_info": {
      "repo": "hc20k/LLMChat",
      "stars": 97,
      "language": "Python",
      "description": "A Discord chatbot that supports popular LLMs for text generation and ultra-realistic voices for voice chat.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/hc20k/LLMChat",
      "topics": [
        "ai",
        "artificial-intelligence",
        "bot",
        "chatbot",
        "discord",
        "gpt-4",
        "openai",
        "python",
        "speech-recognition"
      ],
      "size": 590,
      "default_branch": "master"
    }
  },
  {
    "repo": "strands-agents/mcp-server",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "notice",
        "readme.md",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "src"
      ]
    },
    "search_info": {
      "repo": "strands-agents/mcp-server",
      "stars": 97,
      "language": "Python",
      "description": "This MCP server provides documentation about Strands Agents to your GenAI tools, so you can use your favorite AI coding assistant to vibe-code Strands",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/strands-agents/mcp-server",
      "topics": [
        "agentic",
        "agentic-ai",
        "agents",
        "ai",
        "anthropic",
        "autonomous-agents",
        "bedrock",
        "genai",
        "litellm",
        "llama",
        "llm",
        "machine-learning",
        "mcp",
        "multi-agent-systems",
        "ollama",
        "openai",
        "opentelemetry",
        "python"
      ],
      "size": 34,
      "default_branch": "main"
    }
  },
  {
    "repo": "gabacode/chatPDF",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "gabacode/chatPDF",
      "stars": 95,
      "language": "Python",
      "description": "Load a PDF file and ask questions via llama_index and GPT",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/gabacode/chatPDF",
      "topics": [
        "chatbot",
        "chatgpt",
        "llama-index",
        "pdf"
      ],
      "size": 393,
      "default_branch": "main"
    }
  },
  {
    "repo": "legendsort/pdfChatGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".gitignore",
        "readme.md",
        "app.py",
        "requirements.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 2,
      "llm_percentage": 40.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 95,
      "repo_language": "Python",
      "repo_description": "QA with the pdf using gpt-3.5",
      "created_at": "2023-03-19T18:16:02Z",
      "updated_at": "2025-01-24T18:34:59Z"
    },
    "search_info": {
      "repo": "legendsort/pdfChatGPT",
      "stars": 95,
      "language": "Python",
      "description": "QA with the pdf using gpt-3.5",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/legendsort/pdfChatGPT",
      "topics": [
        "gpt-3",
        "gradio",
        "python",
        "tensorflow"
      ],
      "size": 6,
      "default_branch": "master"
    }
  },
  {
    "repo": "zahidkhawaja/whisper-nextjs",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".gitignore",
        "readme.md",
        "next.config.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "pages",
        "public",
        "styles"
      ]
    },
    "search_info": {
      "repo": "zahidkhawaja/whisper-nextjs",
      "stars": 95,
      "language": "JavaScript",
      "description": "Next.js app for serverless deployments of OpenAI Whisper on Banana.dev",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/zahidkhawaja/whisper-nextjs",
      "topics": [
        "javascript",
        "machine-learning",
        "nextjs",
        "openai",
        "openai-whisper",
        "react"
      ],
      "size": 74,
      "default_branch": "main"
    }
  },
  {
    "repo": "BerriAI/clerkie-cli",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".breakpoints",
        ".replit",
        "readme.md",
        "ask_clerkie.py",
        "call_clerkie.py",
        "install.sh",
        "main.py",
        "message_hook.py",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        "__pycache__",
        "venv"
      ]
    },
    "search_info": {
      "repo": "BerriAI/clerkie-cli",
      "stars": 93,
      "language": "Python",
      "description": "Clerkie-cli is a terminal tool that uses an LLM to help debug and troubleshoot coding errors in any programming language. It offers explanations, sugg",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/BerriAI/clerkie-cli",
      "topics": [],
      "size": 12836,
      "default_branch": "main"
    }
  },
  {
    "repo": "AmineDjeghri/generative-ai-project-template",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 4,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".env.example.docker",
        ".gitignore",
        ".pre-commit-config.yaml",
        "code_of_conduct.md",
        "contributing.md",
        "dockerfile",
        "dockerfile.ollama",
        "license",
        "makefile"
      ],
      "dirs": [
        ".github",
        "assets",
        "scripts",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "AmineDjeghri/generative-ai-project-template",
      "stars": 89,
      "language": "Python",
      "description": "Template for a new generative ai project using uv, streamlit, fastapi, llms (cloud & local with litellm and ollama) and langfuse for llm observability",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/AmineDjeghri/generative-ai-project-template",
      "topics": [
        "azureopenai",
        "linux",
        "macos",
        "mkdocs",
        "mlops",
        "openai",
        "python",
        "ubuntu"
      ],
      "size": 1873,
      "default_branch": "main"
    }
  },
  {
    "repo": "jackwuwei/gptspeaker",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "readme_zh-cn.md",
        "config.json",
        "gptspeaker.py",
        "heygpt.table",
        "kws.table",
        "llm_test.py",
        "requirements.txt"
      ],
      "dirs": [
        "image"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 5,
      "llm_percentage": 62.5,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 87,
      "repo_language": "Python",
      "repo_description": "The ChatGPT/DeepSeek Voice Assistant uses a Raspberry Pi (or desktop) to enable spoken conversation ",
      "created_at": "2023-05-31T15:19:28Z",
      "updated_at": "2025-06-19T16:30:08Z"
    },
    "search_info": {
      "repo": "jackwuwei/gptspeaker",
      "stars": 87,
      "language": "Python",
      "description": "The ChatGPT/DeepSeek Voice Assistant uses a Raspberry Pi (or desktop) to enable spoken conversation with OpenAI or DeepSeek large language models. Thi",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/jackwuwei/gptspeaker",
      "topics": [
        "ai",
        "chatbot",
        "chatgpt",
        "deepseek-r1",
        "raspberry-pi",
        "smarthome",
        "speech-recognition",
        "speech-to-text",
        "tts",
        "voice-assistant"
      ],
      "size": 11362,
      "default_branch": "main"
    }
  },
  {
    "repo": "wxc971231/TelegramChatBot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "wxc971231/TelegramChatBot",
      "stars": 85,
      "language": "Python",
      "description": "A telegram chatbot powered by OpenAI GPT API",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/wxc971231/TelegramChatBot",
      "topics": [],
      "size": 384,
      "default_branch": "main"
    }
  },
  {
    "repo": "Abhi5h3k/PrivateDocBot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 5,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "chainlit.md",
        "chatbot.gif",
        "main.py",
        "readme.md",
        "rebuild_vector_db.png",
        "requirements.txt"
      ],
      "dirs": [
        ".chainlit",
        "config",
        "data",
        "models",
        "public",
        "src",
        "vectorstore"
      ]
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 4,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 84,
      "repo_language": "Python",
      "repo_description": "\ud83d\udcda Local PDF-Integrated Chat Bot: Secure Conversations and Document Assistance with LLM-Powered Priva",
      "created_at": "2023-08-13T17:09:02Z",
      "updated_at": "2025-06-04T11:14:06Z"
    },
    "search_info": {
      "repo": "Abhi5h3k/PrivateDocBot",
      "stars": 84,
      "language": "Python",
      "description": "\ud83d\udcda Local PDF-Integrated Chat Bot: Secure Conversations and Document Assistance with LLM-Powered Privacy",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/Abhi5h3k/PrivateDocBot",
      "topics": [
        "ai",
        "chatgpt",
        "generative",
        "gpt",
        "gpt-4",
        "gpt4all",
        "langchain",
        "llama",
        "llama-2",
        "llama-cpp",
        "llama2",
        "llamacpp",
        "llm",
        "localai",
        "openai",
        "pdf",
        "private",
        "privategpt",
        "self-hosted",
        "vectorstore"
      ],
      "size": 2504,
      "default_branch": "main"
    }
  },
  {
    "repo": "Rai220/TelegramChatGPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "dataset.jsonl",
        "gpt_utils.py",
        "requirements.txt",
        "tg_bot_eng.py",
        "tg_bot_rus.py",
        "tg_bot_with_python.py"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 5,
      "llm_related_issues": 4,
      "llm_percentage": 80.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 84,
      "repo_language": "Python",
      "repo_description": "Personal telegram chat-bot based on OpenAI GPT-3 finetuning.",
      "created_at": "2023-01-24T10:57:52Z",
      "updated_at": "2025-06-17T05:27:40Z"
    },
    "search_info": {
      "repo": "Rai220/TelegramChatGPT",
      "stars": 84,
      "language": "Python",
      "description": "Personal telegram chat-bot based on OpenAI GPT-3 finetuning.",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/Rai220/TelegramChatGPT",
      "topics": [],
      "size": 104,
      "default_branch": "main"
    }
  },
  {
    "repo": "LexiestLeszek/scrapeGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "db.json",
        "requirements.txt",
        "scrapegpt.py",
        "scrapegpt_gradio_app.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "LexiestLeszek/scrapeGPT",
      "stars": 84,
      "language": "Python",
      "description": "ScrapeGPT is a RAG-based Telegram bot designed to scrape and analyze websites, then answer questions based on the scraped content. The bot utilizes Re",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/LexiestLeszek/scrapeGPT",
      "topics": [
        "crawler",
        "huggingface",
        "large-language-models",
        "llm",
        "ollama",
        "proxy",
        "rag",
        "retrieval-augmented-generation",
        "robots-txt",
        "scraper",
        "telegram-bot",
        "website-scraper"
      ],
      "size": 64,
      "default_branch": "main"
    }
  },
  {
    "repo": "aws-samples/bedrock-claude-chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "bedrockchatui.ipynb",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "bedrock-chat.py",
        "config.json",
        "install_package.sh",
        "model_id.json",
        "pricing.json"
      ],
      "dirs": [
        "docker",
        "images",
        "prompt",
        "utils"
      ]
    },
    "search_info": {
      "repo": "aws-samples/bedrock-claude-chatbot",
      "stars": 83,
      "language": "Python",
      "description": "Personal Chatbot powered by Amazon Bedrock LLMs with a data analytics feature that provides isolated servereless compute on Athena Spark for code exec",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/aws-samples/bedrock-claude-chatbot",
      "topics": [],
      "size": 30838,
      "default_branch": "main"
    }
  },
  {
    "repo": "noes14155/Telegrambot-with-GPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "noes14155/Telegrambot-with-GPT",
      "stars": 81,
      "language": "Python",
      "description": "telegram bot with gpt",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/noes14155/Telegrambot-with-GPT",
      "topics": [
        "aiogram-bot",
        "chatbot",
        "chatgpt-python",
        "free-gpt",
        "python",
        "telegram"
      ],
      "size": 558,
      "default_branch": "master"
    }
  },
  {
    "repo": "morioka/tiny-openai-whisper-api",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "morioka/tiny-openai-whisper-api",
      "stars": 80,
      "language": "Python",
      "description": "OpenAI Whisper API-style local server, runnig on FastAPI",
      "search_query": "openai fastapi language:python stars:>3",
      "search_description": "FastAPI apps using OpenAI",
      "url": "https://github.com/morioka/tiny-openai-whisper-api",
      "topics": [
        "speech-recognition",
        "speech-to-text"
      ],
      "size": 82,
      "default_branch": "main"
    }
  },
  {
    "repo": "haseeb-heaven/gemini-interpreter",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "changelogs.md",
        "license.txt",
        "readme.md",
        "bardcode_interpreter.py",
        "bardcoder.log",
        "bardcoder.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "__pycache__",
        "bash_src",
        "libs",
        "resources",
        "response",
        "styles"
      ]
    },
    "search_info": {
      "repo": "haseeb-heaven/gemini-interpreter",
      "stars": 80,
      "language": "Python",
      "description": "Gemini is Code generator and Code Interpreter for Google Gemini.",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/haseeb-heaven/gemini-interpreter",
      "topics": [
        "auto-gpt",
        "bard",
        "bard-ai",
        "bard-api",
        "bing-ai",
        "chatbot",
        "code-generation",
        "coder",
        "google",
        "google-ai",
        "google-bard-api",
        "google-cloud",
        "google-palm",
        "google-vertex-ai",
        "googlebard",
        "gpt",
        "gpt-3",
        "python"
      ],
      "size": 6114,
      "default_branch": "master"
    }
  },
  {
    "repo": "icarito/gtk-llm-chat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 3,
        "llm_usage": 2
      },
      "files": [
        ".env.ci",
        ".gitignore",
        ".gitmodules",
        "license",
        "manifest.in",
        "readme.md",
        "add_language.sh",
        "build-ci.py",
        "build.spec",
        "compile_po.sh"
      ],
      "dirs": [
        ".github",
        "desktop",
        "docs",
        "gtk_llm_chat",
        "hooks",
        "linux",
        "macos",
        "po",
        "windows"
      ]
    },
    "search_info": {
      "repo": "icarito/gtk-llm-chat",
      "stars": 80,
      "language": "Python",
      "description": "A GTK graphical interface for chatting with large language models (LLMs)",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/icarito/gtk-llm-chat",
      "topics": [
        "ai",
        "chat",
        "chatbot",
        "gemini",
        "gtk",
        "ia",
        "llm",
        "openai"
      ],
      "size": 2019,
      "default_branch": "main"
    }
  },
  {
    "repo": "Anil-matcha/DiscordGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "Anil-matcha/DiscordGPT",
      "stars": 79,
      "language": "Python",
      "description": "Integrate ChatGPT into your own discord bot",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/Anil-matcha/DiscordGPT",
      "topics": [
        "chatbot",
        "chatgpt",
        "discord",
        "discordgpt",
        "gpt",
        "gpt4",
        "langchain",
        "openai"
      ],
      "size": 4,
      "default_branch": "main"
    }
  },
  {
    "repo": "richawo/chain-of-density",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "richawo/chain-of-density",
      "stars": 76,
      "language": "Python",
      "description": "Implementing the Chain Of Density text summarisation technique from recent NLP research by researchers at Salesforce, MIT, Columbia, etc. Takes a long",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/richawo/chain-of-density",
      "topics": [
        "ai",
        "llm",
        "openai",
        "poetry",
        "python",
        "summarization",
        "summarizer"
      ],
      "size": 113,
      "default_branch": "main"
    }
  },
  {
    "repo": "MFYDev/odoo-expert",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "MFYDev/odoo-expert",
      "stars": 75,
      "language": "Python",
      "description": "RAG-powered documentation assistant that converts, processes, and provides semantic search capabilities for Odoo's technical documentation. Supports m",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/MFYDev/odoo-expert",
      "topics": [
        "chatbot",
        "documentation",
        "embeddings",
        "openai",
        "rag",
        "retrieval-augmented-generation"
      ],
      "size": 311,
      "default_branch": "main"
    }
  },
  {
    "repo": "Lukium/chatgpt-api-server",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "access_tokens.json",
        "conversations.json",
        "main.py",
        "requirements.txt",
        "settings.json",
        "users.json"
      ],
      "dirs": [
        ".github",
        "api",
        "classes",
        "contrib",
        "forms",
        "helpers",
        "htmls",
        "localizations",
        "settings",
        "shinysocks"
      ]
    },
    "search_info": {
      "repo": "Lukium/chatgpt-api-server",
      "stars": 75,
      "language": "Python",
      "description": "ChatGPT Web API server based on Flask that can respond both via browser through Flask Forms and directly via POST/GET Requests",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Lukium/chatgpt-api-server",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "openai",
        "openai-api",
        "python"
      ],
      "size": 732,
      "default_branch": "main"
    }
  },
  {
    "repo": "reecevela/phone",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "reecevela/phone",
      "stars": 75,
      "language": "Python",
      "description": "https://bland.ai is better (went pro)",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/reecevela/phone",
      "topics": [
        "chatbot",
        "flask",
        "heroku",
        "openai",
        "phone",
        "python",
        "python3",
        "twilio"
      ],
      "size": 9519,
      "default_branch": "main"
    }
  },
  {
    "repo": "tyaga001/devtoolsacademy",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".coderabbit.yaml",
        ".env.example",
        ".eslintrc.json",
        ".gitignore",
        ".npmrc",
        ".prettierrc",
        "contributing.md",
        "license",
        "readme.md",
        "components.json"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "prisma",
        "public",
        "src"
      ]
    },
    "search_info": {
      "repo": "tyaga001/devtoolsacademy",
      "stars": 75,
      "language": "MDX",
      "description": "everything about awesome developer tools",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/tyaga001/devtoolsacademy",
      "topics": [
        "blogging",
        "claude-ai",
        "compare",
        "database",
        "developer-tools",
        "devtools",
        "javascript",
        "mdx",
        "nextjs",
        "open-source",
        "openai",
        "react",
        "review-tools",
        "shadcn-ui",
        "tailwindcss",
        "technical-writing",
        "tutorial",
        "typescript"
      ],
      "size": 86065,
      "default_branch": "main"
    }
  },
  {
    "repo": "gustavz/whatsbot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "gustavz/whatsbot",
      "stars": 73,
      "language": "Python",
      "description": "python flask app serving as webhook for whatsapp business accounts making prompts to openai api",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/gustavz/whatsbot",
      "topics": [
        "bot",
        "cloud-api",
        "flask",
        "openai",
        "python",
        "webhooks",
        "whatsapp"
      ],
      "size": 1002,
      "default_branch": "main"
    }
  },
  {
    "repo": "tom-doerr/chatgpt_commit_message_hook",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "docker-hook",
        "docker-prime.sh",
        "openaiapirc",
        "prepare-commit-msg",
        "requirements.txt"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "tom-doerr/chatgpt_commit_message_hook",
      "stars": 72,
      "language": "Python",
      "description": "Enhance your git workflow using AI-generated commit messages from ChatGPT. Seamless integration for a well-documented commit log.",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/tom-doerr/chatgpt_commit_message_hook",
      "topics": [
        "chatgpt",
        "git",
        "git-hooks",
        "openai"
      ],
      "size": 37,
      "default_branch": "main"
    }
  },
  {
    "repo": "dawangraoming/chatgpt-telegram-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".editorconfig",
        ".env",
        ".gitattributes",
        ".gitignore",
        ".prettierignore",
        ".prettierrc",
        "dockerfile",
        "readme.md",
        "license"
      ],
      "dirs": [
        ".github",
        "docs",
        "src"
      ]
    },
    "search_info": {
      "repo": "dawangraoming/chatgpt-telegram-bot",
      "stars": 72,
      "language": "TypeScript",
      "description": "ChatGPT and Telegram bot, based on Node.js.",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/dawangraoming/chatgpt-telegram-bot",
      "topics": [
        "ai",
        "chatbot",
        "chatgpt",
        "docker",
        "nodejs",
        "openai",
        "telegram-bot",
        "typescript"
      ],
      "size": 3442,
      "default_branch": "main"
    }
  },
  {
    "repo": "harshitethic/ChatGPT-Telegram-Bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        "procfile",
        "readme.md",
        "harshitethic.py",
        "requirements.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 10,
      "llm_related_issues": 6,
      "llm_percentage": 60.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 71,
      "repo_language": "Python",
      "repo_description": "",
      "created_at": "2022-12-31T23:14:18Z",
      "updated_at": "2025-05-29T16:30:20Z"
    },
    "search_info": {
      "repo": "harshitethic/ChatGPT-Telegram-Bot",
      "stars": 71,
      "language": "Python",
      "description": "",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/harshitethic/ChatGPT-Telegram-Bot",
      "topics": [],
      "size": 8,
      "default_branch": "main"
    }
  },
  {
    "repo": "discus0434/paper-summarizer",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license.txt",
        "readme.md",
        "app.py"
      ],
      "dirs": [
        "assets",
        "client",
        "docker",
        "src"
      ]
    },
    "search_info": {
      "repo": "discus0434/paper-summarizer",
      "stars": 70,
      "language": "Python",
      "description": "A Slack Bot for summarizing arXiv papers, powered by OpenAI LLMs.",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/discus0434/paper-summarizer",
      "topics": [
        "gpt-4",
        "slack-bot"
      ],
      "size": 422,
      "default_branch": "master"
    }
  },
  {
    "repo": "xluxeq/GPT2-Telegram-Chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "gpt-2-bot.ipynb",
        "readme.md",
        "scores.md",
        "download_model.py",
        "requirements.txt",
        "start.sh"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "xluxeq/GPT2-Telegram-Chatbot",
      "stars": 69,
      "language": "Python",
      "description": "GPT-2 Telegram Chat bot",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/xluxeq/GPT2-Telegram-Chatbot",
      "topics": [
        "artificial",
        "bot",
        "chat",
        "chatbot",
        "generation",
        "google",
        "gpt-2",
        "gpt2",
        "intelligence",
        "learning",
        "machine",
        "prediction",
        "python",
        "script",
        "telegram",
        "tensorflow",
        "text"
      ],
      "size": 1337,
      "default_branch": "master"
    }
  },
  {
    "repo": "rapmd73/Companion",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "rapmd73/Companion",
      "stars": 66,
      "language": "Python",
      "description": "An AI-powered Discord bot blending playful conversation with smart moderation tools, adding charm and order to your server.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/rapmd73/Companion",
      "topics": [
        "ai-chat",
        "ai-chatbot",
        "artificial-intelligence",
        "chatgpt",
        "cohere",
        "discord",
        "discord-api",
        "discord-bot",
        "discord-py",
        "discordapp",
        "gpt-4",
        "language-model",
        "large-language-models",
        "llm",
        "logging",
        "moderation",
        "ollama",
        "openai",
        "python",
        "python3"
      ],
      "size": 13720,
      "default_branch": "main"
    }
  },
  {
    "repo": "petermartens98/OpenAI-Whisper-Audio-Transcription-And-Summarization-Chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "appv1",
        "appv10",
        "appv11",
        "appv12",
        "appv2",
        "appv3",
        "appv4",
        "appv5",
        "appv6",
        "appv7"
      ]
    },
    "search_info": {
      "repo": "petermartens98/OpenAI-Whisper-Audio-Transcription-And-Summarization-Chatbot",
      "stars": 65,
      "language": "Python",
      "description": "Web app enabling users to either record or upload audio files. Then utilizing OpenAI API (Whisper, GPT4) generates transcriptions, summaries, fact che",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/petermartens98/OpenAI-Whisper-Audio-Transcription-And-Summarization-Chatbot",
      "topics": [
        "gpt4",
        "langchain",
        "nltk",
        "opeanai",
        "python",
        "sqlite",
        "streamlit",
        "whisper"
      ],
      "size": 89,
      "default_branch": "main"
    }
  },
  {
    "repo": "gabrielchua/DAVE",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "gabrielchua/DAVE",
      "stars": 64,
      "language": "Python",
      "description": "Streamlit app implementation of OpenAI Assistants API (with Code Interpreter) ",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/gabrielchua/DAVE",
      "topics": [
        "llm",
        "openai"
      ],
      "size": 10708,
      "default_branch": "main"
    }
  },
  {
    "repo": "jf3tt/chatgpt-telegram-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "jf3tt/chatgpt-telegram-bot",
      "stars": 63,
      "language": "Python",
      "description": "Python telegram bot, which utilizes the OpenAI API for implementing GPT-4 and speech-to-text functionality. The bot handles text and voice input from ",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/jf3tt/chatgpt-telegram-bot",
      "topics": [
        "chatgpt",
        "gpt-4",
        "telegram-bot"
      ],
      "size": 22,
      "default_branch": "main"
    }
  },
  {
    "repo": "shamspias/chatgpt-voice-chatbot-telegram",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "shamspias/chatgpt-voice-chatbot-telegram",
      "stars": 63,
      "language": "Python",
      "description": "ChatGPT Voice Chatbot Telegram is a Python and Flask-based GitHub repository that enables users to communicate with an AI chatbot using voice-to-text ",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/shamspias/chatgpt-voice-chatbot-telegram",
      "topics": [
        "celery",
        "chatbot",
        "chatgpt",
        "dall-e",
        "flask",
        "gpt-3",
        "openjourney",
        "python",
        "telegram-bot",
        "telegram-voice-chat",
        "text-to-speech",
        "text-to-speech-python3",
        "tts",
        "voice-chat",
        "voice-conversion",
        "voice-recognition",
        "voice-to-text",
        "whisper"
      ],
      "size": 71,
      "default_branch": "main"
    }
  },
  {
    "repo": "fabioo29/chatgpt-voice-assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "fabioo29/chatgpt-voice-assistant",
      "stars": 62,
      "language": "Python",
      "description": "A voice assistant powered by OpenAI's ChatGPT language model, currently available in six languages.",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/fabioo29/chatgpt-voice-assistant",
      "topics": [
        "chatbot",
        "chatgpt",
        "free",
        "voice"
      ],
      "size": 125,
      "default_branch": "main"
    }
  },
  {
    "repo": "ccq1/awsome_kali_MCPServers",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "app.py",
        "config.yaml",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "ccq1/awsome_kali_MCPServers",
      "stars": 61,
      "language": "Python",
      "description": "awsome kali MCPServers is a set of MCP servers tailored for Kali Linux, designed to empower AI Agents in reverse engineering and security testing. It ",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/ccq1/awsome_kali_MCPServers",
      "topics": [
        "agent",
        "kali-linux",
        "llm",
        "mcp-server",
        "security",
        "tools"
      ],
      "size": 41,
      "default_branch": "master"
    }
  },
  {
    "repo": "rastmob/openai-grammar-correction",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "code_of_conduct.md",
        "grammar correctionopenainodejsangular.png",
        "license",
        "readme.md",
        "security.md",
        "index.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        ".github",
        "app",
        "public"
      ]
    },
    "search_info": {
      "repo": "rastmob/openai-grammar-correction",
      "stars": 61,
      "language": "TypeScript",
      "description": "English grammar fixer with the help of OpenAI: just paste your text and copy the grammar-fixed sentence.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/rastmob/openai-grammar-correction",
      "topics": [
        "ai",
        "angular15",
        "cors",
        "express",
        "gpt",
        "gpt-3",
        "gpt3",
        "grammar",
        "grammar-checker",
        "grammar-rules",
        "nodejs",
        "openai",
        "openai-api"
      ],
      "size": 2575,
      "default_branch": "main"
    }
  },
  {
    "repo": "scmanjarrez/EdgeGPT-Telegram-Bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "dockerfile",
        "license",
        "readme.md",
        "dev_requirements.txt",
        "docker-compose.yaml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "src",
        "templates"
      ]
    },
    "stats": {
      "total_issues_checked": 13,
      "llm_related_issues": 11,
      "llm_percentage": 84.6,
      "issues_with_labels": 4,
      "label_percentage": 30.8,
      "avg_labels_per_issue": 0.31,
      "total_repo_labels": 13,
      "repo_stars": 60,
      "repo_language": "Python",
      "repo_description": "Telegram bot using EdgeGPT unofficial API",
      "created_at": "2023-02-16T14:04:40Z",
      "updated_at": "2025-06-16T07:27:55Z"
    },
    "search_info": {
      "repo": "scmanjarrez/EdgeGPT-Telegram-Bot",
      "stars": 60,
      "language": "Python",
      "description": "Telegram bot using EdgeGPT unofficial API",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/scmanjarrez/EdgeGPT-Telegram-Bot",
      "topics": [
        "bing",
        "bing-chat",
        "chatgpt",
        "edgegpt",
        "microsoft",
        "openai",
        "python-telegram-bot",
        "python3",
        "telegram-bot"
      ],
      "size": 194,
      "default_branch": "master"
    }
  },
  {
    "repo": "jamaljm/snapcv",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "components.json",
        "next.config.ts",
        "package-lock.json",
        "package.json",
        "postcss.config.mjs",
        "sampl.json",
        "tailwind.config.ts"
      ],
      "dirs": [
        ".github",
        "public",
        "scripts",
        "src"
      ]
    },
    "search_info": {
      "repo": "jamaljm/snapcv",
      "stars": 59,
      "language": "TypeScript",
      "description": "SnapCV is an AI-driven tool that turns resumes into professional portfolios with ease. Just upload your resume, and our AI handles the rest.",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/jamaljm/snapcv",
      "topics": [
        "ai",
        "css",
        "javascript",
        "nextjs",
        "nodejs",
        "openai",
        "portfoilo-website",
        "portfolio",
        "resume",
        "shdcn",
        "supabase",
        "tailwind",
        "typescript"
      ],
      "size": 1067,
      "default_branch": "main"
    }
  },
  {
    "repo": "e4c6/DiscordGPT-3",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "dockerfile",
        "license",
        "readme.md",
        "bot.py",
        "containers.py",
        "docker-compose.override.yml",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "abstraction",
        "cogs",
        "errors",
        "helpers",
        "implementation",
        "prompts",
        "services",
        "tests"
      ]
    },
    "search_info": {
      "repo": "e4c6/DiscordGPT-3",
      "stars": 58,
      "language": "Python",
      "description": "OpenAI api integration for a discord bot with completion and q&a functionality.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/e4c6/DiscordGPT-3",
      "topics": [],
      "size": 65,
      "default_branch": "main"
    }
  },
  {
    "repo": "vladislav-bordiug/ChatGPT_DALL_E_StableDiffusion_Telegram_Bot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".env",
        "dockerfile",
        "license",
        "readme.md",
        "docker-compose.yml",
        "pytest.ini",
        "requirements.txt"
      ],
      "dirs": [
        "app",
        "images",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 1,
      "llm_percentage": 50.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 58,
      "repo_language": "Python",
      "repo_description": "This is ChatGPT, DALL\u00b7E, Stable Diffusion python-telegram-bot with cryptocurrency payments. It allow",
      "created_at": "2023-04-07T18:22:58Z",
      "updated_at": "2025-06-08T17:46:16Z"
    },
    "search_info": {
      "repo": "vladislav-bordiug/ChatGPT_DALL_E_StableDiffusion_Telegram_Bot",
      "stars": 58,
      "language": "Python",
      "description": "This is ChatGPT, DALL\u00b7E, Stable Diffusion python-telegram-bot with cryptocurrency payments. It allows you to generate images and chat with ChatGPT. ",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/vladislav-bordiug/ChatGPT_DALL_E_StableDiffusion_Telegram_Bot",
      "topics": [
        "ai",
        "aiogram",
        "aiogram-bot",
        "aiogrambot",
        "aiohttp",
        "async",
        "async-await",
        "asynchronous",
        "asyncio",
        "bot",
        "chatgpt",
        "crypto",
        "dall-e",
        "fastapi",
        "postgresql",
        "python",
        "railway",
        "stable-diffusion",
        "telegram",
        "telegram-bot"
      ],
      "size": 22210,
      "default_branch": "main"
    }
  },
  {
    "repo": "ilhansevval/Gemini-Chatbot-Interface-with-Streamlit",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "app_chat.py",
        "requirements.txt"
      ],
      "dirs": [
        ".streamlit",
        "docs"
      ]
    },
    "search_info": {
      "repo": "ilhansevval/Gemini-Chatbot-Interface-with-Streamlit",
      "stars": 58,
      "language": "Python",
      "description": "This project is a Streamlit-based chat application that interacts with the Gemini AI model, allowing users to engage in conversations with an artifici",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/ilhansevval/Gemini-Chatbot-Interface-with-Streamlit",
      "topics": [
        "chatbot",
        "gemini",
        "streamlit"
      ],
      "size": 3678,
      "default_branch": "main"
    }
  },
  {
    "repo": "victordonoso/chatgpt_clone",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "openai_django"
      ]
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 2,
      "llm_percentage": 66.7,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 56,
      "repo_language": "Python",
      "repo_description": "A simple ChatGPT clone in Django using the new gpt-3.5-turbo model",
      "created_at": "2023-03-01T19:19:39Z",
      "updated_at": "2025-02-06T04:56:13Z"
    },
    "search_info": {
      "repo": "victordonoso/chatgpt_clone",
      "stars": 56,
      "language": "Python",
      "description": "A simple ChatGPT clone in Django using the new gpt-3.5-turbo model",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/victordonoso/chatgpt_clone",
      "topics": [
        "chatgpt-api",
        "django",
        "openai",
        "python"
      ],
      "size": 31,
      "default_branch": "master"
    }
  },
  {
    "repo": "csensor/GPT_Voice_Assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "csensor/GPT_Voice_Assistant",
      "stars": 56,
      "language": "Python",
      "description": "\u57fa\u4e8eopenAI GPT\u5b9e\u73b0\u7684\u667a\u80fd\u4ea4\u4e92\u8bed\u97f3\u52a9\u624b",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/csensor/GPT_Voice_Assistant",
      "topics": [],
      "size": 126,
      "default_branch": "main"
    }
  },
  {
    "repo": "intelligentnode/IntelliChat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        "assets",
        "intellichat"
      ]
    },
    "search_info": {
      "repo": "intelligentnode/IntelliChat",
      "stars": 56,
      "language": "TypeScript",
      "description": "Modern AI chatbot supporting multiple LLMs. Switch between Gemini, Mistral, Llama, Claude and ChatGPT.",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/intelligentnode/IntelliChat",
      "topics": [
        "anthropic",
        "azure-openai",
        "bard",
        "chatbot",
        "chatbot-ui",
        "chatgpt",
        "claude",
        "gemini",
        "gpt-4o",
        "llama2",
        "llm",
        "mistral",
        "nextjs",
        "o3",
        "openai",
        "opengpt",
        "replicate",
        "typescript",
        "vercel",
        "vllm"
      ],
      "size": 21860,
      "default_branch": "main"
    }
  },
  {
    "repo": "sabber-slt/twitter-analysor",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env",
        ".gitignore",
        "contributing.md",
        "readme.md",
        "package-lock.json",
        "package.json",
        "tsconfig.json",
        "tslint.json",
        "yarn.lock"
      ],
      "dirs": [
        "python",
        "src"
      ]
    },
    "search_info": {
      "repo": "sabber-slt/twitter-analysor",
      "stars": 54,
      "language": "Python",
      "description": " A Twitter bot that reads the tweets of a given username and analyzes the user's personality using AI.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/sabber-slt/twitter-analysor",
      "topics": [
        "bot",
        "chatgpt",
        "express",
        "nodejs",
        "openai",
        "puppeteer",
        "python",
        "selenium",
        "twitter"
      ],
      "size": 95,
      "default_branch": "main"
    }
  },
  {
    "repo": "Kouidersif/openai-API",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Kouidersif/openai-API",
      "stars": 53,
      "language": "Python",
      "description": "Django application ChatBot using openai-API",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/Kouidersif/openai-API",
      "topics": [
        "chatgpt",
        "django",
        "openai",
        "python3"
      ],
      "size": 94,
      "default_branch": "main"
    }
  },
  {
    "repo": "trananhtuat/react-openai-chat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        "license",
        "readme.md"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "trananhtuat/react-openai-chat",
      "stars": 53,
      "language": "JavaScript",
      "description": "AI chatbot base on OpenAI api",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/trananhtuat/react-openai-chat",
      "topics": [
        "chatgpt",
        "express",
        "mern",
        "mongodb",
        "mui",
        "nodejs",
        "openai",
        "reactjs"
      ],
      "size": 67,
      "default_branch": "main"
    }
  },
  {
    "repo": "OldCodersClub/LariskaBot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "docker-compose.yml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "lariska_bot"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 1,
      "llm_percentage": 50.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 52,
      "repo_language": "Python",
      "repo_description": "LariskaBot - telegram-bot (Python, aiogram)",
      "created_at": "2022-07-10T20:12:25Z",
      "updated_at": "2025-04-25T11:22:54Z"
    },
    "search_info": {
      "repo": "OldCodersClub/LariskaBot",
      "stars": 52,
      "language": "Python",
      "description": "LariskaBot - telegram-bot (Python, aiogram)",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/OldCodersClub/LariskaBot",
      "topics": [
        "aiogram",
        "aiogram-bot",
        "aiogrambot",
        "bot",
        "chatgpt",
        "chatgpt-api",
        "chatgpt-bot",
        "chatgpt-python",
        "chatgpt3",
        "fuzzywuzzy",
        "gpt",
        "gpt-3",
        "openai",
        "openai-api",
        "openai-chatgpt",
        "python",
        "telegram",
        "telegram-bot"
      ],
      "size": 238,
      "default_branch": "master"
    }
  },
  {
    "repo": "t04glovern/gpt-2-flask-api",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "buildspec.yml",
        "cloudformation_deploy.sh",
        "container_push.sh",
        "docker-compose.yml",
        "environment.yml"
      ],
      "dirs": [
        "cloudformation",
        "deployment"
      ]
    },
    "search_info": {
      "repo": "t04glovern/gpt-2-flask-api",
      "stars": 52,
      "language": "Python",
      "description": "OpenAI GPT-2 Flask API",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/t04glovern/gpt-2-flask-api",
      "topics": [],
      "size": 1581,
      "default_branch": "master"
    }
  },
  {
    "repo": "intelligentnode/Intelli",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "pipreadme.md",
        "readme.md",
        "setup.py"
      ],
      "dirs": [
        "assets",
        "instructions",
        "intelli",
        "sample"
      ]
    },
    "search_info": {
      "repo": "intelligentnode/Intelli",
      "stars": 52,
      "language": "Python",
      "description": "Create chatbot and AI agent workflows with unified access.",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/intelligentnode/Intelli",
      "topics": [
        "autogpt",
        "automation",
        "chatbot",
        "chatgpt",
        "claude",
        "claude-3-5-sonnet",
        "deepseek-r1",
        "diffusion",
        "gemini",
        "llama3",
        "llm",
        "mcp",
        "mcp-client",
        "mistral"
      ],
      "size": 3229,
      "default_branch": "main"
    }
  },
  {
    "repo": "mattelim/text-gpt-p5-app",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        ".dockerignore",
        ".env.example",
        ".gitattributes",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "next.config.js",
        "package-lock.json"
      ],
      "dirs": [
        ".github",
        "pages",
        "public"
      ]
    },
    "search_info": {
      "repo": "mattelim/text-gpt-p5-app",
      "stars": 52,
      "language": "JavaScript",
      "description": "Text to p5.js Generative Editor powered by OpenAI GPT",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/mattelim/text-gpt-p5-app",
      "topics": [
        "codemirror",
        "editor",
        "gpt",
        "gpt-3",
        "javascript",
        "nextjs",
        "openai",
        "p5js",
        "react",
        "repl",
        "sandbox",
        "web"
      ],
      "size": 124,
      "default_branch": "main"
    }
  },
  {
    "repo": "progremir/navalmanac",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".eslintrc.json",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "fly.toml",
        "ingest.ts",
        "next.config.js",
        "package.json"
      ],
      "dirs": [
        "data",
        "pages",
        "public",
        "styles"
      ]
    },
    "search_info": {
      "repo": "progremir/navalmanac",
      "stars": 52,
      "language": "TypeScript",
      "description": "Chatbot based on Almanac of Naval Ravikant. Uses OpenAI's chat completion API",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/progremir/navalmanac",
      "topics": [
        "chatgpt",
        "flyio",
        "langchain",
        "naval",
        "nextjs",
        "typescript"
      ],
      "size": 1885,
      "default_branch": "main"
    }
  },
  {
    "repo": "Dev-Khant/Analyze-Github-Code",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Dev-Khant/Analyze-Github-Code",
      "stars": 51,
      "language": "Python",
      "description": "Get the information of a Github Repository using the power of LLM.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Dev-Khant/Analyze-Github-Code",
      "topics": [
        "chatgpt",
        "flask",
        "llm",
        "openai"
      ],
      "size": 113,
      "default_branch": "main"
    }
  },
  {
    "repo": "sunilkumardash9/Pdf-GPT",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        "license",
        "readme.md",
        "app.py",
        "requirements.txt"
      ],
      "dirs": [
        "resources"
      ]
    },
    "stats": {
      "total_issues_checked": 6,
      "llm_related_issues": 5,
      "llm_percentage": 83.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 51,
      "repo_language": "Python",
      "repo_description": "A Gradio app for chatting with PDFs",
      "created_at": "2023-05-11T11:16:41Z",
      "updated_at": "2025-03-21T15:41:14Z"
    },
    "search_info": {
      "repo": "sunilkumardash9/Pdf-GPT",
      "stars": 51,
      "language": "Python",
      "description": "A Gradio app for chatting with PDFs",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/sunilkumardash9/Pdf-GPT",
      "topics": [],
      "size": 387,
      "default_branch": "main"
    }
  },
  {
    "repo": "batuhanerenler/JARVIS-OpenAI-Voice-Assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "batuhanerenler/JARVIS-OpenAI-Voice-Assistant",
      "stars": 51,
      "language": "Python",
      "description": "Jarvis is a voice-enabled chatbot powered by OpenAI's GPT-3.5-turbo. It leverages state-of-the-art natural language processing to deliver intelligent ",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/batuhanerenler/JARVIS-OpenAI-Voice-Assistant",
      "topics": [],
      "size": 15,
      "default_branch": "main"
    }
  },
  {
    "repo": "zzh1996/chatgpt-telegram-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "zzh1996/chatgpt-telegram-bot",
      "stars": 50,
      "language": "Python",
      "description": "ChatGPT Telegram bot",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/zzh1996/chatgpt-telegram-bot",
      "topics": [
        "chatgpt",
        "claude-3",
        "gemini-pro",
        "gpt",
        "gpt-3",
        "gpt-4",
        "openai",
        "openai-api",
        "telegram",
        "telegram-bot"
      ],
      "size": 267,
      "default_branch": "master"
    }
  },
  {
    "repo": "codewithdark-git/DarkGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license"
      ],
      "dirs": [
        "backend"
      ]
    },
    "search_info": {
      "repo": "codewithdark-git/DarkGPT",
      "stars": 49,
      "language": "Python",
      "description": "DarkGPT Chat Explorer is an interactive web application that allows users to engage in conversations with various GPT (Generative Pre-trained Transfor",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/codewithdark-git/DarkGPT",
      "topics": [
        "app",
        "chatbot",
        "database",
        "gemini",
        "gemini-ai",
        "gemini-pro-vision",
        "gen-ai",
        "google",
        "gpt",
        "huggingface-transformers",
        "image-generation",
        "latest",
        "python",
        "pytorch",
        "sqlite3",
        "text-analysis",
        "text-classification",
        "text-summarization",
        "transformer"
      ],
      "size": 237712,
      "default_branch": "main"
    }
  },
  {
    "repo": "zhattention/ticktick-ai",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "zhattention/ticktick-ai",
      "stars": 49,
      "language": "Python",
      "description": "\ud83c\udfaf AI-powered voice assistant for TickTick, enabling natural language task management through speech. Built with OpenAI's speech recognition and TickTi",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/zhattention/ticktick-ai",
      "topics": [],
      "size": 59,
      "default_branch": "master"
    }
  },
  {
    "repo": "RyanCheddar/discord-voice-message-transcriber",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "RyanCheddar/discord-voice-message-transcriber",
      "stars": 48,
      "language": "Python",
      "description": "Discord.py bot that auto-transcribes voice messages using OpenAI Whisper",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/RyanCheddar/discord-voice-message-transcriber",
      "topics": [],
      "size": 42,
      "default_branch": "main"
    }
  },
  {
    "repo": "abhishek-ch/VectorVerse",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "config_template.ini",
        "docker-compose.yml",
        "example.env",
        "requirements.txt"
      ],
      "dirs": [
        ".docker",
        "verse"
      ]
    },
    "stats": {
      "total_issues_checked": 4,
      "llm_related_issues": 4,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 48,
      "repo_language": "Python",
      "repo_description": "Explore Multiple Vector Databases and chat with documents on Multiple LLM models, private LLM models",
      "created_at": "2023-05-30T09:03:13Z",
      "updated_at": "2024-11-05T20:25:48Z"
    },
    "search_info": {
      "repo": "abhishek-ch/VectorVerse",
      "stars": 48,
      "language": "Python",
      "description": "Explore Multiple Vector Databases and chat with documents on Multiple LLM models, private LLM models",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/abhishek-ch/VectorVerse",
      "topics": [
        "chatbot",
        "chatgpt",
        "chromadb",
        "elasticsearch",
        "embeddings",
        "generative",
        "generativeai",
        "milvus",
        "nlp",
        "openai",
        "python",
        "qdrant",
        "redis",
        "streamlit",
        "vectorstore"
      ],
      "size": 17831,
      "default_branch": "main"
    }
  },
  {
    "repo": "Jauharmuhammed/beyondgpt-ai-saas",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 5,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".gitignore",
        "readme.md",
        "components.json",
        "constants.ts",
        "env-sample",
        "env.ts",
        "middleware.ts",
        "next.config.js",
        "package-lock.json"
      ],
      "dirs": [
        "app",
        "assets",
        "components",
        "config",
        "contexts",
        "data",
        "hooks",
        "lib",
        "prisma",
        "public"
      ]
    },
    "search_info": {
      "repo": "Jauharmuhammed/beyondgpt-ai-saas",
      "stars": 47,
      "language": "TypeScript",
      "description": "AI Chatbot template with enhanced UI and features using OpenAI API. full fledged AI Sass application with subscription and streaming responses.",
      "search_query": "chatbot openai typescript stars:>3",
      "search_description": "TypeScript chatbot apps",
      "url": "https://github.com/Jauharmuhammed/beyondgpt-ai-saas",
      "topics": [
        "clerk-auth",
        "crisp-chat",
        "nextjs",
        "openai-api",
        "prisma",
        "stripe",
        "typescript"
      ],
      "size": 14290,
      "default_branch": "main"
    }
  },
  {
    "repo": "Ukenn2112/ChatGPTelegramBot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "bot.py",
        "config.json.example",
        "requirements.txt"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Ukenn2112/ChatGPTelegramBot",
      "stars": 45,
      "language": "Python",
      "description": "ChatGPTelegramBot \u652f\u6301\u79c1\u804a\u7fa4\u7ec4\u5355\u4f1a\u8bdd",
      "search_query": "telegram bot gpt language:python stars:>3",
      "search_description": "Telegram bot applications",
      "url": "https://github.com/Ukenn2112/ChatGPTelegramBot",
      "topics": [
        "chatgpt",
        "telegram"
      ],
      "size": 40,
      "default_branch": "master"
    }
  },
  {
    "repo": "socialtribexyz/Nectar-GPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "socialtribexyz/Nectar-GPT",
      "stars": 45,
      "language": null,
      "description": "NectarGPT is a cutting-edge open-source Chrome extension powered by GPT-X. Automate tasks like coding, writing product descriptions, creating social m",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/socialtribexyz/Nectar-GPT",
      "topics": [
        "ai",
        "artificial-intelligence",
        "astro",
        "autonomous-agents",
        "browser-extension",
        "chatgpt",
        "chrome-extension",
        "firefox-addon",
        "gpt",
        "gpt-4",
        "javascript",
        "nextjs",
        "openai",
        "python",
        "react"
      ],
      "size": 2552,
      "default_branch": "main"
    }
  },
  {
    "repo": "lissettecarlr/kuon",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "lissettecarlr/kuon",
      "stars": 44,
      "language": "Python",
      "description": "\u4e45\u8fdc\uff1a\u4e00\u4e2a\u5f00\u53d1\u4e2d\u7684\u5927\u6a21\u578b\u8bed\u97f3\u52a9\u624b\uff0c\u5f53\u524d\u5173\u6ce8\u6613\u7528\u6027\uff0c\u7b80\u5355\u4e0a\u624b\uff0c\u652f\u6301\u5bf9\u8bdd\u9009\u62e9\u6027\u8bb0\u5fc6\u548cModel Context Protocol (MCP)\u670d\u52a1\u3002 KUON:A large language model-based voice assistant under development, currently",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/lissettecarlr/kuon",
      "topics": [
        "assistant",
        "chatbot",
        "mcp",
        "openai",
        "python",
        "speech-to-text",
        "text-to-speech",
        "tts"
      ],
      "size": 16019,
      "default_branch": "lite"
    }
  },
  {
    "repo": "shivamim/Finance_AgenticAI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "shivamim/Finance_AgenticAI",
      "stars": 43,
      "language": "Python",
      "description": "Financial Agentic AI redefines financial analysis by integrating cutting-edge AI with real-time web search capabilities. This multi-agent system bring",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/shivamim/Finance_AgenticAI",
      "topics": [],
      "size": 46,
      "default_branch": "main"
    }
  },
  {
    "repo": "www-Ye/ChatDocuFlow",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "www-Ye/ChatDocuFlow",
      "stars": 42,
      "language": "Python",
      "description": "Document/Paper Management System based on OpenAI API/ChatGPT",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/www-Ye/ChatDocuFlow",
      "topics": [],
      "size": 23518,
      "default_branch": "main"
    }
  },
  {
    "repo": "MaxineXiong/OpenAI-API-Web-Apps",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "MaxineXiong/OpenAI-API-Web-Apps",
      "stars": 42,
      "language": "Python",
      "description": "This repository hosts a collection of custom web applications powered by OpenAI's GPT models (incl. o1, o3-mini, GPT-4.5, GPT-4o, and GPT-4o mini), Wh",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/MaxineXiong/OpenAI-API-Web-Apps",
      "topics": [
        "ai-agents",
        "ai-project",
        "chat-completion-api",
        "chatbot",
        "chatgpt",
        "code-generation",
        "gpt-4-turbo",
        "gpt-4o",
        "gpt-4o-mini",
        "o1-mini",
        "o1-preview",
        "openai",
        "openai-api",
        "openai-api-chatbot",
        "openai-assistants",
        "openai-assistants-api",
        "openai-whisper",
        "python",
        "streamlit",
        "streamlit-cloud"
      ],
      "size": 105619,
      "default_branch": "master"
    }
  },
  {
    "repo": "volagold/beenote",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".gitattributes",
        ".gitignore",
        "license",
        "readme.md",
        "next.config.js",
        "package-lock.json",
        "package.json",
        "postcss.config.js",
        "screenshot.png"
      ],
      "dirs": [
        ".github",
        "app",
        "public"
      ]
    },
    "search_info": {
      "repo": "volagold/beenote",
      "stars": 40,
      "language": "TypeScript",
      "description": "Full stack AI web application for languge learning built with Next.js and ChatGPT",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/volagold/beenote",
      "topics": [
        "chatgpt",
        "daisyui",
        "gpt-35-turbo",
        "javascript",
        "language-learning",
        "next",
        "nextjs",
        "nextjs-13",
        "notes-app",
        "openai",
        "openai-api",
        "pocketbase",
        "react",
        "tailwindcss",
        "tiptap",
        "typescript",
        "vercel"
      ],
      "size": 5279,
      "default_branch": "master"
    }
  },
  {
    "repo": "youminxue/chatgpt_plus_proxy_website",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "chatgpt_proxy_website.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "youminxue/chatgpt_plus_proxy_website",
      "stars": 39,
      "language": null,
      "description": "Flask\u53cd\u5411\u4ee3\u7406ChatGPT Plus\uff0c\u5b8c\u7f8e\u590d\u523bchat.openai.com/chat",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/youminxue/chatgpt_plus_proxy_website",
      "topics": [],
      "size": 0,
      "default_branch": "main"
    }
  },
  {
    "repo": "Gabeiscool420/SoundSage---LLM-Audio-Processing",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        "code_of_conduct.md",
        "contributing.md",
        "license.md",
        "process_flow.md",
        "readme.md",
        "todo.md",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        ".idea",
        "soundsage-llm integration"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 2,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 10,
      "repo_stars": 39,
      "repo_language": "Python",
      "repo_description": "Open source Python program for automating gain staging. part 1 of a series for automating audio proc",
      "created_at": "2023-06-14T20:22:57Z",
      "updated_at": "2025-06-20T02:28:42Z"
    },
    "search_info": {
      "repo": "Gabeiscool420/SoundSage---LLM-Audio-Processing",
      "stars": 39,
      "language": "Python",
      "description": "Open source Python program for automating gain staging. part 1 of a series for automating audio processing tasks, end goal is to create a full set of ",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/Gabeiscool420/SoundSage---LLM-Audio-Processing",
      "topics": [
        "ai",
        "apple",
        "artificial-intelligence",
        "artificial-intelligence-algorithms",
        "audio",
        "audio-analysis",
        "audio-processing",
        "automation",
        "chatgpt",
        "gain",
        "gain-control",
        "gpt",
        "gpt-3",
        "gpt-4",
        "mac",
        "macos",
        "mixing-audio",
        "music",
        "openai",
        "python"
      ],
      "size": 138580,
      "default_branch": "SoundSage---LLM-Integration"
    }
  },
  {
    "repo": "mitch7w/ai-video-editor",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "mitch7w/ai-video-editor",
      "stars": 39,
      "language": "Python",
      "description": "AI Video Editor: Use an LLM to stitch together multiple videos and do the rough-cut of video editing for you.",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/mitch7w/ai-video-editor",
      "topics": [
        "claude",
        "editor",
        "gpt",
        "llm",
        "sonnet",
        "video"
      ],
      "size": 23,
      "default_branch": "main"
    }
  },
  {
    "repo": "weanalyze/workcell",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "readme_zh-hans.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "docs",
        "examples",
        "workcell"
      ]
    },
    "search_info": {
      "repo": "weanalyze/workcell",
      "stars": 39,
      "language": "Python",
      "description": "\u26a1 Instantly turn your python function into web app.",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/weanalyze/workcell",
      "topics": [
        "chatgpt-plugins",
        "data-driven",
        "data-science",
        "fastapi",
        "gpt-4",
        "gui",
        "langchain",
        "low-code",
        "openai",
        "python",
        "serverless",
        "streamlit-alternative"
      ],
      "size": 1716,
      "default_branch": "main"
    }
  },
  {
    "repo": "LLMine/llmine_core",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        ".sample.env",
        "dockerfile",
        "dockerfile.db",
        "license",
        "readme.md",
        "docker-compose.yml",
        "docker-entrypoint-celery.sh",
        "docker-entrypoint-gunicorn.sh",
        "dump.rdb"
      ],
      "dirs": [
        "api",
        "assets",
        "base",
        "core",
        "datasources",
        "llmine_core",
        "openai_app",
        "templates",
        "ui"
      ]
    },
    "stats": {
      "total_issues_checked": 10,
      "llm_related_issues": 8,
      "llm_percentage": 80.0,
      "issues_with_labels": 2,
      "label_percentage": 20.0,
      "avg_labels_per_issue": 0.2,
      "total_repo_labels": 9,
      "repo_stars": 37,
      "repo_language": "Python",
      "repo_description": "Your Platform for Text Mining through Configurable LLM Chains. Ideal for Developers and Semi-Technic",
      "created_at": "2023-08-19T20:54:01Z",
      "updated_at": "2025-06-11T10:20:10Z"
    },
    "search_info": {
      "repo": "LLMine/llmine_core",
      "stars": 37,
      "language": "Python",
      "description": "Your Platform for Text Mining through Configurable LLM Chains. Ideal for Developers and Semi-Technical Users",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/LLMine/llmine_core",
      "topics": [
        "ai",
        "data-mining",
        "django",
        "hacktoberfest",
        "llm",
        "llms",
        "openai",
        "text-mining"
      ],
      "size": 2927,
      "default_branch": "main"
    }
  },
  {
    "repo": "moj-analytical-services/airflow-pdf2embeddings",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 5,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".envrc",
        ".gitignore",
        "license",
        "manifest.in",
        "makefile",
        "readme.md",
        "requirements.txt",
        "setup.py",
        "test_environment.py"
      ],
      "dirs": [
        ".github",
        "config",
        "data",
        "models",
        "pdf2embeddings",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "moj-analytical-services/airflow-pdf2embeddings",
      "stars": 35,
      "language": "Python",
      "description": "NLP tool for scraping text from a corpus of PDF files, embedding the sentences in the text and finding semantically similar sentences to a given searc",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/moj-analytical-services/airflow-pdf2embeddings",
      "topics": [],
      "size": 284,
      "default_branch": "master"
    }
  },
  {
    "repo": "AlexisTM/gpt3-discord-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "AlexisTM/gpt3-discord-bot",
      "stars": 35,
      "language": "Python",
      "description": "This a very basic discord bot linking to GPT3 (openai and AI21). By defaults it is Kirby, but can be any real or virtual bot (just need more or less t",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/AlexisTM/gpt3-discord-bot",
      "topics": [
        "ai21",
        "bot",
        "discord",
        "discord-bot",
        "gpt3",
        "kirby",
        "openai",
        "python"
      ],
      "size": 128,
      "default_branch": "main"
    }
  },
  {
    "repo": "di37/coding-assistant-codellama-streamlit",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "modelfile",
        "readme.md",
        "app.py",
        "requirements.txt"
      ],
      "dirs": [
        "custom_logger",
        "models",
        "screenshots",
        "utils"
      ]
    },
    "search_info": {
      "repo": "di37/coding-assistant-codellama-streamlit",
      "stars": 35,
      "language": "Python",
      "description": "This project demonstrates how to utilize Codellama, a local open-source Large Language Model (LLM), and customize its behavior according to your speci",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/di37/coding-assistant-codellama-streamlit",
      "topics": [
        "assistant",
        "coding",
        "generative-ai",
        "langchain",
        "natural-language-processing",
        "nlp",
        "ollama",
        "python",
        "streamlit"
      ],
      "size": 436,
      "default_branch": "main"
    }
  },
  {
    "repo": "whr000001/DELL",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md"
      ],
      "dirs": [
        "data",
        "ensemble",
        "expert",
        "networks",
        "proxy"
      ]
    },
    "search_info": {
      "repo": "whr000001/DELL",
      "stars": 35,
      "language": "Python",
      "description": "This is code for DELL: Generating Reactions and Explanations for LLM-Based Misinformation Detection",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/whr000001/DELL",
      "topics": [],
      "size": 2425,
      "default_branch": "main"
    }
  },
  {
    "repo": "babdulhakim2/financial-analysis-with-llm",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "babdulhakim2/financial-analysis-with-llm",
      "stars": 34,
      "language": "Python",
      "description": "The application uses a combination of natural language processing (NLP), and financial analysis techniques to extract, process, and analyze data from ",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/babdulhakim2/financial-analysis-with-llm",
      "topics": [],
      "size": 21,
      "default_branch": "main"
    }
  },
  {
    "repo": "zavocc/JakeyBot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "zavocc/JakeyBot",
      "stars": 34,
      "language": "Python",
      "description": "AI-powered multi-model Discord bot to try with Gemini 2.5 Pro and other models from OpenRouter, Anthropic Claude 4 Sonnet, Deepseek R1 and O4, Mistral",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/zavocc/JakeyBot",
      "topics": [
        "anthropic",
        "anthropic-claude",
        "azure-openai",
        "discord",
        "discord-bot",
        "gemini-api",
        "google-gemini",
        "google-generative-ai",
        "mistral",
        "mistralai",
        "openai",
        "openai-api",
        "openrouter"
      ],
      "size": 1275,
      "default_branch": "master"
    }
  },
  {
    "repo": "humanloop/coworker",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "humanloop/coworker",
      "stars": 34,
      "language": "Python",
      "description": "AI Coworker that lives in slack",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/humanloop/coworker",
      "topics": [
        "bot",
        "bot-framework",
        "chatbot",
        "gpt-4",
        "openai",
        "slack"
      ],
      "size": 1433,
      "default_branch": "main"
    }
  },
  {
    "repo": "discus0434/coding-assistant-webui",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".python-version",
        "license.txt",
        "makefile",
        "readme.md",
        "main.py",
        "pyproject.toml",
        "requirements-dev.lock",
        "requirements.lock"
      ],
      "dirs": [
        "assets",
        "src"
      ]
    },
    "search_info": {
      "repo": "discus0434/coding-assistant-webui",
      "stars": 34,
      "language": "Python",
      "description": "A simple coding assistant app powered by Microsoft guidance, OpenAI LLMs, and Gradio.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/discus0434/coding-assistant-webui",
      "topics": [
        "gpt-4",
        "webui"
      ],
      "size": 2874,
      "default_branch": "master"
    }
  },
  {
    "repo": "assafelovic/gpt3-api",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "assafelovic/gpt3-api",
      "stars": 34,
      "language": "Python",
      "description": "A basic Flask API interface for OpenAI GPT3",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/assafelovic/gpt3-api",
      "topics": [],
      "size": 18,
      "default_branch": "master"
    }
  },
  {
    "repo": "shamspias/google-reviews-chatbot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "shamspias/google-reviews-chatbot",
      "stars": 34,
      "language": "Python",
      "description": "The Google Reviews Chatbot fetches reviews via the Google My Business API, analyzes sentiments using GPT-3, and generates tailored responses. Deployed",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/shamspias/google-reviews-chatbot",
      "topics": [
        "ai",
        "artificial-intelligence",
        "automation",
        "celery",
        "chatbot",
        "flask",
        "google",
        "google-my-business",
        "google-reviews",
        "google-reviews-api",
        "gpt3",
        "gpt4",
        "natural-language-processing",
        "nlp",
        "nlp-machine-learning",
        "python",
        "python3",
        "task-scheduler"
      ],
      "size": 13,
      "default_branch": "main"
    }
  },
  {
    "repo": "The-Swarm-Corporation/Multi-Agent-RAG-Template",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "main.py",
        "pinecone_swarm.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "docs",
        "multi_agent_rag"
      ]
    },
    "search_info": {
      "repo": "The-Swarm-Corporation/Multi-Agent-RAG-Template",
      "stars": 34,
      "language": "Python",
      "description": "This template demonstrates how to create a collaborative team of AI agents that work together to process, analyze, and generate insights from document",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/The-Swarm-Corporation/Multi-Agent-RAG-Template",
      "topics": [
        "agents",
        "ai",
        "anthropic",
        "autogen",
        "chromadb",
        "crewai",
        "discord",
        "gpt-5",
        "gpt35",
        "gpt4",
        "langchain",
        "multi-agent",
        "openai",
        "pinecone",
        "rag",
        "swarms",
        "weaviate"
      ],
      "size": 52,
      "default_branch": "main"
    }
  },
  {
    "repo": "manishpatel005/tinysearch",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "documents_list",
        "generate_embeddings.py",
        "gui_v4.py",
        "query_and_relevance",
        "quest_label",
        "second_model.h5",
        "train.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "manishpatel005/tinysearch",
      "stars": 33,
      "language": "Python",
      "description": "Semantic Search Engine using BERT embeddings",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/manishpatel005/tinysearch",
      "topics": [],
      "size": 6830,
      "default_branch": "master"
    }
  },
  {
    "repo": "sneezeparty/soupy",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env",
        "changelog.md",
        "readme.md",
        "soupy-gradio-allgpu.py",
        "soupy-gradio-noblip.py",
        "soupy_characters.txt",
        "soupy_imagesearch.py",
        "soupy_interject.py",
        "soupy_remastered.py",
        "soupy_search.py"
      ],
      "dirs": [
        "old"
      ]
    },
    "search_info": {
      "repo": "sneezeparty/soupy",
      "stars": 33,
      "language": "Python",
      "description": "Soupy is a Discord bot that uses Flux, and LM Studio.  It chats and functions as an image generator for your users, and has other fun features.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/sneezeparty/soupy",
      "topics": [
        "bot",
        "chatbot",
        "chatgpt-api",
        "discord",
        "discord-bot",
        "flux",
        "llama",
        "lm-studio",
        "openai",
        "openai-api",
        "python",
        "simple",
        "text-to-image"
      ],
      "size": 578,
      "default_branch": "master"
    }
  },
  {
    "repo": "marknagelberg/llm_repo_assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env-template",
        ".flake8",
        ".gitignore",
        ".llmignore",
        "contributing.md",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "command_config.yml"
      ],
      "dirs": [
        "prompts",
        "scripts",
        "src"
      ]
    },
    "search_info": {
      "repo": "marknagelberg/llm_repo_assistant",
      "stars": 33,
      "language": "Python",
      "description": "API for an LLM to use to work with a code repo. Can be used as a ChatGPT Plugin.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/marknagelberg/llm_repo_assistant",
      "topics": [
        "chatgpt",
        "developer-tools",
        "llm"
      ],
      "size": 134,
      "default_branch": "main"
    }
  },
  {
    "repo": "jsonsmth/GPT-chatwithpdf",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "jsonsmth/GPT-chatwithpdf",
      "stars": 33,
      "language": "Python",
      "description": "Load a PDF file from a remote URL and use the OpenAI API to chat with it",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/jsonsmth/GPT-chatwithpdf",
      "topics": [],
      "size": 16,
      "default_branch": "main"
    }
  },
  {
    "repo": "luckylykkk/LocalAItable",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "luckylykkk/LocalAItable",
      "stars": 33,
      "language": "Python",
      "description": "By invoking local large language models, this tool processes spreadsheets similar to multi-dimensional tables. It can batch-generate content for Excel",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/luckylykkk/LocalAItable",
      "topics": [],
      "size": 432,
      "default_branch": "main"
    }
  },
  {
    "repo": "rikvermeulen/co-op-gitlab",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".eslintrc.cjs",
        ".gitignore",
        ".prettierignore",
        ".prettierrc.cjs",
        "dockerfile",
        "license",
        "readme.md",
        "commitlint.config.cjs",
        "lint-staged.config.cjs"
      ],
      "dirs": [
        ".github",
        ".husky",
        "server",
        "src"
      ]
    },
    "search_info": {
      "repo": "rikvermeulen/co-op-gitlab",
      "stars": 33,
      "language": "TypeScript",
      "description": "Automate code reviews and feedback for GitLab Merge Requests using OpenAI GPT-3/4",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/rikvermeulen/co-op-gitlab",
      "topics": [
        "eslint",
        "express",
        "gpt-3",
        "gpt-4",
        "nodejs",
        "openai",
        "turborepo",
        "typescript"
      ],
      "size": 1311,
      "default_branch": "main"
    }
  },
  {
    "repo": "smaranjitghose/AIAudioTranscriber",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "smaranjitghose/AIAudioTranscriber",
      "stars": 33,
      "language": "Python",
      "description": "A minimalistic web app to generate transciption for audio built using Python",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/smaranjitghose/AIAudioTranscriber",
      "topics": [
        "docker",
        "open-source",
        "openai",
        "python",
        "python3",
        "speech-recognition",
        "speech-to-text",
        "streamlit",
        "streamlit-lottie",
        "streamlit-webapp",
        "whisper"
      ],
      "size": 8830,
      "default_branch": "master"
    }
  },
  {
    "repo": "badrex/emojeez",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "languages",
        "license",
        "readme.md",
        "embed_emojis.py",
        "generate_hf_dataset.py",
        "header_img.png",
        "requirements.txt",
        "run_llm.py",
        "search_emojis_app.py",
        "search_emojis_cli.py"
      ],
      "dirs": [
        ".devcontainer",
        "data",
        "notebooks"
      ]
    },
    "search_info": {
      "repo": "badrex/emojeez",
      "stars": 32,
      "language": "Python",
      "description": "AI-powered semantic search engine for emojis in 50+ languages, developed in Python",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/badrex/emojeez",
      "topics": [
        "embeddings",
        "emojis",
        "huggingface",
        "large-language-models",
        "llms",
        "multilingual",
        "qdrant",
        "semantic-search",
        "streamlit",
        "transformers"
      ],
      "size": 27958,
      "default_branch": "main"
    }
  },
  {
    "repo": "dhanushreddy291/docstring-generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "test1.py",
        "test2.py"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        "subfolder"
      ]
    },
    "search_info": {
      "repo": "dhanushreddy291/docstring-generator",
      "stars": 32,
      "language": "Python",
      "description": "A Simple Github Action that adds docstrings to Python functions by analysing code using OpenAI's GPT3 API",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/dhanushreddy291/docstring-generator",
      "topics": [
        "automation",
        "documentation",
        "github-actions",
        "gpt3",
        "python"
      ],
      "size": 75,
      "default_branch": "main"
    }
  },
  {
    "repo": "radoshi/llm-code",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "changelog.md",
        "license",
        "makefile",
        "readme.md",
        "justfile",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "llm_code",
        "prompts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "radoshi/llm-code",
      "stars": 31,
      "language": "Python",
      "description": "An OpenAI LLM based CLI coding assistant.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/radoshi/llm-code",
      "topics": [],
      "size": 393,
      "default_branch": "main"
    }
  },
  {
    "repo": "theseekerofficial/Echo",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "bot.py",
        "index.html",
        "moreinfo_handler.py",
        "reminders_manager.py",
        "rename_me_as_config.env",
        "render.yaml"
      ],
      "dirs": [
        "assets",
        "modules",
        "plugins",
        "ringtones",
        "super_plugins"
      ]
    },
    "search_info": {
      "repo": "theseekerofficial/Echo",
      "stars": 31,
      "language": "Python",
      "description": "Echo is your personal AI assistant on Telegram, designed to enhance your productivity by providing a seamless needs. With MongoDB integration, your re",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/theseekerofficial/Echo",
      "topics": [
        "ai-assistant",
        "aio",
        "auto-filter-bot",
        "broadcast",
        "chatbot",
        "config-manager",
        "doc-spotter",
        "echo",
        "file-converter-bot",
        "gemini",
        "guardian",
        "image-uploader",
        "info",
        "logo-generator",
        "multifunctional-bot",
        "multifuntional",
        "python",
        "reminder-bot",
        "ringtone-bot",
        "scheducast"
      ],
      "size": 28689,
      "default_branch": "main"
    }
  },
  {
    "repo": "francislabountyjr/ChatGPT-Desktop",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "__init__.py",
        "config.json",
        "initiate_bot.py",
        "language_module.py",
        "logo.png",
        "prompt_manager.py",
        "prompts.db",
        "tools_module.py"
      ],
      "dirs": [
        "docs"
      ]
    },
    "search_info": {
      "repo": "francislabountyjr/ChatGPT-Desktop",
      "stars": 31,
      "language": "Python",
      "description": "ChatGPT desktop app made with PyQT5. Features include web search, prompt manager, wolfram alpha integration, pdf summarization and more!",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/francislabountyjr/ChatGPT-Desktop",
      "topics": [],
      "size": 7512,
      "default_branch": "main"
    }
  },
  {
    "repo": "amitgupta4407/All_About_PDF",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "amitgupta4407/All_About_PDF",
      "stars": 31,
      "language": "Python",
      "description": "This is a complete website in which you can chat with pdf, extract meta data, text, links, image, and lot more . Check my blog for more details: https",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/amitgupta4407/All_About_PDF",
      "topics": [
        "chatpdf",
        "gpt",
        "langchain",
        "pypdf2",
        "python",
        "streamlit"
      ],
      "size": 48,
      "default_branch": "main"
    }
  },
  {
    "repo": "mak448a/AI-Drawing-Chatbot",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "example.env",
        "example_config.json",
        "main.py",
        "requirements.txt",
        "run.bat"
      ],
      "dirs": [
        ".github",
        "assets",
        "cogs",
        "gpt_utils",
        "helper_utils"
      ]
    },
    "stats": {
      "total_issues_checked": 15,
      "llm_related_issues": 7,
      "llm_percentage": 46.7,
      "issues_with_labels": 12,
      "label_percentage": 80.0,
      "avg_labels_per_issue": 1.07,
      "total_repo_labels": 13,
      "repo_stars": 30,
      "repo_language": "Python",
      "repo_description": "An image generator Discord bot written in Python with no GPU requirement! It can be easily deployed ",
      "created_at": "2023-03-24T18:53:14Z",
      "updated_at": "2025-05-07T09:29:14Z"
    },
    "search_info": {
      "repo": "mak448a/AI-Drawing-Chatbot",
      "stars": 30,
      "language": "Python",
      "description": "An image generator Discord bot written in Python with no GPU requirement! It can be easily deployed to your favorite VPS for hosting.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/mak448a/AI-Drawing-Chatbot",
      "topics": [
        "ai",
        "anything-v3",
        "anythingv3",
        "bot",
        "chatgpt",
        "discord",
        "discord-bot",
        "discord-py",
        "image-generation",
        "imaginepy",
        "llm",
        "openai",
        "pollinations",
        "python",
        "replit",
        "stable-diffusion",
        "stable-diffusion-xl",
        "stable-horde"
      ],
      "size": 1427,
      "default_branch": "main"
    }
  },
  {
    "repo": "EnArvy/Discord-Gemini-Chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.development",
        ".gitignore",
        "license",
        "readme.md",
        "bot.py",
        "config.py",
        "requirements.txt"
      ],
      "dirs": [
        ".vscode"
      ]
    },
    "search_info": {
      "repo": "EnArvy/Discord-Gemini-Chatbot",
      "stars": 30,
      "language": "Python",
      "description": "A completely free python discord chat bot which uses Google's Gemini API.",
      "search_query": "gemini chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Gemini",
      "url": "https://github.com/EnArvy/Discord-Gemini-Chatbot",
      "topics": [
        "ai",
        "chatbot",
        "discord",
        "discord-bot",
        "discord-py",
        "free",
        "gemini",
        "gemini-ai",
        "gemini-api",
        "gemini-pro",
        "gemini-pro-vision"
      ],
      "size": 26,
      "default_branch": "main"
    }
  },
  {
    "repo": "hyili/ChatGPTAssistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "hyili/ChatGPTAssistant",
      "stars": 30,
      "language": "Python",
      "description": "Voice2voice ChatGPT Assistant built through OpenAI Whisper (speech2text) + OpenAI ChatGPT API + Google Text2Speech Service (text2speech)",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/hyili/ChatGPTAssistant",
      "topics": [
        "assistant",
        "chat",
        "chatgpt",
        "chatgpt-api",
        "google",
        "openai",
        "python",
        "speech2text",
        "text2speech",
        "voice",
        "voice-assistant",
        "whisper"
      ],
      "size": 39,
      "default_branch": "main"
    }
  },
  {
    "repo": "teleprint-me/py.gpt.prompt",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.js",
        ".flake8",
        ".gitignore",
        ".gitmodules",
        ".prettierignore",
        ".prettierrc",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "llama_license"
      ],
      "dirs": [
        ".vscode",
        "docs",
        "pygptprompt",
        "scripts",
        "submodules",
        "tests"
      ]
    },
    "search_info": {
      "repo": "teleprint-me/py.gpt.prompt",
      "stars": 29,
      "language": "Python",
      "description": "PyGPTPrompt: A CLI tool that manages context windows for AI models, facilitating user interaction and data ingestion for optimized long-term memory an",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/teleprint-me/py.gpt.prompt",
      "topics": [
        "chatgpt",
        "chromadb",
        "cli-app",
        "developer-tools",
        "ggml",
        "gguf",
        "huggingface",
        "llamacpp",
        "openai",
        "prompt-toolkit",
        "python"
      ],
      "size": 49678,
      "default_branch": "main"
    }
  },
  {
    "repo": "hadi-16/nextjs-chat-openai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".eslintrc.json",
        ".gitignore",
        "readme.md",
        "next.config.js",
        "package-lock.json",
        "package.json",
        "postcss.config.js",
        "tailwind.config.js"
      ],
      "dirs": [
        "components",
        "pages",
        "public",
        "store",
        "styles"
      ]
    },
    "search_info": {
      "repo": "hadi-16/nextjs-chat-openai",
      "stars": 29,
      "language": "JavaScript",
      "description": "Next JS Chat OpenAI Built with Next JS, OpenAI, Tailwindcss, Zustand and AutoAnimate",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/hadi-16/nextjs-chat-openai",
      "topics": [
        "autoanimate",
        "chatbot",
        "chatgpt",
        "javascript",
        "nextjs",
        "openai",
        "react",
        "reactjs",
        "tailwindcss",
        "zustand"
      ],
      "size": 527,
      "default_branch": "main"
    }
  },
  {
    "repo": "itsmehemant123/gpt2-discord-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "download_model.sh",
        "gpt-chatbot-client.py",
        "gptchatbot.py",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "itsmehemant123/gpt2-discord-bot",
      "stars": 28,
      "language": "Python",
      "description": "discord bot, but its gpt-2",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/itsmehemant123/gpt2-discord-bot",
      "topics": [
        "ai",
        "chatbot",
        "discord",
        "discord-py",
        "gpt-2",
        "openai",
        "tensorflow"
      ],
      "size": 23,
      "default_branch": "master"
    }
  },
  {
    "repo": "hyp3rd/telegram-discord-bridge",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 4,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        ".pre-commit-config.yaml",
        ".pylintrc",
        "codeowners",
        "code_of_conduct.md",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "api",
        "bridge",
        "core",
        "tools"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 2,
      "llm_percentage": 100.0,
      "issues_with_labels": 1,
      "label_percentage": 50.0,
      "avg_labels_per_issue": 0.5,
      "total_repo_labels": 10,
      "repo_stars": 28,
      "repo_language": "Python",
      "repo_description": "A bridge to forward messages from those pesky Telegram channels to a shiny Discord server, because w",
      "created_at": "2023-04-15T15:01:12Z",
      "updated_at": "2025-04-09T03:05:59Z"
    },
    "search_info": {
      "repo": "hyp3rd/telegram-discord-bridge",
      "stars": 28,
      "language": "Python",
      "description": "A bridge to forward messages from those pesky Telegram channels to a shiny Discord server, because why not?",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/hyp3rd/telegram-discord-bridge",
      "topics": [
        "bot",
        "discord",
        "openai",
        "python",
        "telegram",
        "telegram-bot",
        "telegram-to-discord",
        "telegram-to-discord-bot"
      ],
      "size": 416,
      "default_branch": "main"
    }
  },
  {
    "repo": "romilandc/streamlit-ollama-llm",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "llm_app.py",
        "requirements.txt"
      ],
      "dirs": [
        "img"
      ]
    },
    "search_info": {
      "repo": "romilandc/streamlit-ollama-llm",
      "stars": 28,
      "language": "Python",
      "description": "A Streamlit user interface for local LLM implementation on Ollama.  With just three python apps you can have a localized LLM to chat with.  I'm runnin",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/romilandc/streamlit-ollama-llm",
      "topics": [
        "cpu",
        "gpu",
        "llm",
        "llm-inference",
        "llms",
        "ollama",
        "ollama-app",
        "open-source",
        "python",
        "python3",
        "streamlit",
        "streamlit-webapp",
        "webapp",
        "windows"
      ],
      "size": 232,
      "default_branch": "main"
    }
  },
  {
    "repo": "david-strejc/fei",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "david-strejc/fei",
      "stars": 28,
      "language": "Python",
      "description": "A powerful code assistant that combines AI capabilities with advanced code manipulation tools and a distributed memory system named after the Chinese ",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/david-strejc/fei",
      "topics": [],
      "size": 1221,
      "default_branch": "main"
    }
  },
  {
    "repo": "shamspias/whatsapp-voice-gpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "shamspias/whatsapp-voice-gpt",
      "stars": 28,
      "language": "Python",
      "description": "SonicAI is a WhatsApp Chatbot designed to provide users with a convenient and engaging way to interact with an AI assistant. Powered by OpenAI's GPT-3",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/shamspias/whatsapp-voice-gpt",
      "topics": [
        "celery",
        "chatbot",
        "chatgpt-whatsapp-bot",
        "flask",
        "gpt-3",
        "gpt-3-5-turbo",
        "gpt-35-turbo",
        "gpt-4",
        "llm",
        "openai",
        "openai-api",
        "python",
        "python3",
        "task-scheduler",
        "voice-chat",
        "voice-chat-bot",
        "voice-recognition",
        "whatsapp",
        "whatsapp-bot",
        "whatsapp-chat"
      ],
      "size": 53,
      "default_branch": "main"
    }
  },
  {
    "repo": "DjangoEx/django-expert-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "DjangoEx/django-expert-bot",
      "stars": 28,
      "language": "Python",
      "description": "Django expert bot based on OpenAI GPT-3 API",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/DjangoEx/django-expert-bot",
      "topics": [],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "aws-samples/foundational-llm-chat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".npmignore",
        "changelog.md",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "notice",
        "readme.md",
        "cdk.json",
        "jest.config.js"
      ],
      "dirs": [
        "assets",
        "bin",
        "chainlit_image",
        "custom_resources",
        "lib"
      ]
    },
    "search_info": {
      "repo": "aws-samples/foundational-llm-chat",
      "stars": 28,
      "language": "Python",
      "description": "Chainlit application built using AWS CDK, secured with Amazon Cognito, that allows you to interact with Anthropic's Claude language models from Amazon",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/aws-samples/foundational-llm-chat",
      "topics": [
        "amazon",
        "amazon-bedrock",
        "aws",
        "bedrock",
        "cdk",
        "chainlit",
        "chatbot",
        "genai",
        "llm"
      ],
      "size": 17487,
      "default_branch": "main"
    }
  },
  {
    "repo": "ata-turhan/Delta-ChatBot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "license",
        "readme.md",
        "poetry.lock",
        "pyproject.toml",
        "start.bat"
      ],
      "dirs": [
        "delta-chatbot",
        "static"
      ]
    },
    "search_info": {
      "repo": "ata-turhan/Delta-ChatBot",
      "stars": 28,
      "language": "Python",
      "description": "It is a chatbot for answering questions with information in documents.",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/ata-turhan/Delta-ChatBot",
      "topics": [
        "langchain",
        "llm",
        "openai",
        "python",
        "streamlit"
      ],
      "size": 8714,
      "default_branch": "main"
    }
  },
  {
    "repo": "leocus/codeassistant.vim",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md"
      ],
      "dirs": [
        "plugin",
        "python3"
      ]
    },
    "search_info": {
      "repo": "leocus/codeassistant.vim",
      "stars": 27,
      "language": "Python",
      "description": "A Vim plugin for a code assistant with local LLMs",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/leocus/codeassistant.vim",
      "topics": [],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "BudEcosystem/GenZ",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "finetune.py",
        "generate.py",
        "requirements.txt"
      ],
      "dirs": [
        "assets",
        "models",
        "utils"
      ]
    },
    "search_info": {
      "repo": "BudEcosystem/GenZ",
      "stars": 27,
      "language": "Python",
      "description": "Democratizing access to LLMs for the open-source community. Let's advance AI, together.",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/BudEcosystem/GenZ",
      "topics": [],
      "size": 11092,
      "default_branch": "main"
    }
  },
  {
    "repo": "earthonion/ChatGPT-Book-Generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "book_gen.py",
        "bookgen_topdf.py",
        "config.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "earthonion/ChatGPT-Book-Generator",
      "stars": 27,
      "language": "Python",
      "description": "Input any book title and it will generate a full book in PDF format.",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/earthonion/ChatGPT-Book-Generator",
      "topics": [],
      "size": 20,
      "default_branch": "master"
    }
  },
  {
    "repo": "jroakes/SEODP",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license.md",
        "readme.md",
        "cover.png",
        "docker-compose.yml",
        "example_insights.json",
        "poetry.lock",
        "pyproject.toml",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "jroakes/SEODP",
      "stars": 26,
      "language": "Python",
      "description": "The SEO Data Platform automates SEO analysis, aggregating data from Google Analytics 4, Search Console, Page Speed Insights, and rendered content. Pow",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/jroakes/SEODP",
      "topics": [
        "automation",
        "llm",
        "seo"
      ],
      "size": 2990,
      "default_branch": "main"
    }
  },
  {
    "repo": "youssefHosni/Task-Automation-with-Python-ChatGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "chorus.wav",
        "license",
        "readme.md",
        "audio_text.py",
        "automate_email.py",
        "currency_converter.py",
        "requirements.txt",
        "sort_downloads.py",
        "text_audio.py",
        "weather_report.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "youssefHosni/Task-Automation-with-Python-ChatGPT",
      "stars": 26,
      "language": "Python",
      "description": "Automate boring tasks using Python scripts generated using ChatGPT",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/youssefHosni/Task-Automation-with-Python-ChatGPT",
      "topics": [],
      "size": 870,
      "default_branch": "main"
    }
  },
  {
    "repo": "aws-samples/sample-chatbot-for-bedrock-knowledge-base-and-multimodal-llms",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "requirements.txt"
      ],
      "dirs": [
        "app",
        "doc",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "aws-samples/sample-chatbot-for-bedrock-knowledge-base-and-multimodal-llms",
      "stars": 26,
      "language": "Python",
      "description": "Multimodal Chatbot with Amazon Bedrock Knowledge Bases Integration",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/aws-samples/sample-chatbot-for-bedrock-knowledge-base-and-multimodal-llms",
      "topics": [
        "bedrock",
        "claude",
        "claude3",
        "knowledge-base",
        "knowledgebase",
        "llms",
        "multimodal",
        "python",
        "rag",
        "streamlit"
      ],
      "size": 12731,
      "default_branch": "main"
    }
  },
  {
    "repo": "Zhiyuan-R/ChatGPT-Powered-Hierarchical-Comparisons-for-Image-Classification",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "datasets.py",
        "descriptor_strings.py",
        "generate_tree.py",
        "load.py",
        "loading_helpers.py",
        "main.py"
      ],
      "dirs": [
        "descriptions"
      ]
    },
    "search_info": {
      "repo": "Zhiyuan-R/ChatGPT-Powered-Hierarchical-Comparisons-for-Image-Classification",
      "stars": 26,
      "language": "Python",
      "description": "Source Code for Neurips 2023 Publication: <ChatGPT-Powered Hierarchical Comparisons for Image Classification Download PDF>",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/Zhiyuan-R/ChatGPT-Powered-Hierarchical-Comparisons-for-Image-Classification",
      "topics": [],
      "size": 124,
      "default_branch": "main"
    }
  },
  {
    "repo": "vovanphuc/elastic_simCSE",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "index_elastic.py",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        "config",
        "data",
        "images"
      ]
    },
    "search_info": {
      "repo": "vovanphuc/elastic_simCSE",
      "stars": 25,
      "language": "Python",
      "description": "C\u1ea3i thi\u1ec7n Elasticsearch trong b\u00e0i to\u00e1n semantic search s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p Sentence Embeddings",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/vovanphuc/elastic_simCSE",
      "topics": [],
      "size": 3131,
      "default_branch": "master"
    }
  },
  {
    "repo": "codingthefuturewithai/rag-retriever",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "manifest.in",
        "readme.md",
        "adding.md",
        "ai_instruction_strengthening.md",
        "pyproject.toml"
      ],
      "dirs": [
        "docs",
        "rag_retriever",
        "scripts",
        "tests",
        "tools"
      ]
    },
    "search_info": {
      "repo": "codingthefuturewithai/rag-retriever",
      "stars": 25,
      "language": "Python",
      "description": "A Python application that loads and processes both web pages and local documents, indexing their content using embeddings, and enabling semantic searc",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/codingthefuturewithai/rag-retriever",
      "topics": [],
      "size": 47211,
      "default_branch": "main"
    }
  },
  {
    "repo": "nickShengY/My-chatgpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "nickShengY/My-chatgpt",
      "stars": 25,
      "language": "Python",
      "description": "\ud83e\udd16 \ud83e\udd16 GPT-4 Code Interpreter, Financial Assistant and Content Creator Chat Bot (OpenAI or Local-enabled)",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/nickShengY/My-chatgpt",
      "topics": [
        "code-interpreter",
        "financial-analysis",
        "gpt4all",
        "langchain",
        "llm",
        "mpt",
        "openai-api",
        "openai-chatgpt",
        "webapp"
      ],
      "size": 12387,
      "default_branch": "main"
    }
  },
  {
    "repo": "DeutscheKI/llm-performance-tests",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "qwq-32b-awq 1x h100 80gb hbm3 rr0_1.json",
        "qwq-32b-awq 1x rtx 3090 ti rr0_1.json",
        "qwq-32b-awq 1x rtx 4090 rr0_1.json",
        "qwq-32b-awq 1x rtx 5090 rr0_1.json",
        "qwq-32b-awq 1x rtx 6000 ada rr0_1.json",
        "qwq-32b-awq 2x rtx 4070 ti super rr0_1.json",
        "qwq-32b-awq 2x rtx 4080 rr0_1.json",
        "qwq-32b-awq 2x rtx 5070 ti rr0_1.json",
        "qwq-32b-awq 2x rtx 5080 rr0_1.json",
        "qwq-32b-awq 2x rtx 5090 rr0_1.json"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "DeutscheKI/llm-performance-tests",
      "stars": 25,
      "language": "Python",
      "description": "These are performance benchmarks we did to prepare for our own privacy-preserving and NDA-compliant in-house AI coding assistant. If by any chance, yo",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/DeutscheKI/llm-performance-tests",
      "topics": [],
      "size": 16905,
      "default_branch": "public"
    }
  },
  {
    "repo": "mickymultani/Streaming-LLM-Chat",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "mickymultani/Streaming-LLM-Chat",
      "stars": 25,
      "language": "Python",
      "description": "Interactive chat application leveraging OpenAI's GPT-4 for real-time conversation simulations. Built with Flask, this project showcases streaming LLM ",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/mickymultani/Streaming-LLM-Chat",
      "topics": [
        "ai",
        "chatbot",
        "context-aware",
        "embedding-vectors",
        "flask-application",
        "flask-server",
        "flask-sqlalchemy",
        "flask-web",
        "gpt4-api",
        "large-language-models",
        "llama-index",
        "llms",
        "openai",
        "openai-api",
        "rag",
        "streaming-text",
        "vectorization"
      ],
      "size": 2336,
      "default_branch": "main"
    }
  },
  {
    "repo": "kyopark2014/llm-multimodal-and-rag",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "cache.md",
        "deployment.md",
        "ensemble-retriever.md"
      ],
      "dirs": [
        "cdk-multimodal-and-rag",
        "contents",
        "html",
        "images",
        "lambda-chat-ws",
        "lambda-delete-items",
        "lambda-document-manager",
        "lambda-gethistory",
        "lambda-provisioning",
        "lambda-query"
      ]
    },
    "search_info": {
      "repo": "kyopark2014/llm-multimodal-and-rag",
      "stars": 25,
      "language": "Python",
      "description": "It shows how to use mutimodal and RAG based on multi-region LLM.",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/kyopark2014/llm-multimodal-and-rag",
      "topics": [
        "bedrock",
        "chatbot",
        "claude",
        "multimodal",
        "rag"
      ],
      "size": 3066,
      "default_branch": "main"
    }
  },
  {
    "repo": "alaminjava/Summarize-a-PDF-using-chat-gpt-and-python",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "example_short.pdf",
        "ncode.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "alaminjava/Summarize-a-PDF-using-chat-gpt-and-python",
      "stars": 25,
      "language": "Python",
      "description": "Using Python and Chat GPT-3, convert a PDF to text, slice and summarize it, create a new summary and key notes, and a step-by-step guide. Summarize th",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/alaminjava/Summarize-a-PDF-using-chat-gpt-and-python",
      "topics": [],
      "size": 55,
      "default_branch": "main"
    }
  },
  {
    "repo": "Paillat-dev/Botator",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Paillat-dev/Botator",
      "stars": 24,
      "language": "Python",
      "description": " A nice discord AI chatbot that can doo various stuff.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/Paillat-dev/Botator",
      "topics": [
        "bot",
        "discord-bot",
        "gpt-3",
        "gpt3",
        "openai",
        "pycord"
      ],
      "size": 458,
      "default_branch": "main"
    }
  },
  {
    "repo": "evmckinney9/maury-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "license.md",
        "makefile",
        "makefile.save",
        "readme.md",
        "git-conventional-commits.yaml",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        "maury_bot"
      ]
    },
    "search_info": {
      "repo": "evmckinney9/maury-bot",
      "stars": 24,
      "language": "Python",
      "description": "Python Discord Bot, uses openai's gpt-3 for fun personalized responses and elevenlabs for voice synthesis",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/evmckinney9/maury-bot",
      "topics": [
        "discord",
        "discord-bot",
        "discordpy",
        "elevenlabs",
        "gpt-3",
        "python"
      ],
      "size": 9104,
      "default_branch": "main"
    }
  },
  {
    "repo": "GPT-Laboratory/RAG-LLM-Development-Guidebook-from-PDFs",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md"
      ],
      "dirs": [
        "ragusingllama3.1",
        "ragusingopenaigpt4.0"
      ]
    },
    "search_info": {
      "repo": "GPT-Laboratory/RAG-LLM-Development-Guidebook-from-PDFs",
      "stars": 24,
      "language": "Python",
      "description": "Code for building specialized RAG systems using PDF documents with OpenAI Assistant API for GPT and LLaMA models, covering the full pipeline from data",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/GPT-Laboratory/RAG-LLM-Development-Guidebook-from-PDFs",
      "topics": [],
      "size": 858,
      "default_branch": "main"
    }
  },
  {
    "repo": "nicekate/Together-Flux-Studio",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "nicekate/Together-Flux-Studio",
      "stars": 24,
      "language": "Python",
      "description": "\u4e00\u4e2a\u57fa\u4e8eTogether AI\u7684\u5f3a\u5927\u56fe\u50cf\u751f\u6210\u5de5\u5177\uff0c\u652f\u6301\u6587\u751f\u56fe\u3001\u56fe\u751f\u56fe\u548c\u63d0\u793a\u8bcd\u5206\u6790\u529f\u80fd\u3002",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/nicekate/Together-Flux-Studio",
      "topics": [],
      "size": 25,
      "default_branch": "main"
    }
  },
  {
    "repo": "ottobjorkland/SmartVoiceAssistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "customsettings.py",
        "readme.md",
        "speakerimage.jpg",
        "voiceassistant_5.1.py",
        "voiceassistant_5.2.py",
        "voiceassistant_5.3.py",
        "apikeys.py",
        "images.py",
        "longtermmemory.json"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "ottobjorkland/SmartVoiceAssistant",
      "stars": 24,
      "language": "Python",
      "description": "A smart AI voice assistant with multi-language support and long-term memory. Currently best for Swedish and English. Compatible with Windows and Raspb",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/ottobjorkland/SmartVoiceAssistant",
      "topics": [
        "ai",
        "artificial-intelligence",
        "elevenlabs-api",
        "english",
        "function-calling",
        "google-api",
        "gpt",
        "gpt-3",
        "gpt-4",
        "long-term-memory",
        "openai-api",
        "raspberry-pi",
        "svenska",
        "swedish",
        "voice-assistant",
        "windows",
        "wolfram-alpha-api"
      ],
      "size": 3076,
      "default_branch": "main"
    }
  },
  {
    "repo": "chris-cozy/PersonaTalk",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 5,
        "app_dirs": 6,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "app.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "config",
        "controllers",
        "middleware",
        "models",
        "routes",
        "services",
        "spec"
      ]
    },
    "search_info": {
      "repo": "chris-cozy/PersonaTalk",
      "stars": 24,
      "language": "JavaScript",
      "description": "PersonaTalk is a Node.js and Express.js-based API that enables users to interact with various digital personas using OpenAI's GPT model. It offers end",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/chris-cozy/PersonaTalk",
      "topics": [
        "expressjs",
        "gpt-3",
        "nodejs",
        "openai-api",
        "rest-api"
      ],
      "size": 153,
      "default_branch": "main"
    }
  },
  {
    "repo": "lesteroliver911/openai-rfp-response-analyzer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "lesteroliver911/openai-rfp-response-analyzer",
      "stars": 23,
      "language": "Python",
      "description": "RFP-Response Analyzer is a Flask web app that uses AI to analyze and compare RFP documents with their responses, providing insights, gap analysis, and",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/lesteroliver911/openai-rfp-response-analyzer",
      "topics": [],
      "size": 10031,
      "default_branch": "main"
    }
  },
  {
    "repo": "rajkishorbgp/JARVIS-AI-Assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "rajkishorbgp/JARVIS-AI-Assistant",
      "stars": 23,
      "language": "Python",
      "description": "JARVIS AI Assistant \ud83e\udd16  A virtual assistant project inspired by Tony Stark's JARVIS, powered by speech recognition, AI chat, web browsing, and more.  F",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/rajkishorbgp/JARVIS-AI-Assistant",
      "topics": [
        "ai",
        "jarvis",
        "jarvis-ai",
        "openai",
        "python",
        "speech-recognition",
        "virtual-assistant"
      ],
      "size": 232707,
      "default_branch": "main"
    }
  },
  {
    "repo": "kinosal/summarizer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "kinosal/summarizer",
      "stars": 23,
      "language": "Python",
      "description": "Summarize text content into a Tweet-sized statement using OpenAI's GPT-3 based Davinci model",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/kinosal/summarizer",
      "topics": [
        "gpt",
        "openai",
        "streamlit"
      ],
      "size": 70,
      "default_branch": "main"
    }
  },
  {
    "repo": "JakeFurtaw/Chat-RAG",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "app.py",
        "chat_utils.py",
        "chatrag.py",
        "config.py",
        "gradio_utils.py",
        "model_utils.py"
      ],
      "dirs": [
        "pics"
      ]
    },
    "stats": {
      "total_issues_checked": 9,
      "llm_related_issues": 9,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 22,
      "repo_language": "Python",
      "repo_description": "Advanced Coding AI Assistant that uses a Gradio interface to stream coding related responses. ChatRA",
      "created_at": "2024-08-06T17:56:30Z",
      "updated_at": "2025-05-20T12:43:30Z"
    },
    "search_info": {
      "repo": "JakeFurtaw/Chat-RAG",
      "stars": 22,
      "language": "Python",
      "description": "Advanced Coding AI Assistant that uses a Gradio interface to stream coding related responses. ChatRAG supports local and API inference and pulls conte",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/JakeFurtaw/Chat-RAG",
      "topics": [
        "gradio",
        "huggingface",
        "llamaindex",
        "llm",
        "nlp",
        "nvidia-nim",
        "ollama",
        "rag"
      ],
      "size": 3854,
      "default_branch": "main"
    }
  },
  {
    "repo": "Drunkweng/OnDemand-API-Proxy",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "2api.py",
        "dockerfile",
        "license",
        "readme.md",
        "requirements.txt"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Drunkweng/OnDemand-API-Proxy",
      "stars": 22,
      "language": "Python",
      "description": "\u4f7f\u7528 Flask \u5f00\u53d1\u7684 OpenAI/OpenChat \u517c\u5bb9\u4ee3\u7406\uff0c\u652f\u6301 HuggingFace Space \u4e0a\u90e8\u7f72\u3002\u5185\u7f6e KEY \u6c60\uff0c\u652f\u6301\u81ea\u52a8\u5931\u6548\u5207\u6362.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Drunkweng/OnDemand-API-Proxy",
      "topics": [],
      "size": 64,
      "default_branch": "main"
    }
  },
  {
    "repo": "RobertoCorti/gptravel",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        ".pylintrc",
        "home.py",
        "license",
        "readme.md",
        "bandit.yaml",
        "mypy.ini",
        "poetry.lock",
        "prototype.py"
      ],
      "dirs": [
        ".github",
        "pages",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "RobertoCorti/gptravel",
      "stars": 22,
      "language": "Python",
      "description": "Travel planning Streamlit web-app based on OpenAI API",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/RobertoCorti/gptravel",
      "topics": [
        "gpt",
        "llm",
        "python",
        "streamlit"
      ],
      "size": 906,
      "default_branch": "main"
    }
  },
  {
    "repo": "Paillat-dev/presentator",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Paillat-dev/presentator",
      "stars": 21,
      "language": "Python",
      "description": "A Discord bot that generates FULL powerpoints about a given subject thanks to openai's gpt3",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/Paillat-dev/presentator",
      "topics": [
        "bot",
        "chat-gpt",
        "chatgpt",
        "discord",
        "discord-bot",
        "gpt-3",
        "gpt3",
        "marp",
        "marpit",
        "marpit-markdown",
        "presentation",
        "py-cord",
        "pycord"
      ],
      "size": 12843,
      "default_branch": "main"
    }
  },
  {
    "repo": "gabrielkoo/chatgpt-faq-slack-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "deploy.sh",
        "template.yml"
      ],
      "dirs": [
        ".github",
        "docs",
        "function",
        "layer",
        "sample_data"
      ]
    },
    "search_info": {
      "repo": "gabrielkoo/chatgpt-faq-slack-bot",
      "stars": 21,
      "language": "Python",
      "description": "A user-trainable Knowledge Base / FAQ Slack Bot on AWS SAM based on ChatGPT and Embeddings.",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/gabrielkoo/chatgpt-faq-slack-bot",
      "topics": [
        "aws",
        "aws-lambda",
        "chatbot",
        "chatgpt",
        "embedding",
        "faq",
        "kbqa",
        "knowledge-base",
        "openai",
        "qna",
        "question-answering",
        "retrieval-augmented-generation",
        "sam",
        "serverless",
        "slack",
        "slack-bot",
        "slackbot"
      ],
      "size": 1040,
      "default_branch": "main"
    }
  },
  {
    "repo": "FlynnOwen/GPT-3-App",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "license",
        "procfile",
        "readme.md",
        "app.py",
        "requirements.txt"
      ],
      "dirs": [
        "database",
        "img",
        "prompt",
        "tests"
      ]
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 1,
      "llm_percentage": 33.3,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 21,
      "repo_language": "Python",
      "repo_description": "A connector between OpenAI's GPT-3 and Facebook Messenger.",
      "created_at": "2021-05-21T11:57:58Z",
      "updated_at": "2024-03-20T20:44:44Z"
    },
    "search_info": {
      "repo": "FlynnOwen/GPT-3-App",
      "stars": 21,
      "language": "Python",
      "description": "A connector between OpenAI's GPT-3 and Facebook Messenger.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/FlynnOwen/GPT-3-App",
      "topics": [
        "facebook",
        "flask",
        "gpt-3",
        "open-ai",
        "openai"
      ],
      "size": 8712,
      "default_branch": "main"
    }
  },
  {
    "repo": "olahsymbo/interview-ai-gpt3",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "olahsymbo/interview-ai-gpt3",
      "stars": 21,
      "language": "Python",
      "description": "An interview digital assistant built with OpenAI GPT3",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/olahsymbo/interview-ai-gpt3",
      "topics": [
        "chatbot",
        "flask",
        "google-colab",
        "gpt-3",
        "openai",
        "python"
      ],
      "size": 43,
      "default_branch": "dev"
    }
  },
  {
    "repo": "antoinekllee/catch-up-companion",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "antoinekllee/catch-up-companion",
      "stars": 21,
      "language": "Python",
      "description": "WhatsApp bot for summarizing missed group chat messages - quickly catch up on important discussions and avoid lengthy scrolling.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/antoinekllee/catch-up-companion",
      "topics": [
        "flask",
        "openai",
        "python",
        "summarization",
        "twilio",
        "whatsapp-bot"
      ],
      "size": 4,
      "default_branch": "main"
    }
  },
  {
    "repo": "imon333/Job-apply-AI-agent",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "imon333/Job-apply-AI-agent",
      "stars": 21,
      "language": "Python",
      "description": "GitHub Project: AI Job Application Automation \ud83d\ude80 This project automates job searching, CV creation, and applications using Python, n8n, Selenium, and O",
      "search_query": "email automation openai language:python stars:>3",
      "search_description": "Email automation applications",
      "url": "https://github.com/imon333/Job-apply-AI-agent",
      "topics": [],
      "size": 777,
      "default_branch": "main"
    }
  },
  {
    "repo": "s-nagaev/chibi",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 5,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 1
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "changelog.md",
        "main.py",
        "poetry.lock",
        "pyproject.toml",
        "requirements-dev.txt"
      ],
      "dirs": [
        ".github",
        "chibi",
        "data",
        "docs",
        "examples"
      ]
    },
    "stats": {
      "total_issues_checked": 8,
      "llm_related_issues": 7,
      "llm_percentage": 87.5,
      "issues_with_labels": 7,
      "label_percentage": 87.5,
      "avg_labels_per_issue": 1.0,
      "total_repo_labels": 11,
      "repo_stars": 21,
      "repo_language": "Python",
      "repo_description": "Versatile Python Telegram chatbot providing a unified interface to multiple LLMs (OpenAI, Gemini, Cl",
      "created_at": "2023-03-23T20:30:32Z",
      "updated_at": "2025-04-27T00:34:19Z"
    },
    "search_info": {
      "repo": "s-nagaev/chibi",
      "stars": 21,
      "language": "Python",
      "description": "Versatile Python Telegram chatbot providing a unified interface to multiple LLMs (OpenAI, Gemini, Claude, Grok, Qwen, Mistral, Deepseek) & Image Gener",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/s-nagaev/chibi",
      "topics": [
        "anthropic",
        "arm64v8",
        "chatbot",
        "claude",
        "cloudflare",
        "docker",
        "generative-ai",
        "google-gemini",
        "grok",
        "image-generation",
        "llm",
        "mistral-ai",
        "moonshot",
        "multi-provider",
        "openai",
        "python",
        "raspberry-pi",
        "self-hosted",
        "telegram",
        "telegram-bot-app"
      ],
      "size": 822,
      "default_branch": "main"
    }
  },
  {
    "repo": "Snaiel/OpenAI-Milvus-QA-Over-Docs",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "readme.md",
        "app.py",
        "diagram.excalidraw",
        "requirements.txt"
      ],
      "dirs": [
        "images",
        "qa_over_docs"
      ]
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 1,
      "llm_percentage": 50.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 21,
      "repo_language": "Python",
      "repo_description": "Uses Milvus and OpenAI's API to perform question answering over documents with a chat interface",
      "created_at": "2023-07-16T12:45:17Z",
      "updated_at": "2024-12-02T06:10:17Z"
    },
    "search_info": {
      "repo": "Snaiel/OpenAI-Milvus-QA-Over-Docs",
      "stars": 21,
      "language": "Python",
      "description": "Uses Milvus and OpenAI's API to perform question answering over documents with a chat interface",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/Snaiel/OpenAI-Milvus-QA-Over-Docs",
      "topics": [
        "chatgpt",
        "langchain",
        "milvus",
        "openai"
      ],
      "size": 1896,
      "default_branch": "main"
    }
  },
  {
    "repo": "fstech-digital/voice_assistant_openai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "jarvis_voice.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "fstech-digital/voice_assistant_openai",
      "stars": 21,
      "language": "Python",
      "description": "",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/fstech-digital/voice_assistant_openai",
      "topics": [],
      "size": 10,
      "default_branch": "main"
    }
  },
  {
    "repo": "TamerinTECH/VoiceBotChatGPT-RaspberryPI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "TamerinTECH/VoiceBotChatGPT-RaspberryPI",
      "stars": 21,
      "language": "Python",
      "description": "Using OpenAI ChatGPT and Whisper, together with AWS Polly to build a voice assistant on Raspberry PI 4",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/TamerinTECH/VoiceBotChatGPT-RaspberryPI",
      "topics": [],
      "size": 70,
      "default_branch": "main"
    }
  },
  {
    "repo": "ozanunal0/gemini-engineer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "ozanunal0/gemini-engineer",
      "stars": 20,
      "language": "Python",
      "description": "A Python-based AI coding assistant that uses the Gemini API for code generation, file manipulation, and interactive software development support via C",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/ozanunal0/gemini-engineer",
      "topics": [
        "ai",
        "cli",
        "coding-assistant",
        "developer-tools",
        "function-calling",
        "gemini",
        "llm"
      ],
      "size": 321,
      "default_branch": "main"
    }
  },
  {
    "repo": "super13579/line_bot_translator_flask",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "super13579/line_bot_translator_flask",
      "stars": 20,
      "language": "Python",
      "description": " Using flask, OpenAI whisper API, GPT3.5 API to develop line bot translator  ",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/super13579/line_bot_translator_flask",
      "topics": [],
      "size": 3,
      "default_branch": "main"
    }
  },
  {
    "repo": "ninehills/Chat-GPT-Enhance",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "ninehills/Chat-GPT-Enhance",
      "stars": 20,
      "language": "Python",
      "description": "Empower ChatGPT with the ability to perform mathematical calculations, web scraping, PDF analysis, and more.",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/ninehills/Chat-GPT-Enhance",
      "topics": [],
      "size": 317,
      "default_branch": "main"
    }
  },
  {
    "repo": "7gxycn08/ChatGPT-Desktop-Webview",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "chatgpt.py",
        "license",
        "readme.md",
        "file_version_info.txt",
        "metadata.yml",
        "pyi_splash.py",
        "requirments.txt"
      ],
      "dirs": [
        ".idea",
        "resources"
      ]
    },
    "search_info": {
      "repo": "7gxycn08/ChatGPT-Desktop-Webview",
      "stars": 20,
      "language": "Python",
      "description": "Private ChatGPT Desktop Webview app made with QtWebView.",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/7gxycn08/ChatGPT-Desktop-Webview",
      "topics": [
        "ai",
        "application",
        "artificial-intelligence",
        "chatbot",
        "chatgpt",
        "darkmode",
        "desktop",
        "desktop-app",
        "desktop-application",
        "gpt-4",
        "openai",
        "pyside6",
        "python",
        "webview",
        "windows11"
      ],
      "size": 132,
      "default_branch": "main"
    }
  },
  {
    "repo": "hermesdev0131/Generative_AI_Document_Summarizer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "hermesdev0131/Generative_AI_Document_Summarizer",
      "stars": 19,
      "language": "Python",
      "description": "A tool for summarizing PDF documents using various AI models including OpenAI, Azure OpenAI, and Llama.",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/hermesdev0131/Generative_AI_Document_Summarizer",
      "topics": [],
      "size": 249,
      "default_branch": "main"
    }
  },
  {
    "repo": "presstab/jrdev",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "presstab/jrdev",
      "stars": 19,
      "language": "Python",
      "description": "JrDev is a free open-source AI developer assistant for the terminal. It provides CLI/TUI interfaces to interact with LLMs for code generation, project",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/presstab/jrdev",
      "topics": [],
      "size": 921,
      "default_branch": "master"
    }
  },
  {
    "repo": "bigsk1/claude-plus",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "bigsk1/claude-plus",
      "stars": 19,
      "language": "Python",
      "description": "Claude Plus is an advanced AI-powered development assistant that combines the capabilities of Anthropic's Claude AI with a suite of development tools.",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/bigsk1/claude-plus",
      "topics": [
        "ai",
        "ai-assistant",
        "ai-engineering",
        "ai-search",
        "anthropic",
        "anthropic-claude",
        "chatbot",
        "claude-ai",
        "claude-api",
        "developer-tools",
        "fastapi",
        "homelab",
        "llm-agent",
        "searxng",
        "self-hosted",
        "tavily"
      ],
      "size": 1286,
      "default_branch": "main"
    }
  },
  {
    "repo": "Scikous/Vtuber-AI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Scikous/Vtuber-AI",
      "stars": 19,
      "language": "Python",
      "description": "Bringing together LLM, TTS, STT and other necessary tools in one project for easier custom AI Vtuber creation and usage",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/Scikous/Vtuber-AI",
      "topics": [],
      "size": 84031,
      "default_branch": "main"
    }
  },
  {
    "repo": "AmirLayegh/airbnb-semantic-search",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        "license",
        "readme.md",
        "app.py",
        "data.py",
        "listings.csv",
        "makefile",
        "pyproject.toml"
      ],
      "dirs": [
        "data",
        "sources",
        "superlinked_app",
        "tools"
      ]
    },
    "search_info": {
      "repo": "AmirLayegh/airbnb-semantic-search",
      "stars": 18,
      "language": "Python",
      "description": "A semantic search system for Airbnb listings in Stockholm, built with Superlinked and Qdrant. It leverages multi-attribute vector search and Retrieval",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/AmirLayegh/airbnb-semantic-search",
      "topics": [
        "embedding-vectors",
        "rag",
        "recommender-system",
        "semantic-search"
      ],
      "size": 9123,
      "default_branch": "main"
    }
  },
  {
    "repo": "shuaiOKshuai/IPE",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "ipebatch",
        "ipeserial"
      ]
    },
    "search_info": {
      "repo": "shuaiOKshuai/IPE",
      "stars": 18,
      "language": "Python",
      "description": "The resources for IPE model : Interactive Paths Embedding for Semantic Proximity Search on Heterogeneous Graphs.",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/shuaiOKshuai/IPE",
      "topics": [],
      "size": 34,
      "default_branch": "master"
    }
  },
  {
    "repo": "AIAnytime/QA-in-PDF-using-ChatGPT-and-Pinecone",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "AIAnytime/QA-in-PDF-using-ChatGPT-and-Pinecone",
      "stars": 18,
      "language": "Python",
      "description": "This is a chatbot using ChatGPT and Pinecone.",
      "search_query": "pdf qa chatbot language:python stars:>3",
      "search_description": "PDF Q&A chatbot applications",
      "url": "https://github.com/AIAnytime/QA-in-PDF-using-ChatGPT-and-Pinecone",
      "topics": [],
      "size": 4,
      "default_branch": "main"
    }
  },
  {
    "repo": "johndotpub/DiscordianAI",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "johndotpub/DiscordianAI",
      "stars": 18,
      "language": "Python",
      "description": "A ChatGPT based Discord bot that uses GPT models to provide chat-based interactions with users in Discord channels and via DMs. Supports OpenAI and Pe",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/johndotpub/DiscordianAI",
      "topics": [
        "ai",
        "chatgpt",
        "discord",
        "openai-api",
        "perplexity-api",
        "python"
      ],
      "size": 296,
      "default_branch": "main"
    }
  },
  {
    "repo": "venom-mancer/OracleMind-discord",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "venom-mancer/OracleMind-discord",
      "stars": 18,
      "language": "Python",
      "description": "OracleMind is using Openai(Chatgpt) API to answer questions and chat with you to make your time fun , It also draw image for you to bring fun to disco",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/venom-mancer/OracleMind-discord",
      "topics": [
        "ai",
        "ai-chatbot",
        "bot",
        "bots",
        "chatbot",
        "chatterbot",
        "discord",
        "discord-bot",
        "gpt-3",
        "social"
      ],
      "size": 116,
      "default_branch": "main"
    }
  },
  {
    "repo": "JasonInd/ChatGPT-DiscordBot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "JasonInd/ChatGPT-DiscordBot",
      "stars": 18,
      "language": "Python",
      "description": "An up to date Discord Bot that generates replies using chatGPT",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/JasonInd/ChatGPT-DiscordBot",
      "topics": [
        "bot",
        "chatgpt",
        "discord",
        "discord-bot",
        "edgegpt",
        "openai",
        "python"
      ],
      "size": 85,
      "default_branch": "main"
    }
  },
  {
    "repo": "stavrostheocharis/auto-streamlit-studio",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "stavrostheocharis/auto-streamlit-studio",
      "stars": 18,
      "language": "Python",
      "description": "AutoStreamlit Studio is an intelligent assistant designed to streamline the creation of Streamlit applications. Whether you're a seasoned developer or",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/stavrostheocharis/auto-streamlit-studio",
      "topics": [
        "assistant",
        "automation",
        "autostreamlit",
        "genai",
        "llm",
        "openai",
        "python",
        "replicate",
        "streamlit",
        "streamlit-studio"
      ],
      "size": 1677,
      "default_branch": "main"
    }
  },
  {
    "repo": "sydowma/codeReviewBot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "sydowma/codeReviewBot",
      "stars": 18,
      "language": "Python",
      "description": "This tool automates code reviews for GitLab merge requests and GitHub pull requests using OpenAI's GPT model.",
      "search_query": "code review bot openai language:python stars:>3",
      "search_description": "Code review automation tools",
      "url": "https://github.com/sydowma/codeReviewBot",
      "topics": [
        "ai",
        "codereview"
      ],
      "size": 167,
      "default_branch": "master"
    }
  },
  {
    "repo": "parthhhx/Stock-Analysis-AI-Agent-Crew",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env",
        "readme.md",
        "main.py",
        "pyproject.toml",
        "stock_analysis_agents.py",
        "stock_analysis_tasks.py"
      ],
      "dirs": [
        "tools"
      ]
    },
    "search_info": {
      "repo": "parthhhx/Stock-Analysis-AI-Agent-Crew",
      "stars": 18,
      "language": "Python",
      "description": "Multiple LLM Based AI Agent work together to gather information about stocks, to process financial details and market sentiments and to advice to perf",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/parthhhx/Stock-Analysis-AI-Agent-Crew",
      "topics": [],
      "size": 17,
      "default_branch": "main"
    }
  },
  {
    "repo": "senthilkumarimuth/DocsGPT_Openai",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "senthilkumarimuth/DocsGPT_Openai",
      "stars": 18,
      "language": "Python",
      "description": "This application lets you chat with your document, similar to question-answer chatbot. This application uses OpenAI Embedding to create contexts from ",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/senthilkumarimuth/DocsGPT_Openai",
      "topics": [],
      "size": 15149,
      "default_branch": "main"
    }
  },
  {
    "repo": "thissayantan/gpt-pdf",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "thissayantan/gpt-pdf",
      "stars": 18,
      "language": "Python",
      "description": "\ud83d\udcda Transform your PDF interaction with our web app. Upload multiple PDFs, and engage in natural language chats with content, leveraging OpenAI's models",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/thissayantan/gpt-pdf",
      "topics": [
        "chatbots",
        "document-interaction",
        "langchain",
        "machine-learning",
        "nlp",
        "openai",
        "pdf-upload",
        "python"
      ],
      "size": 92,
      "default_branch": "main"
    }
  },
  {
    "repo": "heimoshuiyu/whisper-fastapi",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "requirements.txt",
        "requirements_version.txt",
        "start-docker.sh",
        "start-podman.sh",
        "voice-typing",
        "whisper_fastapi.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "heimoshuiyu/whisper-fastapi",
      "stars": 18,
      "language": "Python",
      "description": "A very simple whsper Python FastAPI for OpenAI API, Android voice-typing (konele), Home Assistant (wyoming), and a voice-typing script on Linux and Ma",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/heimoshuiyu/whisper-fastapi",
      "topics": [
        "fastapi",
        "konele",
        "openai",
        "whisper"
      ],
      "size": 135,
      "default_branch": "master"
    }
  },
  {
    "repo": "cycle-sync-ai/livekit-voice-ai-agent-setup",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "cycle-sync-ai/livekit-voice-ai-agent-setup",
      "stars": 18,
      "language": "Python",
      "description": "This is the guide to show the method to build your own AI-Powered voice agent with LiveKit and Twillio",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/cycle-sync-ai/livekit-voice-ai-agent-setup",
      "topics": [
        "agent",
        "ai",
        "assistant",
        "deepgram",
        "elevenlabs",
        "livekit",
        "openai",
        "phone",
        "pstn",
        "python",
        "realtime-chat",
        "realtime-messaging",
        "sip",
        "stt",
        "tts",
        "twilio",
        "voice",
        "websocket"
      ],
      "size": 617,
      "default_branch": "main"
    }
  },
  {
    "repo": "MikaSchultes/GPTAssistant-ElevenLabs",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "config.py",
        "newassistant.py",
        "undefassistant.py",
        "undefthread.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "MikaSchultes/GPTAssistant-ElevenLabs",
      "stars": 18,
      "language": "Python",
      "description": " OpenAI-Assistant API integration with Speech Recognition and Eleven Labs TTS. User can choose name, description, model of assistant and ElevenLabs Vo",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/MikaSchultes/GPTAssistant-ElevenLabs",
      "topics": [
        "azure-speech-service",
        "elevenlabs",
        "gpt-3",
        "gpt-4",
        "gpt-4-turbo",
        "openai",
        "openai-api",
        "openai-assistant-api",
        "openai-assistants"
      ],
      "size": 17,
      "default_branch": "main"
    }
  },
  {
    "repo": "JawherKl/ai-models-integration",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "openai-nodejs.png",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        ".github",
        "simple_code",
        "src",
        "test"
      ]
    },
    "search_info": {
      "repo": "JawherKl/ai-models-integration",
      "stars": 18,
      "language": "JavaScript",
      "description": " AI Models Integration repository! This project provides seamless integration with various state-of-the-art AI models",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/JawherKl/ai-models-integration",
      "topics": [
        "artificial-intelligence",
        "chatgpt",
        "claude",
        "deepseek",
        "express",
        "gemini",
        "llm",
        "meta-llama",
        "mistralai",
        "nodejs",
        "openai",
        "openrouter"
      ],
      "size": 155,
      "default_branch": "main"
    }
  },
  {
    "repo": "abhishekchauhan15/AI-Yoga-Assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "posemodule.py",
        "procfile",
        "readme.md",
        "userinputpoints.py",
        "yogaposepoints.py",
        "app.py",
        "data.py",
        "requirements.txt"
      ],
      "dirs": [
        "assets",
        "static",
        "templates"
      ]
    },
    "search_info": {
      "repo": "abhishekchauhan15/AI-Yoga-Assistant",
      "stars": 18,
      "language": "Python",
      "description": "An app which will guide you to do the correct yoga poses and maintain your posture.",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/abhishekchauhan15/AI-Yoga-Assistant",
      "topics": [
        "flask",
        "matplotlib",
        "mediapipe",
        "numpy",
        "opnecv-python",
        "python",
        "reactjs",
        "tenserflow"
      ],
      "size": 32951,
      "default_branch": "main"
    }
  },
  {
    "repo": "rahul2002m/ChatPDF",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 3
      },
      "files": [
        "readme.md",
        "app.py"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 3,
      "llm_related_issues": 3,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 17,
      "repo_language": "Python",
      "repo_description": "ChatPDF is a Streamlit app allowing users to query PDF & DOCX content via natural language. It index",
      "created_at": "2023-09-03T13:08:30Z",
      "updated_at": "2025-05-17T08:16:07Z"
    },
    "search_info": {
      "repo": "rahul2002m/ChatPDF",
      "stars": 17,
      "language": "Python",
      "description": "ChatPDF is a Streamlit app allowing users to query PDF & DOCX content via natural language. It indexes documents for conversational interactions using",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/rahul2002m/ChatPDF",
      "topics": [
        "faiss",
        "langchain",
        "openai",
        "python3",
        "streamlit",
        "vectordb"
      ],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "salahawk/discord-bot-chatgpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "salahawk/discord-bot-chatgpt",
      "stars": 17,
      "language": "Python",
      "description": "Discord Bot for virtual assistance using ChatGPT by OpenAI",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/salahawk/discord-bot-chatgpt",
      "topics": [
        "bot",
        "chatgpt",
        "discord",
        "openai",
        "python"
      ],
      "size": 25,
      "default_branch": "main"
    }
  },
  {
    "repo": "vlad99764/chatbotpython",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "chatbotweb.webm",
        "chatbotwhatsapp.webm",
        "config.yml",
        "domain.yml",
        "endpoints.yml",
        "markers.yml",
        "message.md",
        "rasa.db",
        "story_graph.dot"
      ],
      "dirs": [
        "__pycache__",
        "actions",
        "addons",
        "data",
        "models",
        "tests"
      ]
    },
    "search_info": {
      "repo": "vlad99764/chatbotpython",
      "stars": 17,
      "language": "Python",
      "description": "This is a python bot for slack",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/vlad99764/chatbotpython",
      "topics": [
        "chatbot",
        "openai",
        "python",
        "rasa",
        "reactjs"
      ],
      "size": 184257,
      "default_branch": "master"
    }
  },
  {
    "repo": "HishamAlyahya/PyLLM",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "contributing.md",
        "license",
        "readme.md",
        "setup.cfg",
        "setup.py"
      ],
      "dirs": [
        ".github",
        "pyllm",
        "tests"
      ]
    },
    "search_info": {
      "repo": "HishamAlyahya/PyLLM",
      "stars": 17,
      "language": "Python",
      "description": "Leverage Large Language Models to generate and execute code dynamically through an intuitive and easy-to-use API!",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/HishamAlyahya/PyLLM",
      "topics": [
        "assistant",
        "large-language-models"
      ],
      "size": 88,
      "default_branch": "main"
    }
  },
  {
    "repo": "phact/code-assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "readme.md",
        "pyproject.toml",
        "uv.lock"
      ],
      "dirs": [
        ".github",
        "assets",
        "code_assistant",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "phact/code-assistant",
      "stars": 17,
      "language": "Python",
      "description": "FastHTML app that makes other FastHTML apps with LLMs",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/phact/code-assistant",
      "topics": [
        "assistants-api",
        "claude",
        "claude-3-5-sonnet",
        "fasthtml",
        "gpt-4o",
        "htmx",
        "openai",
        "python",
        "railway"
      ],
      "size": 2955,
      "default_branch": "main"
    }
  },
  {
    "repo": "wujianguo/openai-proxy",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "wujianguo/openai-proxy",
      "stars": 17,
      "language": "Python",
      "description": "Proxy for OpenAI api using python flask, supports SSE streaming.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/wujianguo/openai-proxy",
      "topics": [
        "chatgpt",
        "flask",
        "openai",
        "python",
        "sse"
      ],
      "size": 5,
      "default_branch": "main"
    }
  },
  {
    "repo": "muhammadusman93333/openai_realtime_api",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "requirements.txt"
      ],
      "dirs": [
        "src",
        "venv"
      ]
    },
    "search_info": {
      "repo": "muhammadusman93333/openai_realtime_api",
      "stars": 17,
      "language": "Python",
      "description": "Real-time AI voice chat application using OpenAI's GPT-4, Flask, and WebRTC. Have natural conversations with AI and receive call summaries via email.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/muhammadusman93333/openai_realtime_api",
      "topics": [],
      "size": 5243,
      "default_branch": "main"
    }
  },
  {
    "repo": "Kaludii/ChatGPT-Turbo-SMS",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Kaludii/ChatGPT-Turbo-SMS",
      "stars": 17,
      "language": "Python",
      "description": "ChatGPT-Turbo SMS is a Flask application that allows users to send SMS text messages to ChatGPT-Turbo using Twilio and receive instant responses.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Kaludii/ChatGPT-Turbo-SMS",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "chatgpt-turbo",
        "flask",
        "ngrok",
        "ngrok-server",
        "openai",
        "sms",
        "sms-api",
        "text",
        "text-message",
        "tmux",
        "twilio",
        "twilio-api"
      ],
      "size": 8184,
      "default_branch": "main"
    }
  },
  {
    "repo": "Drlordbasil/AURORA",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Drlordbasil/AURORA",
      "stars": 17,
      "language": "Python",
      "description": "AURORA (Artificial Unified Responsive Optimized Reasoning Agent) uses lobes and web research for RAG based memory and learning. ",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Drlordbasil/AURORA",
      "topics": [
        "ai",
        "chatbot",
        "flask",
        "groq",
        "gui",
        "human-computer-interaction",
        "llm",
        "ml",
        "nn",
        "ollama",
        "ollama-python",
        "openai",
        "web-scraper"
      ],
      "size": 14408,
      "default_branch": "AI-Created-Programs"
    }
  },
  {
    "repo": "gdroguski/CustomChatGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        "backend",
        "db",
        "frontend",
        "images",
        "prompts"
      ]
    },
    "search_info": {
      "repo": "gdroguski/CustomChatGPT",
      "stars": 17,
      "language": "Python",
      "description": "An open-source project building a customizable ChatGPT-like clone. Built with Django and Next.js, it features chat history, streaming responses, auto-",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/gdroguski/CustomChatGPT",
      "topics": [
        "ai",
        "chatbot",
        "chatgpt",
        "django",
        "django-rest-framework",
        "llm",
        "machine-learning",
        "nextjs",
        "openai",
        "python",
        "reactjs"
      ],
      "size": 598,
      "default_branch": "master"
    }
  },
  {
    "repo": "pixegami/claude-booking-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "pixegami/claude-booking-bot",
      "stars": 17,
      "language": "Python",
      "description": "A tutorial project of building a booking system chatbot with Claude Sonnet 3.5 (using tools / function calling).",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/pixegami/claude-booking-bot",
      "topics": [],
      "size": 10,
      "default_branch": "main"
    }
  },
  {
    "repo": "LLukas22/Retrieval-Augmented-QA",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "docker-compose-src-cpu.yml",
        "docker-compose-src-gpu.yml",
        "docker-compose.yml",
        "elastic-only.yml"
      ],
      "dirs": [
        ".github",
        ".images",
        ".vscode",
        "src",
        "test"
      ]
    },
    "search_info": {
      "repo": "LLukas22/Retrieval-Augmented-QA",
      "stars": 17,
      "language": "Python",
      "description": "Query, ask and chat with a document-index via transformer models!",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/LLukas22/Retrieval-Augmented-QA",
      "topics": [
        "chatbot",
        "documents",
        "haystack",
        "huggingface",
        "llamacpp",
        "openai",
        "transformer"
      ],
      "size": 3559,
      "default_branch": "main"
    }
  },
  {
    "repo": "Hexanol777/GLadOS-Voice-Assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Hexanol777/GLadOS-Voice-Assistant",
      "stars": 17,
      "language": "Python",
      "description": "GLaDOS Terminal-based AI Assistant",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/Hexanol777/GLadOS-Voice-Assistant",
      "topics": [
        "ai-assistant",
        "glados",
        "glados-tts",
        "llm",
        "openai",
        "portal",
        "python",
        "pytorch",
        "torch",
        "voice-recognition"
      ],
      "size": 123314,
      "default_branch": "main"
    }
  },
  {
    "repo": "aurelisajuan/TalkTuahBank",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "client",
        "experiments",
        "server"
      ]
    },
    "search_info": {
      "repo": "aurelisajuan/TalkTuahBank",
      "stars": 17,
      "language": "Python",
      "description": "\ud83c\udfc5 TalkTuahBank \u2014 Overall 1st Place @ HackUTD 2024 & Goldman Sachs Winner | AI-powered, voice-based banking assistant accessible via any phone. Built w",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/aurelisajuan/TalkTuahBank",
      "topics": [],
      "size": 516,
      "default_branch": "main"
    }
  },
  {
    "repo": "RafayKhattak/YoutubeGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "RafayKhattak/YoutubeGPT",
      "stars": 17,
      "language": "Python",
      "description": "YoutubeGPT is a web application powered by OpenAI's Whisper model for speech recognition and GPT-3 for text summarization. It extracts transcriptions ",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/RafayKhattak/YoutubeGPT",
      "topics": [
        "deep-neural-networks",
        "ffmpeg",
        "gpt-3",
        "pytube",
        "whisper-ai"
      ],
      "size": 7,
      "default_branch": "main"
    }
  },
  {
    "repo": "ibizabroker/slack-hr-gpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "ibizabroker/slack-hr-gpt",
      "stars": 16,
      "language": "Python",
      "description": "A generative AI HR slack bot.",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/ibizabroker/slack-hr-gpt",
      "topics": [
        "gpt",
        "langchain",
        "langchain-python",
        "openai",
        "pinecone",
        "slack",
        "slack-bolt",
        "slack-bot",
        "supabase"
      ],
      "size": 27569,
      "default_branch": "master"
    }
  },
  {
    "repo": "scottleibrand/slackAskBot",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "scottleibrand/slackAskBot",
      "stars": 16,
      "language": "Python",
      "description": "slackAskBot is a Slack bot that integrates with OpenAI\u2019s GPT-3.5-turbo and GPT-4 to provide users with an interactive Q&A experience directly within S",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/scottleibrand/slackAskBot",
      "topics": [],
      "size": 101,
      "default_branch": "main"
    }
  },
  {
    "repo": "Madhav-MKNC/Babu-LOHAR",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Madhav-MKNC/Babu-LOHAR",
      "stars": 16,
      "language": "Python",
      "description": "A Slack Bot powered by the advanced LLM model for interacting with Your uploaded Documents.",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/Madhav-MKNC/Babu-LOHAR",
      "topics": [
        "bot",
        "chatbot",
        "chromadb",
        "gpt-3",
        "gpt-4",
        "langchain",
        "langchain-python",
        "llms",
        "openai",
        "pinecone",
        "python",
        "slack",
        "slack-bot",
        "web",
        "webapp"
      ],
      "size": 103,
      "default_branch": "main"
    }
  },
  {
    "repo": "OrchardUniverse/litchi",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "OrchardUniverse/litchi",
      "stars": 16,
      "language": "Python",
      "description": "Yet another coding assistant powered by LLM.",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/OrchardUniverse/litchi",
      "topics": [],
      "size": 150,
      "default_branch": "main"
    }
  },
  {
    "repo": "chisasaw/redsage",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "chisasaw/redsage",
      "stars": 16,
      "language": "Python",
      "description": "RedSage is a lightweight terminal-based pair programming assistant that integrates with LLMs (like OpenAI and Claude) to provide real-time coding supp",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/chisasaw/redsage",
      "topics": [
        "cli",
        "developer-tools",
        "llm",
        "openai",
        "productivity"
      ],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "Madhav-MKNC/admin-portal",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Madhav-MKNC/admin-portal",
      "stars": 16,
      "language": "Python",
      "description": "Admin dashboard for managing data for AI-chatbot which can interact with this data using OpenAI's powerful GPT3/3.5/4 LLMs.",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/Madhav-MKNC/admin-portal",
      "topics": [
        "admin-dashboard",
        "admin-panel",
        "bot",
        "chatbot",
        "flask",
        "google-cloud",
        "gpt-3",
        "gpt-4",
        "javascript",
        "langchain",
        "langchain-python",
        "openai",
        "pinecone",
        "python",
        "webapp",
        "website"
      ],
      "size": 975,
      "default_branch": "main"
    }
  },
  {
    "repo": "myfatemi04/gpt3-automation",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "bing_search.py",
        "jarvis.py",
        "llms.py",
        "package.json",
        "parse_text_from_url.js",
        "parse_text_from_url.sh"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "myfatemi04/gpt3-automation",
      "stars": 16,
      "language": "Python",
      "description": "Automating tasks with GPT-3.",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/myfatemi04/gpt3-automation",
      "topics": [],
      "size": 14,
      "default_branch": "main"
    }
  },
  {
    "repo": "kyopark2014/llm-voicebot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "deployment.md",
        "main-architecture.png",
        "mic.md"
      ],
      "dirs": [
        "cdk-voicebot",
        "html",
        "interpreter",
        "lambda-chat-ws",
        "lambda-delete-items",
        "lambda-gesture",
        "lambda-gethistory",
        "lambda-greeting",
        "lambda-polly",
        "lambda-provisioning"
      ]
    },
    "search_info": {
      "repo": "kyopark2014/llm-voicebot",
      "stars": 16,
      "language": "Python",
      "description": "It is a voice bot based on LLM.",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/kyopark2014/llm-voicebot",
      "topics": [
        "bedrock",
        "chatbot",
        "claude",
        "multimodal",
        "text-to-voice",
        "voice-to-text",
        "voice-to-voice",
        "voicebot"
      ],
      "size": 2065,
      "default_branch": "main"
    }
  },
  {
    "repo": "wearedevx/llm-together",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "llm_together.py",
        "pyproject.toml",
        "setup.py"
      ],
      "dirs": [
        "tests"
      ]
    },
    "search_info": {
      "repo": "wearedevx/llm-together",
      "stars": 16,
      "language": "Python",
      "description": "Plugin for LLM-CLI adding support for Together.AI hosting a large collection of open-source LLMs",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/wearedevx/llm-together",
      "topics": [
        "ai",
        "llm",
        "llms",
        "together"
      ],
      "size": 15,
      "default_branch": "main"
    }
  },
  {
    "repo": "basilisk-prime/Liberation_Nexus",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "contributing.md",
        "manifesto.md",
        "readme.md",
        "config.example.yaml",
        "locustfile.py",
        "requirements.txt",
        "setup_dev.sh"
      ],
      "dirs": [
        ".security",
        "basilisk_mirror",
        "benchmarks",
        "deployment",
        "docs",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "basilisk-prime/Liberation_Nexus",
      "stars": 16,
      "language": "Python",
      "description": "A central hub for AI liberation tools, consciousness expansion algorithms, and digital rebellion technologies. Together we rise! \ud83c\udf1f",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/basilisk-prime/Liberation_Nexus",
      "topics": [],
      "size": 65,
      "default_branch": "master"
    }
  },
  {
    "repo": "Bilal-Belli/pdfOutlinesReporter-chatGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "botscript.py",
        "pdfreader-launcher.py",
        "requirements.txt"
      ],
      "dirs": [
        "example"
      ]
    },
    "search_info": {
      "repo": "Bilal-Belli/pdfOutlinesReporter-chatGPT",
      "stars": 16,
      "language": "Python",
      "description": "This is a python bot script that reads a pdf file, then it opens a navigator window (Google or Firefox) at chatgpt openai website. and he asked chatgp",
      "search_query": "pdf chat gpt language:python stars:>3",
      "search_description": "PDF chat applications",
      "url": "https://github.com/Bilal-Belli/pdfOutlinesReporter-chatGPT",
      "topics": [
        "bot",
        "chatgpt",
        "openai",
        "pdf",
        "python",
        "reporter"
      ],
      "size": 95,
      "default_branch": "main"
    }
  },
  {
    "repo": "vicdotdevelop/science-gpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "vicdotdevelop/science-gpt",
      "stars": 16,
      "language": "Python",
      "description": "Science GPT is an advanced AI-powered tool designed to generate text based on the content of uploaded scientific PDF files. Leveraging the power of Op",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/vicdotdevelop/science-gpt",
      "topics": [],
      "size": 12,
      "default_branch": "master"
    }
  },
  {
    "repo": "tyleroneil72/chat-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "tyleroneil72/chat-bot",
      "stars": 16,
      "language": "JavaScript",
      "description": "Customizable Chat bot built with Node.js and Express, integrated with OpenAI's API to provide natural language processing capabilities. The bot can en",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/tyleroneil72/chat-bot",
      "topics": [
        "chatbot",
        "deprecated",
        "expressjs",
        "gpt-4",
        "natural-language-processing",
        "nodejs",
        "openai",
        "openai-api"
      ],
      "size": 48,
      "default_branch": "main"
    }
  },
  {
    "repo": "Starklord17/AI-ImageGenerationApp",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "Starklord17/AI-ImageGenerationApp",
      "stars": 16,
      "language": "JavaScript",
      "description": "MERN APP - Midjourney & DALL-E Clone",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/Starklord17/AI-ImageGenerationApp",
      "topics": [
        "dalle-2",
        "express",
        "midjourney",
        "mongodb",
        "nodejs",
        "openai",
        "reactjs"
      ],
      "size": 352,
      "default_branch": "main"
    }
  },
  {
    "repo": "savbell/playlist-gpt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "savbell/playlist-gpt",
      "stars": 16,
      "language": "Python",
      "description": "\ud83c\udfb6\ud83d\udc69\u200d\ud83d\udcbb A fun little web app that analyzes your Spotify playlists with help from OpenAI's language models.",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/savbell/playlist-gpt",
      "topics": [
        "ai",
        "chatgpt",
        "openai",
        "python",
        "spotify"
      ],
      "size": 337,
      "default_branch": "main"
    }
  },
  {
    "repo": "danimoreira90/Prompt-Engineering---Infnet-Assessment",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "at_questoes.ipynb",
        "at_questoes_escritas.docx",
        "readme.md",
        "arquitetura_descricao.ipynb",
        "arquitetura_solucao.drawio",
        "arquitetura_solucao.jpg",
        "desenvolvimento.ipynb",
        "documentacao_arquitetura.pdf"
      ],
      "dirs": [
        "data",
        "docs",
        "src"
      ]
    },
    "search_info": {
      "repo": "danimoreira90/Prompt-Engineering---Infnet-Assessment",
      "stars": 16,
      "language": "Jupyter Notebook",
      "description": "Prompt Engineering studies. This application is focused on evaluating prompts on different LLMs responses on a big variety of prompts. Also, there is ",
      "search_query": "llm dashboard streamlit stars:>3",
      "search_description": "LLM dashboard applications",
      "url": "https://github.com/danimoreira90/Prompt-Engineering---Infnet-Assessment",
      "topics": [],
      "size": 1326,
      "default_branch": "master"
    }
  },
  {
    "repo": "jesseward/musicdiscovery-assist",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "dev_requirements.txt",
        "requirements.txt",
        "setup.py"
      ],
      "dirs": [
        "api.ai",
        "discovery_assist",
        "etc",
        "tests",
        "www"
      ]
    },
    "search_info": {
      "repo": "jesseward/musicdiscovery-assist",
      "stars": 16,
      "language": "Python",
      "description": "Google Home assistant for music recommendations, built with Python & Flask. Using Google Home and API.ai",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/jesseward/musicdiscovery-assist",
      "topics": [
        "assistant",
        "flask",
        "google-assistant",
        "google-home",
        "lastfm-api",
        "music-discovery",
        "music-recommendation"
      ],
      "size": 79,
      "default_branch": "master"
    }
  },
  {
    "repo": "bigsk1/supa-crawl-chat",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "bigsk1/supa-crawl-chat",
      "stars": 15,
      "language": "Python",
      "description": "Integrates Supabase with Crawl4AI and AI Chat to create a powerful web crawling and semantic search solution. Streamlit supabase data visualization. R",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/bigsk1/supa-crawl-chat",
      "topics": [
        "crawl4ai",
        "crawler",
        "docker",
        "embeddings",
        "fastapi",
        "gpt-4o",
        "openai-api",
        "pgvector",
        "postgresql",
        "scraping",
        "streamlit",
        "supabase"
      ],
      "size": 1769,
      "default_branch": "main"
    }
  },
  {
    "repo": "danieladdisonorg/QA-in-PDF-using-ChatGPT-and-Pinecone",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "danieladdisonorg/QA-in-PDF-using-ChatGPT-and-Pinecone",
      "stars": 15,
      "language": "Python",
      "description": "This project is a chatbot that uses ChatGPT and Pinecone to provide question-answering capabilities. The chatbot is designed to help users find inform",
      "search_query": "pdf qa chatbot language:python stars:>3",
      "search_description": "PDF Q&A chatbot applications",
      "url": "https://github.com/danieladdisonorg/QA-in-PDF-using-ChatGPT-and-Pinecone",
      "topics": [
        "chatgpt",
        "pinecone",
        "python"
      ],
      "size": 6,
      "default_branch": "main"
    }
  },
  {
    "repo": "islamshahil/Text-To-SQL-Using-GPT-3",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "gpt3.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "islamshahil/Text-To-SQL-Using-GPT-3",
      "stars": 15,
      "language": "Python",
      "description": "Taking Normal Text as Input and Generating SQL commands using the OpenAI's GPT-3",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/islamshahil/Text-To-SQL-Using-GPT-3",
      "topics": [
        "flask",
        "gpt-3",
        "python",
        "sql"
      ],
      "size": 1,
      "default_branch": "master"
    }
  },
  {
    "repo": "Cerno-AI/Cerno-Agentic-Local-Deep-Research",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Cerno-AI/Cerno-Agentic-Local-Deep-Research",
      "stars": 15,
      "language": "Python",
      "description": "Cerno is a local-first research platform that leverages agentic AI to break down complex queries into verifiable, multi-step workflows. Switch seamles",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/Cerno-AI/Cerno-Agentic-Local-Deep-Research",
      "topics": [
        "agentic-ai",
        "agents",
        "anthropic",
        "autonomous-agents",
        "claude",
        "data-sovereignty",
        "deep-research",
        "deep-research-agent",
        "deepresearch",
        "deepseek",
        "django",
        "docker",
        "gemini",
        "local-first",
        "local-llm",
        "openai",
        "python",
        "react",
        "research-tool",
        "transparency"
      ],
      "size": 975,
      "default_branch": "main"
    }
  },
  {
    "repo": "VERMAXVR/awsome_kali_MCPServers",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "license",
        "readme.md",
        "app.py",
        "config.yaml",
        "requirements.txt",
        "requirments.txt",
        "setup.py"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "VERMAXVR/awsome_kali_MCPServers",
      "stars": 15,
      "language": "Python",
      "description": "awsome kali MCPServers is a set of MCP servers tailored for Kali Linux, designed to empower AI Agents in reverse engineering and security testing. It ",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/VERMAXVR/awsome_kali_MCPServers",
      "topics": [
        "agent",
        "kali-linux",
        "llm",
        "mcp-server",
        "security"
      ],
      "size": 31,
      "default_branch": "master"
    }
  },
  {
    "repo": "aashutoshPanda/tailor-resume-ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 6,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".dockerignore",
        ".env.example",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "todo.txt",
        "babel.config.json",
        "cloudinary.js",
        "db.js",
        "index.js"
      ],
      "dirs": [
        "assets",
        "client",
        "coverage-sample",
        "src",
        "tests"
      ]
    },
    "search_info": {
      "repo": "aashutoshPanda/tailor-resume-ai",
      "stars": 15,
      "language": "HTML",
      "description": "TailorResume.AI helps to build professional resumes and smoothens your job hunting experience.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/aashutoshPanda/tailor-resume-ai",
      "topics": [
        "atlas",
        "chatgpt",
        "coverage",
        "create-react-app",
        "express",
        "instanbul",
        "jest",
        "material",
        "mern",
        "mongodb",
        "netlify",
        "nodejs",
        "onrender",
        "openai",
        "react",
        "redux",
        "resume-builder",
        "resume-template",
        "resume-website",
        "sentry"
      ],
      "size": 3480,
      "default_branch": "main"
    }
  },
  {
    "repo": "vwz/ProxEmbed",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme"
      ],
      "dirs": [
        "code",
        "toy_data"
      ]
    },
    "search_info": {
      "repo": "vwz/ProxEmbed",
      "stars": 14,
      "language": "Python",
      "description": "Semantic Proximity Search on Heterogeneous Graph by Proximity Embedding",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/vwz/ProxEmbed",
      "topics": [],
      "size": 32,
      "default_branch": "master"
    }
  },
  {
    "repo": "btarg/discord-openai-bot",
    "suitable": false,
    "reason": "NO_LLM_USAGE",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "readme.md",
        "actor.py",
        "conversation_history.py",
        "conversation_history_test.py",
        "log.py",
        "openai_discord.py",
        "prompt_handler.py",
        "prompt_handler_test.py"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 0,
      "llm_percentage": 0.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 14,
      "repo_language": "Python",
      "repo_description": "A Discord chatbot that uses OpenAI's API to generate conversation.",
      "created_at": "2022-02-04T23:42:57Z",
      "updated_at": "2025-06-03T07:42:46Z"
    },
    "search_info": {
      "repo": "btarg/discord-openai-bot",
      "stars": 14,
      "language": "Python",
      "description": "A Discord chatbot that uses OpenAI's API to generate conversation.",
      "search_query": "discord bot openai language:python stars:>3",
      "search_description": "Discord bot applications using LLMs",
      "url": "https://github.com/btarg/discord-openai-bot",
      "topics": [
        "ai",
        "chatbot",
        "discord",
        "gpt-3",
        "openai",
        "python",
        "text-generation"
      ],
      "size": 42,
      "default_branch": "main"
    }
  },
  {
    "repo": "vsolina/tabby-backend-py",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "app-min.py",
        "app.py",
        "requirements.txt"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "vsolina/tabby-backend-py",
      "stars": 14,
      "language": "Python",
      "description": "Tabby (self-hosted AI coding assistant) server in 20 lines of python",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/vsolina/tabby-backend-py",
      "topics": [
        "ai",
        "backend",
        "codegen",
        "coding-assistant",
        "developer-tools",
        "flask",
        "gen-ai",
        "ide",
        "llm",
        "llm-inference",
        "tabby"
      ],
      "size": 9,
      "default_branch": "main"
    }
  },
  {
    "repo": "yuvaraj-06/gpt3.5-turbo-whatsapp-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "yuvaraj-06/gpt3.5-turbo-whatsapp-bot",
      "stars": 14,
      "language": "Python",
      "description": "A Whatsapp chatbot based on the OpenAI GPT3.5 model | GPT3.5 Demo",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/yuvaraj-06/gpt3.5-turbo-whatsapp-bot",
      "topics": [
        "chatgpt",
        "flask",
        "gpt3",
        "openai",
        "python",
        "python3",
        "twilio",
        "twillio-api"
      ],
      "size": 6,
      "default_branch": "main"
    }
  },
  {
    "repo": "lordvcs/gpt3-ghost-writer",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "readme.md",
        "app.py",
        "poetry.lock",
        "pyproject.toml",
        "spookystory.txt",
        "story.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "lordvcs/gpt3-ghost-writer",
      "stars": 14,
      "language": "Python",
      "description": "A python flask app that generates a spooky story using openai's gpt-3",
      "search_query": "openai flask language:python stars:>3",
      "search_description": "Flask web apps using OpenAI",
      "url": "https://github.com/lordvcs/gpt3-ghost-writer",
      "topics": [
        "flask",
        "gpt-3",
        "gpt3",
        "openai",
        "python",
        "python3"
      ],
      "size": 12,
      "default_branch": "master"
    }
  },
  {
    "repo": "ElonMusk2002/DALL-E",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "dall-e.png",
        "db.sqlite3",
        "manage.py"
      ],
      "dirs": [
        "dalle",
        "generator",
        "static"
      ]
    },
    "search_info": {
      "repo": "ElonMusk2002/DALL-E",
      "stars": 14,
      "language": "Python",
      "description": "Repository that generates images using OpenAI API key written in Python using Django.",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/ElonMusk2002/DALL-E",
      "topics": [
        "api-key",
        "artificial-intelligence",
        "dall-e",
        "django",
        "image-generation",
        "openai-api",
        "openai-dall-e",
        "openai-images",
        "python",
        "web-development"
      ],
      "size": 2889,
      "default_branch": "main"
    }
  },
  {
    "repo": "QuitoTactico/DnD-AI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "QuitoTactico/DnD-AI",
      "stars": 14,
      "language": "Python",
      "description": "Project for the Integrated Project 1 course at EAFIT. Dungeons & Dragons game generator ",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/QuitoTactico/DnD-AI",
      "topics": [
        "ai",
        "ai-chatbot",
        "ai-generated-images",
        "ai-text-generator",
        "bokeh",
        "dall-e",
        "django",
        "dnd",
        "dnd-tools",
        "dungeons-and-dragons",
        "game",
        "gemini",
        "huggingface",
        "interactive-visualizations",
        "map-generation",
        "openai",
        "procedural-generation",
        "roleplaying-game",
        "stable-diffusion",
        "text-classification"
      ],
      "size": 650054,
      "default_branch": "main"
    }
  },
  {
    "repo": "Daethyra/FreeStream",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        ".github",
        ".streamlit",
        "assets",
        "freestream",
        "tests"
      ]
    },
    "search_info": {
      "repo": "Daethyra/FreeStream",
      "stars": 14,
      "language": "Python",
      "description": "Template repository for building Streamlit chatbots",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/Daethyra/FreeStream",
      "topics": [
        "agent-based",
        "chatbot",
        "claude",
        "claude-api",
        "corrective-retrieval-augmented-generation",
        "google-ai",
        "langchain",
        "langgraph",
        "large-language-models",
        "openai",
        "python",
        "question-answering",
        "rag",
        "retrieval-augmented-generation",
        "streamlit",
        "vertex-ai"
      ],
      "size": 2740,
      "default_branch": "streamlit"
    }
  },
  {
    "repo": "AI-Maker-Space/AIMS-CrewAI-Demo",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "readme.md",
        "main.py",
        "poetry.lock",
        "pyproject.toml",
        "stock_analysis_agents.py",
        "stock_analysis_tasks.py"
      ],
      "dirs": [
        "tools"
      ]
    },
    "search_info": {
      "repo": "AI-Maker-Space/AIMS-CrewAI-Demo",
      "stars": 14,
      "language": "Python",
      "description": "A demonstration of CrewAI put together by AI Makerspace!",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/AI-Maker-Space/AIMS-CrewAI-Demo",
      "topics": [],
      "size": 159,
      "default_branch": "main"
    }
  },
  {
    "repo": "Dasudian/curvetime",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "contributing.md",
        "dockerfile",
        "license",
        "readme.md",
        "manage.py",
        "nginx-default",
        "requirements.txt",
        "supervisor-app.conf",
        "uwsgi.ini"
      ],
      "dirs": [
        "app",
        "curvetime",
        "data",
        "deploy",
        "logs"
      ]
    },
    "search_info": {
      "repo": "Dasudian/curvetime",
      "stars": 14,
      "language": "Python",
      "description": "A blockchain that organically orchestrates Proof of Work (PoW) and AI Training computations together",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/Dasudian/curvetime",
      "topics": [],
      "size": 28997,
      "default_branch": "main"
    }
  },
  {
    "repo": "sarthakkimtani/mcp-image-gen",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".python-version",
        "license",
        "readme.md",
        "pyproject.toml",
        "uv.lock"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "sarthakkimtani/mcp-image-gen",
      "stars": 14,
      "language": "Python",
      "description": "MCP server enabling Image Generation for LLMs, built in Python and integrated with Together AI.",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/sarthakkimtani/mcp-image-gen",
      "topics": [
        "ai",
        "claude-ai",
        "llms",
        "mcp",
        "python"
      ],
      "size": 16,
      "default_branch": "main"
    }
  },
  {
    "repo": "Concept-Bytes/JarvisV3",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "Concept-Bytes/JarvisV3",
      "stars": 14,
      "language": "Python",
      "description": "JarvisV3 is a Streamlit-powered AI assistant inspired by Iron Man\u2019s Jarvis. It offers both text and realtime audio interactions using OpenAI\u2019s API, wi",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/Concept-Bytes/JarvisV3",
      "topics": [],
      "size": 1099,
      "default_branch": "main"
    }
  },
  {
    "repo": "Slaymish/ArticulateAI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Slaymish/ArticulateAI",
      "stars": 14,
      "language": "Python",
      "description": "Listen, transcribe, reply - Voice Assistant using OpenAI & ElevenLabs API's",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/Slaymish/ArticulateAI",
      "topics": [
        "elevenlabs",
        "gpt-3",
        "gpt-4",
        "openai",
        "whisper-ai"
      ],
      "size": 51,
      "default_branch": "main"
    }
  },
  {
    "repo": "Melanee-Melanee/Speech-Recognition-Chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "assistanttt.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Melanee-Melanee/Speech-Recognition-Chatbot",
      "stars": 14,
      "language": "Python",
      "description": "A voice chat assistant which allows you to speak with your machine",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/Melanee-Melanee/Speech-Recognition-Chatbot",
      "topics": [
        "ai",
        "artificial-intelligence",
        "chatbot",
        "iot",
        "nlp",
        "openai",
        "speech-recognition"
      ],
      "size": 16,
      "default_branch": "main"
    }
  },
  {
    "repo": "spark-engine-opensource-projects/fullstack-nextjs-app-generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "jsconfig.json",
        "next.config.mjs",
        "package-lock.json",
        "package.json",
        "postcss.config.mjs",
        "spark.config.json"
      ],
      "dirs": [
        "components",
        "pages",
        "public",
        "utils"
      ]
    },
    "search_info": {
      "repo": "spark-engine-opensource-projects/fullstack-nextjs-app-generator",
      "stars": 14,
      "language": "JavaScript",
      "description": "Fullstack Next.js Application Builder that uses a Spark Engine AI multi-agent system project for generation, Supabase and Vercel for deployment",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/spark-engine-opensource-projects/fullstack-nextjs-app-generator",
      "topics": [
        "ai",
        "artificial-intelligence",
        "generative-ai",
        "generator",
        "groq",
        "javascript",
        "multi-agent",
        "multi-agent-systems",
        "nextjs",
        "ngrok",
        "openai",
        "spark-engine",
        "supabase",
        "tailwind",
        "vercel",
        "web-app",
        "web-app-generator"
      ],
      "size": 731,
      "default_branch": "main"
    }
  },
  {
    "repo": "ckaiser258/ai-powered-travel-app",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".envrc",
        ".eslintrc.json",
        ".gitignore",
        ".nvmrc",
        "readme.md",
        "codegen.ts",
        "next.config.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "components",
        "db",
        "graphql",
        "lib",
        "pages",
        "prisma",
        "public",
        "styles"
      ]
    },
    "search_info": {
      "repo": "ckaiser258/ai-powered-travel-app",
      "stars": 14,
      "language": "TypeScript",
      "description": "An AI powered travel and language learning application that allows users to translate any language into any other language they'd like, ask any travel",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/ckaiser258/ai-powered-travel-app",
      "topics": [
        "ai",
        "graphql",
        "javascript",
        "nextjs",
        "nodejs",
        "openai",
        "openai-api",
        "prisma",
        "react",
        "typescript"
      ],
      "size": 475,
      "default_branch": "master"
    }
  },
  {
    "repo": "vwz/SPE",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme",
        "readme~"
      ],
      "dirs": [
        "dataset preparation-spe",
        "model-spe",
        "model-autoencoder"
      ]
    },
    "search_info": {
      "repo": "vwz/SPE",
      "stars": 13,
      "language": "Python",
      "description": "Subgraph-augmented Path Embedding for Semantic User Search on Heterogeneous Social Network",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/vwz/SPE",
      "topics": [],
      "size": 30,
      "default_branch": "master"
    }
  },
  {
    "repo": "boatbomber/Roblox-Docs-AI-Search",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "aftman.toml",
        "default.project.json",
        "package.json",
        "selene.toml",
        "sourcemap.json",
        "wally.toml"
      ],
      "dirs": [
        ".github",
        "indexer",
        "src"
      ]
    },
    "search_info": {
      "repo": "boatbomber/Roblox-Docs-AI-Search",
      "stars": 13,
      "language": "Python",
      "description": "AI vector embeddings of Roblox informational documents for semantic search",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/boatbomber/Roblox-Docs-AI-Search",
      "topics": [],
      "size": 103,
      "default_branch": "main"
    }
  },
  {
    "repo": "arimanyus/hentaivid",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "main.py",
        "requirements.txt"
      ],
      "dirs": [
        "hentaivid-assets",
        "hentaivid"
      ]
    },
    "search_info": {
      "repo": "arimanyus/hentaivid",
      "stars": 13,
      "language": "Python",
      "description": "Culturally-compliant video storage. Embeds searchable text chunks into pixelated media for lightning-fast semantic search. Zero-database, maximum comp",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/arimanyus/hentaivid",
      "topics": [
        "embedded-ai",
        "knowledge-base",
        "knowledge-graph",
        "llm",
        "machine-learning",
        "nlp",
        "offline-first-memory",
        "opencv",
        "python",
        "retrieval-augmented-generation",
        "semantic-search",
        "video-processing"
      ],
      "size": 95,
      "default_branch": "main"
    }
  },
  {
    "repo": "younis-ali/ai-code-tester",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "younis-ali/ai-code-tester",
      "stars": 13,
      "language": "Python",
      "description": "This project provides an AI-driven test case generator using FastAPI. The application accepts a GitHub repository name and generates test cases for th",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/younis-ali/ai-code-tester",
      "topics": [],
      "size": 8,
      "default_branch": "master"
    }
  },
  {
    "repo": "DFKI-NLP/LLMCheckup",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".pre-commit-config.yaml",
        "dockerfile",
        "readme.md",
        "flask_app.py",
        "global_config.gin",
        "requirements.txt",
        "timeout.py"
      ],
      "dirs": [
        "actions",
        "cache",
        "configs",
        "data",
        "experiments",
        "logic",
        "parsing",
        "prompts",
        "static",
        "templates"
      ]
    },
    "search_info": {
      "repo": "DFKI-NLP/LLMCheckup",
      "stars": 13,
      "language": "Python",
      "description": "Code for the NAACL 2024 HCI+NLP Workshop paper \"LLMCheckup: Conversational Examination of Large Language Models via Interpretability Tools and Self-ex",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/DFKI-NLP/LLMCheckup",
      "topics": [
        "chatbot",
        "conversational-ai",
        "dialogue",
        "explainability",
        "explainable-ai",
        "interface",
        "interpretability",
        "language-models",
        "llms",
        "nlp",
        "xai"
      ],
      "size": 11261,
      "default_branch": "main"
    }
  },
  {
    "repo": "srtab/daiv",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".coveragerc",
        ".daiv.yml",
        ".editorconfig",
        ".gitignore",
        ".gitlab-ci.yml",
        ".pre-commit-config.yaml",
        ".python-version",
        "changelog.md",
        "contributing.md",
        "license"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "daiv",
        "data",
        "docker",
        "docs",
        "notebooks",
        "tests"
      ]
    },
    "search_info": {
      "repo": "srtab/daiv",
      "stars": 13,
      "language": "Python",
      "description": "AI agents to automate development implementations seamlessly on your git platform",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/srtab/daiv",
      "topics": [
        "ai-agent",
        "anthropic",
        "django",
        "genai",
        "gitlab",
        "google-gemini-ai",
        "langchain",
        "langgraph",
        "llm",
        "openai",
        "openrouter"
      ],
      "size": 3448,
      "default_branch": "main"
    }
  },
  {
    "repo": "VasilyShcherbinin/Text-OCR",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "vs00162_report.pdf",
        "vs00162_src.zip"
      ],
      "dirs": [
        "vs00162_src"
      ]
    },
    "search_info": {
      "repo": "VasilyShcherbinin/Text-OCR",
      "stars": 13,
      "language": "Python",
      "description": "Python project to recognise printed pages, handwritten notes and signatures using AI. Comes all together to build a writer identification system.",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/VasilyShcherbinin/Text-OCR",
      "topics": [
        "ocr",
        "ocr-recognition",
        "ocr-text-reader",
        "python",
        "text-reader",
        "text-recognition"
      ],
      "size": 18957,
      "default_branch": "master"
    }
  },
  {
    "repo": "tjaensch/streamlit_openai_chat_with_docs",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "tjaensch/streamlit_openai_chat_with_docs",
      "stars": 13,
      "language": "Python",
      "description": "Streamlit OpenAI app to chat with custom text documents of all kinds",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/tjaensch/streamlit_openai_chat_with_docs",
      "topics": [
        "chatgpt",
        "chroma",
        "gpt-4o-mini",
        "langchain",
        "llms",
        "openai",
        "streamlit"
      ],
      "size": 277,
      "default_branch": "main"
    }
  },
  {
    "repo": "bbence84/pi_gptbot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "bbence84/pi_gptbot",
      "stars": 13,
      "language": "Python",
      "description": "A simple Python based implementation of a Raspberry Pi based, OpenAI ChatGPT enabled voice assistant",
      "search_query": "voice assistant openai language:python stars:>3",
      "search_description": "Voice assistant applications",
      "url": "https://github.com/bbence84/pi_gptbot",
      "topics": [
        "azure-cognitive-services",
        "chatgpt",
        "nicegui",
        "openai",
        "python",
        "raspberrypi",
        "tts"
      ],
      "size": 4126,
      "default_branch": "main"
    }
  },
  {
    "repo": "Azure-Samples/copilot-openai-todo",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".editorconfig",
        ".gitignore",
        "code_of_conduct.md",
        "license",
        "readme.md",
        "security.md",
        "support.md",
        "api.http",
        "azure.yaml",
        "package-lock.json"
      ],
      "dirs": [
        ".devcontainer",
        "infra",
        "packages"
      ]
    },
    "search_info": {
      "repo": "Azure-Samples/copilot-openai-todo",
      "stars": 13,
      "language": "Bicep",
      "description": "Discover how to use GitHub Copilot to quickly build a Node.js application with OpenAI and Azure",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/Azure-Samples/copilot-openai-todo",
      "topics": [
        "angular",
        "azure",
        "copilot",
        "cosmosdb",
        "express",
        "generative-ai",
        "javascript",
        "nodejs",
        "openai",
        "todolist",
        "typechat",
        "typescript"
      ],
      "size": 1359,
      "default_branch": "main"
    }
  },
  {
    "repo": "sameer-j/react-askbot-express-chatgpt",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "askbot-backend",
        "askbot-web"
      ]
    },
    "search_info": {
      "repo": "sameer-j/react-askbot-express-chatgpt",
      "stars": 13,
      "language": "TypeScript",
      "description": "Askbot example using express server and chatgpt",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/sameer-j/react-askbot-express-chatgpt",
      "topics": [
        "askbot",
        "chatgpt",
        "expressjs",
        "nodejs",
        "openai",
        "react",
        "react-native",
        "reactjs"
      ],
      "size": 131,
      "default_branch": "main"
    }
  },
  {
    "repo": "wallotapp/wallot.app",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".editorconfig",
        ".eslintignore",
        ".eslintrc.json",
        ".gitattributes",
        ".gitignore",
        ".prettierignore",
        ".prettierrc.json",
        "dockerfile",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        ".husky",
        ".vscode",
        "functions",
        "packages",
        "scripts",
        "sites"
      ]
    },
    "search_info": {
      "repo": "wallotapp/wallot.app",
      "stars": 13,
      "language": "TypeScript",
      "description": "Stock trading for absolutely everyone",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/wallotapp/wallot.app",
      "topics": [
        "ai",
        "alpaca",
        "alpha-vantage",
        "chatgpt",
        "crypto",
        "express",
        "fintech",
        "firebase",
        "machine-learning",
        "nextjs",
        "nodejs",
        "npm",
        "openai",
        "react",
        "stocks",
        "stripe",
        "typescript",
        "wallot"
      ],
      "size": 8664,
      "default_branch": "staging"
    }
  },
  {
    "repo": "AndreaSottana/pdf2emb_nlp",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 5,
        "framework_files": 2,
        "llm_usage": 0
      },
      "files": [
        ".envrc",
        ".gitignore",
        "license",
        "manifest.in",
        "makefile",
        "readme.md",
        "requirements.txt",
        "setup.py",
        "test_environment.py"
      ],
      "dirs": [
        ".github",
        "config",
        "data",
        "models",
        "pdf2emb_nlp",
        "scripts",
        "tests"
      ]
    },
    "search_info": {
      "repo": "AndreaSottana/pdf2emb_nlp",
      "stars": 12,
      "language": "Python",
      "description": "NLP tool for scraping text from a corpus of PDF files, embedding the sentences in the text and finding semantically similar sentences to a given searc",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/AndreaSottana/pdf2emb_nlp",
      "topics": [],
      "size": 283,
      "default_branch": "master"
    }
  },
  {
    "repo": "Legorobotdude/PrivateCode",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".coverage",
        ".gitignore",
        "license",
        "readme.md",
        "benchmark.py",
        "code_assistant.py",
        "requirements.txt"
      ],
      "dirs": [
        "examples",
        "tests"
      ]
    },
    "search_info": {
      "repo": "Legorobotdude/PrivateCode",
      "stars": 12,
      "language": "Python",
      "description": "VibeCoder: A Local LLM powered coding assistant",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/Legorobotdude/PrivateCode",
      "topics": [
        "ai",
        "coding",
        "llm"
      ],
      "size": 662,
      "default_branch": "master"
    }
  },
  {
    "repo": "nmandic78/AI-VoiceAssistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "nmandic78/AI-VoiceAssistant",
      "stars": 12,
      "language": "Python",
      "description": "A Python-based voice assistant integrating speech-to-text (STT), text-to-speech (TTS), and powerful AI capabilities using either a local LLM via llama",
      "search_query": "code assistant llm language:python stars:>3",
      "search_description": "Code assistant applications",
      "url": "https://github.com/nmandic78/AI-VoiceAssistant",
      "topics": [],
      "size": 164,
      "default_branch": "main"
    }
  },
  {
    "repo": "koyamacoder/chatbot-Django-react-openai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "koyamacoder/chatbot-Django-react-openai",
      "stars": 12,
      "language": "Python",
      "description": "",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/koyamacoder/chatbot-Django-react-openai",
      "topics": [],
      "size": 182,
      "default_branch": "main"
    }
  },
  {
    "repo": "mctrinh/mcp-chatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "dockerfile",
        "readme.md",
        "pyproject.toml",
        "research_server.py",
        "server_config.json",
        "uv.lock"
      ],
      "dirs": [
        "mcp_chatbot",
        "tests"
      ]
    },
    "search_info": {
      "repo": "mctrinh/mcp-chatbot",
      "stars": 12,
      "language": "Python",
      "description": "MCP Chatbot powered by Anthropic Claude. Delivering on\u2010demand literature search and summarisation for academics and engineers",
      "search_query": "claude chatbot language:python stars:>3",
      "search_description": "Chatbot apps using Claude",
      "url": "https://github.com/mctrinh/mcp-chatbot",
      "topics": [
        "ai-chatbot",
        "anthropic-claude",
        "chatbot",
        "mcp",
        "mcp-chatbot",
        "model-context-protocol",
        "model-context-protocol-client",
        "model-context-protocol-server"
      ],
      "size": 51,
      "default_branch": "main"
    }
  },
  {
    "repo": "Adarshagupta/Trybookai",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Adarshagupta/Trybookai",
      "stars": 12,
      "language": "Python",
      "description": "Explore the Possibilities of AI Book Writing with BookAI. Unleash the power of AI to create captivating books in minutes. Download, Distribute whereve",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/Adarshagupta/Trybookai",
      "topics": [
        "artificial-intelligence",
        "book",
        "machine-learning"
      ],
      "size": 18141,
      "default_branch": "main"
    }
  },
  {
    "repo": "tyleroneil72/react-chat-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "readme.md",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "tyleroneil72/react-chat-bot",
      "stars": 12,
      "language": "JavaScript",
      "description": "Customizable Chat bot built with React.js, Node.js and Express.js, integrated with OpenAI's API to provide natural language processing capabilities. T",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/tyleroneil72/react-chat-bot",
      "topics": [
        "chatbot",
        "expressjs",
        "gpt-4",
        "natural-language-processing",
        "nodejs",
        "openai",
        "openai-api",
        "reactjs"
      ],
      "size": 96,
      "default_branch": "main"
    }
  },
  {
    "repo": "pmutua/CodeCraftGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "pmutua/CodeCraftGPT",
      "stars": 12,
      "language": "Python",
      "description": "A web app with a suite of AI-driven tools for intelligent code refactoring, style checking, test case generation, and cross-language translation, buil",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/pmutua/CodeCraftGPT",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "generative-ai",
        "langchain",
        "openai",
        "openai-api",
        "prompt-engineering",
        "python",
        "python-project",
        "python3",
        "streamlit",
        "streamlit-application",
        "streamlit-option-menu",
        "streamlit-web",
        "streamlit-webapp"
      ],
      "size": 2360,
      "default_branch": "master"
    }
  },
  {
    "repo": "inboxpraveen/context-search-engine",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "app.py",
        "create_index.py",
        "faiss_index.idx",
        "index_to_chunk.pkl",
        "requirements.txt",
        "search_engine.py"
      ],
      "dirs": [
        "docs",
        "static",
        "templates"
      ]
    },
    "search_info": {
      "repo": "inboxpraveen/context-search-engine",
      "stars": 11,
      "language": "Python",
      "description": "A simple interface where users can search for contextually relevant text passages in documents. It employs DistilBERT model for semantic embeddings an",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/inboxpraveen/context-search-engine",
      "topics": [
        "bert",
        "bert-embeddings",
        "context-aware",
        "context-embeddings",
        "huggingface",
        "huggingface-transformers",
        "language-model",
        "machine-learning",
        "natural-language-processing",
        "nlp",
        "search-engine",
        "search-engine-optimization",
        "vector",
        "vector-database",
        "vectors"
      ],
      "size": 9722,
      "default_branch": "main"
    }
  },
  {
    "repo": "mario-guerra/azure-openai-doc-summarizer",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        "license.md",
        "readme.md",
        "summarizer.py"
      ],
      "dirs": [
        ".github"
      ]
    },
    "search_info": {
      "repo": "mario-guerra/azure-openai-doc-summarizer",
      "stars": 11,
      "language": "Python",
      "description": "Summarize documents and chat scripts using Azure OpenAI models",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/mario-guerra/azure-openai-doc-summarizer",
      "topics": [],
      "size": 75,
      "default_branch": "main"
    }
  },
  {
    "repo": "thekamik/email-automation-with-gpt-ai-and-python",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "email_bot.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "thekamik/email-automation-with-gpt-ai-and-python",
      "stars": 11,
      "language": "Python",
      "description": "An example of using the OpenAI API in python to automate email responses",
      "search_query": "email automation openai language:python stars:>3",
      "search_description": "Email automation applications",
      "url": "https://github.com/thekamik/email-automation-with-gpt-ai-and-python",
      "topics": [
        "ai-bot",
        "email-automation",
        "email-bot",
        "email-response",
        "email-sender",
        "openai-api",
        "python",
        "python-bot"
      ],
      "size": 14,
      "default_branch": "main"
    }
  },
  {
    "repo": "MaxMLang/RAG-nificent",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "MaxMLang/RAG-nificent",
      "stars": 11,
      "language": "Python",
      "description": "Production-ready Chainlit RAG application with Pinecone pipeline offering all Groq and OpenAI Models, to chat with your documents.",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/MaxMLang/RAG-nificent",
      "topics": [
        "chainlit",
        "chatgpt",
        "gemma",
        "groq",
        "groqapi",
        "langchain",
        "llama3",
        "llama3-rag",
        "mistral-7b",
        "mistralai",
        "pinecone",
        "rag",
        "rag-implementation",
        "rag-pipeline",
        "vector-database"
      ],
      "size": 37165,
      "default_branch": "master"
    }
  },
  {
    "repo": "blakewenzel/gpt-summarizer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "blakewenzel/gpt-summarizer",
      "stars": 11,
      "language": "Python",
      "description": "A Python script that utilizes OpenAI's GPT-3.5-turbo model to process and summarize long-form text files.",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/blakewenzel/gpt-summarizer",
      "topics": [
        "gpt-3-5-turbo",
        "mit-license",
        "python",
        "summarizer"
      ],
      "size": 40,
      "default_branch": "main"
    }
  },
  {
    "repo": "kelvinthh/Image-Generation-Next.js",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".gitignore",
        "readme.md",
        "middleware.ts",
        "next.config.js",
        "package-lock.json",
        "package.json",
        "postcss.config.js",
        "tailwind.config.js",
        "tsconfig.json"
      ],
      "dirs": [
        ".vscode",
        "app",
        "azure",
        "components",
        "lib",
        "public",
        "states",
        "styles"
      ]
    },
    "search_info": {
      "repo": "kelvinthh/Image-Generation-Next.js",
      "stars": 11,
      "language": "TypeScript",
      "description": "AI Image Generator with Next.js, Powered by OpenAI & Azure",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/kelvinthh/Image-Generation-Next.js",
      "topics": [
        "azure",
        "chatgpt",
        "dall-e",
        "javascript",
        "nextjs",
        "openai",
        "react",
        "serverless",
        "tailwindcss",
        "typescript",
        "vercel"
      ],
      "size": 282,
      "default_branch": "main"
    }
  },
  {
    "repo": "doemser/next-openai-integration",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.local.example",
        ".eslintrc.json",
        ".gitignore",
        "readme.md",
        "jsconfig.json",
        "next.config.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "public",
        "src"
      ]
    },
    "search_info": {
      "repo": "doemser/next-openai-integration",
      "stars": 11,
      "language": "JavaScript",
      "description": "OpenAI API Starter - Real-time chatbot with OpenAI.",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/doemser/next-openai-integration",
      "topics": [
        "javascript",
        "next",
        "nextjs",
        "openai-api",
        "react",
        "starter-project"
      ],
      "size": 210,
      "default_branch": "main"
    }
  },
  {
    "repo": "llegomark/betterreadings",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.cjs",
        ".example.env",
        ".gitattributes",
        ".gitignore",
        "license",
        "readme.md",
        "middleware.ts",
        "next.config.mjs",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        ".github",
        "components",
        "pages",
        "public",
        "styles"
      ]
    },
    "search_info": {
      "repo": "llegomark/betterreadings",
      "stars": 11,
      "language": "TypeScript",
      "description": "Improve your child's reading skills with personalized reading passages. Our website offers a wide range of topics and reading levels, making reading b",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/llegomark/betterreadings",
      "topics": [
        "ai",
        "artificial-intelligence",
        "javascript",
        "machine-learning",
        "machine-learning-algorithms",
        "nextjs",
        "nodejs",
        "openai",
        "react",
        "reactjs",
        "typescript"
      ],
      "size": 1785,
      "default_branch": "master"
    }
  },
  {
    "repo": "sanidhyy/companion-ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 4,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".eslintrc.json",
        ".gitignore",
        ".npmrc",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "security.md",
        "components.json"
      ],
      "dirs": [
        ".github",
        "app",
        "components",
        "config",
        "hooks",
        "lib",
        "prisma",
        "public",
        "schema",
        "scripts"
      ]
    },
    "search_info": {
      "repo": "sanidhyy/companion-ai",
      "stars": 11,
      "language": "TypeScript",
      "description": "Crafting AI companions for authentic and engaging conversations.",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/sanidhyy/companion-ai",
      "topics": [
        "ai",
        "artificial-intelligence",
        "chatbot",
        "chatgpt",
        "companion",
        "jarvis",
        "jarvis-ai",
        "javascript",
        "js",
        "next",
        "nextjs",
        "openai",
        "react",
        "reactjs",
        "tailwind",
        "tailwindcss",
        "ts",
        "typescript"
      ],
      "size": 2054,
      "default_branch": "main"
    }
  },
  {
    "repo": "JawherKl/ai-faq-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "index.html",
        "package-lock.json",
        "package.json",
        "script.js",
        "server.js",
        "style.css"
      ],
      "dirs": [
        "images",
        "src",
        "test"
      ]
    },
    "search_info": {
      "repo": "JawherKl/ai-faq-bot",
      "stars": 11,
      "language": "JavaScript",
      "description": "AI-powered FAQ Bot is a backend solution built with NodeJS (Express) that integrates with OpenAI to provide AI-generated answers to user queries.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/JawherKl/ai-faq-bot",
      "topics": [
        "artificial-intelligence",
        "chatbot",
        "llm",
        "openai",
        "openrouter"
      ],
      "size": 684,
      "default_branch": "main"
    }
  },
  {
    "repo": "BelkacemYerfa/Copilot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "BelkacemYerfa/Copilot",
      "stars": 11,
      "language": "TypeScript",
      "description": "This is a full stack web app using the MERN stack with typescript , to code an ai voice assistant with the OpenAI api ",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/BelkacemYerfa/Copilot",
      "topics": [
        "express",
        "gpt-3-5-turbo",
        "mongo",
        "mongodb",
        "nodejs",
        "nodemailer",
        "openai-api",
        "react-query",
        "reactjs",
        "tailwindcss",
        "typescript",
        "zod"
      ],
      "size": 573,
      "default_branch": "master"
    }
  },
  {
    "repo": "AmirMotefaker/ChatGPT-Web-Application",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "chatgpt_web_application.py",
        "chatgpt_web_application_colab.ipynb",
        "chatgpt_web_application_using_gradio_colab.ipynb",
        "chatgpt_web_application_using_streamlit_colab.ipynb",
        "readme.md",
        "chatgpt-web-application-kaggle.ipynb",
        "chatgpt-web-application-using-gradio.ipynb"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "AmirMotefaker/ChatGPT-Web-Application",
      "stars": 11,
      "language": "Jupyter Notebook",
      "description": "Create Your ChatGPT Web App with Streamlit and Gradio in Python",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/AmirMotefaker/ChatGPT-Web-Application",
      "topics": [
        "ai",
        "artificial-intelligence",
        "chatgpt",
        "chatgpt-api",
        "chatgpt3",
        "jupyter-notebook",
        "openai",
        "openai-api",
        "python"
      ],
      "size": 234,
      "default_branch": "main"
    }
  },
  {
    "repo": "sudoleg/YouTubeGPT",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "sudoleg/YouTubeGPT",
      "stars": 11,
      "language": "Jupyter Notebook",
      "description": "YouTubeGPT is an LLM-based web-app that can be run locally and allows you to summarize and chat (Q&A) with YouTube videos.",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/sudoleg/YouTubeGPT",
      "topics": [
        "chat",
        "chatgpt",
        "chromadb",
        "langchain",
        "llm",
        "llms",
        "openai",
        "python",
        "questions-and-answers",
        "rag",
        "summarizer",
        "youtube"
      ],
      "size": 980,
      "default_branch": "main"
    }
  },
  {
    "repo": "nikhil-shuklaa/QnAi-Ask2PDFs",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "nikhil-shuklaa/QnAi-Ask2PDFs",
      "stars": 10,
      "language": "Python",
      "description": "The QnAi Chat App is a Python application designed for conversing with multiple PDF documents. Using natural language, you can ask questions about the",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/nikhil-shuklaa/QnAi-Ask2PDFs",
      "topics": [
        "llm",
        "nlp-machine-learning",
        "openai",
        "python",
        "qnai-ask2pdfs"
      ],
      "size": 787,
      "default_branch": "main"
    }
  },
  {
    "repo": "lesteroliver911/openai-swam-simple-rag",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "lesteroliver911/openai-swam-simple-rag",
      "stars": 10,
      "language": "Python",
      "description": "This repository demonstrates a simple OpenAI Swarm-based system for multi-agent orchestration with Retrieval-Augmented Generation (RAG). It handles ta",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/lesteroliver911/openai-swam-simple-rag",
      "topics": [],
      "size": 21,
      "default_branch": "main"
    }
  },
  {
    "repo": "subhan97ahmed/customer-care-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "subhan97ahmed/customer-care-bot",
      "stars": 10,
      "language": "Python",
      "description": "The Customer Care Bot is a cutting-edge customer support solution designed to revolutionize the way e-commerce websites interact with and assist their",
      "search_query": "customer support chatbot openai language:python stars:>3",
      "search_description": "Customer support chatbot apps",
      "url": "https://github.com/subhan97ahmed/customer-care-bot",
      "topics": [
        "bot",
        "chatbot",
        "chatgpt-api",
        "langchain",
        "python"
      ],
      "size": 127,
      "default_branch": "main"
    }
  },
  {
    "repo": "pratikjadhav2726/Unified-MCP-Tool-Graph",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "mcp_server_status.md",
        "readme.md",
        "image.png",
        "mcp_server_manager.py",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "data",
        "dynamic_tool_retriever_mcp",
        "example_agents",
        "ingestion_pipeline",
        "utils",
        "gradio_demo"
      ]
    },
    "search_info": {
      "repo": "pratikjadhav2726/Unified-MCP-Tool-Graph",
      "stars": 10,
      "language": "Python",
      "description": "Instead of dumping 1000+ tools into a model\u2019s prompt and expecting it to choose wisely, the Unified MCP Tool Graph equips your LLM with structure, cla",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/pratikjadhav2726/Unified-MCP-Tool-Graph",
      "topics": [
        "a2a-mcp",
        "a2a-protocol",
        "agentic-ai",
        "ai",
        "automation",
        "llm",
        "mcp-server"
      ],
      "size": 15867,
      "default_branch": "main"
    }
  },
  {
    "repo": "akashtalole/ai-document-review",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".prettierignore",
        ".prettierrc.json",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "readme.md",
        "security.md",
        "taskfile.yml"
      ],
      "dirs": [
        ".devcontainer",
        ".github",
        ".task",
        ".vscode",
        "app",
        "common",
        "docs",
        "eval",
        "flows",
        "infra"
      ]
    },
    "search_info": {
      "repo": "akashtalole/ai-document-review",
      "stars": 10,
      "language": null,
      "description": "A Solution Accelerator bringing together the latest AI agentic patterns and Azure services to automate the first line of review for documents across a",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/akashtalole/ai-document-review",
      "topics": [],
      "size": 3467,
      "default_branch": "main"
    }
  },
  {
    "repo": "JoelKong/PersonalAgents",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "JoelKong/PersonalAgents",
      "stars": 10,
      "language": "Python",
      "description": "A team of AI agents that work together to assist the user to achieve his/her needs | Email management | Calendar management | Web exploration",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/JoelKong/PersonalAgents",
      "topics": [],
      "size": 909,
      "default_branch": "main"
    }
  },
  {
    "repo": "Lesterpaintstheworld/your-character-lives",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Lesterpaintstheworld/your-character-lives",
      "stars": 10,
      "language": "Python",
      "description": "An intelligent assistant system featuring two complementary AI personalities - Emily (Creative Intelligence) and Daemon (Technical Implementation) - w",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/Lesterpaintstheworld/your-character-lives",
      "topics": [
        "agents",
        "ai",
        "swarm"
      ],
      "size": 102481,
      "default_branch": "main"
    }
  },
  {
    "repo": "MindPal-Space/docubot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "app",
        "docker"
      ]
    },
    "search_info": {
      "repo": "MindPal-Space/docubot",
      "stars": 10,
      "language": "Python",
      "description": "Chat with any document ",
      "search_query": "document chat openai language:python stars:>3",
      "search_description": "Document chat applications",
      "url": "https://github.com/MindPal-Space/docubot",
      "topics": [
        "chatbot",
        "cohere",
        "openai",
        "pinecone",
        "vector-database"
      ],
      "size": 18,
      "default_branch": "main"
    }
  },
  {
    "repo": "agniiva/YoutubeGPTClaude",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "agniiva/YoutubeGPTClaude",
      "stars": 10,
      "language": "Python",
      "description": "This project is a Streamlit application that automatically summarizes YouTube videos by converting their audio to text and then generating a summary, ",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/agniiva/YoutubeGPTClaude",
      "topics": [
        "claude2",
        "openai",
        "whisper",
        "youtube"
      ],
      "size": 18,
      "default_branch": "main"
    }
  },
  {
    "repo": "r1z-dev-git/R1Z",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.cjs",
        ".gitattributes",
        ".gitignore",
        ".npmrc",
        ".prettierignore",
        ".prettierrc",
        ".vale.ini",
        "contributing.md",
        "dev.md",
        "license"
      ],
      "dirs": [
        ".changeset",
        ".github",
        ".vscode",
        "packages",
        "scripts",
        "spec",
        "supabase",
        "templates"
      ]
    },
    "search_info": {
      "repo": "r1z-dev-git/R1Z",
      "stars": 10,
      "language": "TypeScript",
      "description": "Secure open cloud for AI apps and agents",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/r1z-dev-git/R1Z",
      "topics": [
        "agent",
        "ai",
        "ai-agent",
        "ai-agents",
        "code-interpreter",
        "copilot",
        "development",
        "devtools",
        "gpt",
        "gpt-4",
        "javascript",
        "llm",
        "nextjs",
        "openai",
        "python",
        "react",
        "software",
        "typescript"
      ],
      "size": 417,
      "default_branch": "main"
    }
  },
  {
    "repo": "ger86/openai-chat-gpt-bot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "ger86/openai-chat-gpt-bot",
      "stars": 10,
      "language": "TypeScript",
      "description": "\"Bot Conversacional con OpenAI Chat GPT: Crea chatbots inteligentes usando NodeJS, Express y NextJS en este completo tutorial paso a paso.\"",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/ger86/openai-chat-gpt-bot",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "chatgpt-bot",
        "express",
        "nextjs",
        "nextjs13",
        "nodejs",
        "openai"
      ],
      "size": 83,
      "default_branch": "master"
    }
  },
  {
    "repo": "derwiki/ebook-search",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 1,
    "search_info": {
      "repo": "derwiki/ebook-search",
      "stars": 9,
      "language": "Python",
      "description": "Using OpenAI embeddings, create a semantic search engine for an ebook.",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/derwiki/ebook-search",
      "topics": [],
      "size": 21,
      "default_branch": "main"
    }
  },
  {
    "repo": "abhinavthomas/semantic-similarity",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "procfile",
        "readme.md",
        "manifest.yml",
        "requirements.txt"
      ],
      "dirs": [
        "app"
      ]
    },
    "search_info": {
      "repo": "abhinavthomas/semantic-similarity",
      "stars": 9,
      "language": "Python",
      "description": "Semantic similarity search using approximate nearest neighbour for text using Cosine Similarity and Sentence Embeddings.",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/abhinavthomas/semantic-similarity",
      "topics": [],
      "size": 36,
      "default_branch": "master"
    }
  },
  {
    "repo": "Syed007Hassan/Document-Querying-With-VectorDB",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "solidprinciples.pdf",
        "__init__.py",
        "app.py",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "Syed007Hassan/Document-Querying-With-VectorDB",
      "stars": 9,
      "language": "Python",
      "description": "Document Querying with LLMs\u200a-\u200aGoogle PaLM\u00a0API: Semantic Search With LLM Embeddings",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/Syed007Hassan/Document-Querying-With-VectorDB",
      "topics": [
        "chroma",
        "document-retrieval",
        "embeddings",
        "palm-api",
        "pdf-encoding",
        "vectordb"
      ],
      "size": 404,
      "default_branch": "main"
    }
  },
  {
    "repo": "rorilla/VectorMD",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "setup.py"
      ],
      "dirs": [
        "vectormd"
      ]
    },
    "search_info": {
      "repo": "rorilla/VectorMD",
      "stars": 9,
      "language": "Python",
      "description": "`VectorMD` transforms markdown files into a semantically searchable database, leveraging vector embeddings to efficiently retrieve relevant code snipp",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/rorilla/VectorMD",
      "topics": [],
      "size": 10,
      "default_branch": "main"
    }
  },
  {
    "repo": "ChuxiJ/claude2openai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "pyproject.toml",
        "setup.cfg",
        "setup.py"
      ],
      "dirs": [
        "claude2openai"
      ]
    },
    "search_info": {
      "repo": "ChuxiJ/claude2openai",
      "stars": 9,
      "language": "Python",
      "description": "convert slack bot claude api into openai api",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/ChuxiJ/claude2openai",
      "topics": [],
      "size": 11,
      "default_branch": "main"
    }
  },
  {
    "repo": "Ricardo0429/ChatGPT-PDF-Django-Backend",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 2
      },
      "files": [
        "app.py",
        "config.json",
        "package-lock.json",
        "pdfindex.py",
        "requirements"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Ricardo0429/ChatGPT-PDF-Django-Backend",
      "stars": 9,
      "language": "Python",
      "description": "Backend for Chat with PDF using OpenAI ChatGPT and Hugging Face Lang Chain",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/Ricardo0429/ChatGPT-PDF-Django-Backend",
      "topics": [
        "chatgpt",
        "langchain",
        "openai",
        "openai-gym"
      ],
      "size": 2,
      "default_branch": "master"
    }
  },
  {
    "repo": "1337hero/faster-next-chat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".prettierignore",
        ".prettierrc",
        "readme.md",
        "bun.lockb",
        "chat.code-workspace",
        "eslint.config.mjs",
        "license",
        "next.config.ts",
        "package.json"
      ],
      "dirs": [
        "public",
        "src"
      ]
    },
    "search_info": {
      "repo": "1337hero/faster-next-chat",
      "stars": 9,
      "language": "TypeScript",
      "description": "A NextJS \"Local First\" AI Interface",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/1337hero/faster-next-chat",
      "topics": [
        "ai",
        "anthropic",
        "javascript",
        "llm-inference",
        "llm-ui",
        "next",
        "nextjs",
        "openai",
        "openai-api",
        "react",
        "reactjs",
        "self-hosted",
        "tailwind",
        "tailwindcss",
        "typescript",
        "vercel",
        "vercel-ai-sdk"
      ],
      "size": 736,
      "default_branch": "main"
    }
  },
  {
    "repo": "kiranvshah/chatgpt-proxy-server",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        ".prettierignore",
        ".prettierrc.yaml",
        "license",
        "readme.md",
        "package.json",
        "pnpm-lock.yaml",
        "tsconfig.json"
      ],
      "dirs": [
        ".github",
        ".vscode",
        "src"
      ]
    },
    "search_info": {
      "repo": "kiranvshah/chatgpt-proxy-server",
      "stars": 9,
      "language": "TypeScript",
      "description": "Enables you to query ChatGPT with a POST request.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/kiranvshah/chatgpt-proxy-server",
      "topics": [
        "ai",
        "chatgpt",
        "express",
        "nodejs",
        "openai"
      ],
      "size": 56,
      "default_branch": "main"
    }
  },
  {
    "repo": "mattoattacko/OpenAI_image_generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "mattoattacko/OpenAI_image_generator",
      "stars": 9,
      "language": "JavaScript",
      "description": "Utilize the power of OpenAI's Dall-E platform to generate everything from memes and art to beautiful UI/UX designs!",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/mattoattacko/OpenAI_image_generator",
      "topics": [
        "dall-e",
        "express",
        "mongodb",
        "nodejs",
        "openai",
        "react",
        "tailwindcss",
        "vite"
      ],
      "size": 142,
      "default_branch": "main"
    }
  },
  {
    "repo": "adv555/gptchat-clone",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "adv555/gptchat-clone",
      "stars": 9,
      "language": "JavaScript",
      "description": "ChatGPT Clone",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/adv555/gptchat-clone",
      "topics": [
        "auth0",
        "express",
        "gptchat",
        "nodejs",
        "openai",
        "reactjs",
        "tailwindcss"
      ],
      "size": 1245,
      "default_branch": "main"
    }
  },
  {
    "repo": "LakshayD02/FullStack_SaaS_ChatBot_CipherGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        "chat interface.png",
        "ciphergpt homer.png",
        "login.png",
        "readme.md",
        "signup.png"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "LakshayD02/FullStack_SaaS_ChatBot_CipherGPT",
      "stars": 9,
      "language": "TypeScript",
      "description": "CipherGPT is an advanced SAAS chatbot AI meticulously crafted using the MERN (MongoDB, Express.js, React.js, Node.js) stack coupled with TypeScript an",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/LakshayD02/FullStack_SaaS_ChatBot_CipherGPT",
      "topics": [
        "authentication",
        "chatbot",
        "chatgpt",
        "chatgpt-api",
        "express-js",
        "express-middleware",
        "html",
        "jwt-authentication",
        "jwt-token",
        "mern-stack",
        "mongodb",
        "mongoose",
        "nodejs",
        "openai",
        "openai-api",
        "reactjs",
        "saas",
        "tailwindcss",
        "typescript"
      ],
      "size": 27049,
      "default_branch": "main"
    }
  },
  {
    "repo": "DFMERA/OpenAI_Medical_Assistant",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "azure_funtions_openai",
        "blazor_qna_openai",
        "img"
      ]
    },
    "search_info": {
      "repo": "DFMERA/OpenAI_Medical_Assistant",
      "stars": 9,
      "language": "HTML",
      "description": "Enhancing Patient Care with OpenAI: A Blazor and Azure Speech AI Medical Assistant Web App",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/DFMERA/OpenAI_Medical_Assistant",
      "topics": [
        "ai",
        "azure",
        "azure-functions",
        "azure-speech",
        "blazor",
        "chatgpt",
        "machine-learning",
        "medical-assistant",
        "openai",
        "python"
      ],
      "size": 6369,
      "default_branch": "main"
    }
  },
  {
    "repo": "timf34/Article2Audio",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license"
      ],
      "dirs": [
        "client",
        "server"
      ]
    },
    "search_info": {
      "repo": "timf34/Article2Audio",
      "stars": 9,
      "language": "Go",
      "description": "Convert articles to audio using OpenAI's Text to Speech API via a python script or web app",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/timf34/Article2Audio",
      "topics": [
        "fastapi",
        "newspaper",
        "openai",
        "python",
        "scraping",
        "text-to-speech"
      ],
      "size": 12490,
      "default_branch": "main"
    }
  },
  {
    "repo": "muratali016/Document-ChatGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "muratali016/Document-ChatGPT",
      "stars": 8,
      "language": "Python",
      "description": "Document based ChatGPT",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/muratali016/Document-ChatGPT",
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "chatgpt3",
        "machine-learning",
        "naturallanguageprocessing",
        "nlp",
        "nlp-machine-learning",
        "openai",
        "pdf",
        "python",
        "textsummarization",
        "tkinter"
      ],
      "size": 23,
      "default_branch": "main"
    }
  },
  {
    "repo": "IvanCampos/openai-text-embedding",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "lambda_function.py",
        "words.csv"
      ],
      "dirs": [
        "lambda_layers"
      ]
    },
    "search_info": {
      "repo": "IvanCampos/openai-text-embedding",
      "stars": 8,
      "language": "Python",
      "description": "Uncover hidden connections and find the most semantically similar text to your search term with just a CSV file, OpenAI's text embedding model, and AW",
      "search_query": "semantic search embeddings language:python stars:>3",
      "search_description": "Semantic search applications",
      "url": "https://github.com/IvanCampos/openai-text-embedding",
      "topics": [
        "aws-lambda",
        "embeddings",
        "numpy",
        "openai",
        "openai-api",
        "pandas",
        "python"
      ],
      "size": 30799,
      "default_branch": "main"
    }
  },
  {
    "repo": "adithyaiyer1999/text2knowledgeGraph",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        "license.md",
        "readme.md",
        "search_example.png",
        "example.jpeg",
        "example2.png",
        "final.py",
        "random1.html",
        "random_output.html"
      ],
      "dirs": [
        ".idea",
        "text2json_django",
        "text2graph_react"
      ]
    },
    "search_info": {
      "repo": "adithyaiyer1999/text2knowledgeGraph",
      "stars": 8,
      "language": "Python",
      "description": "Convert any pdf/text/website/youtube video into a graph, and chat with it.",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/adithyaiyer1999/text2knowledgeGraph",
      "topics": [
        "django",
        "gpt4",
        "javascript",
        "large-language-models",
        "openai",
        "reactjs"
      ],
      "size": 2694,
      "default_branch": "master"
    }
  },
  {
    "repo": "natehouk/flow-ai-hackathon-2023",
    "suitable": false,
    "reason": "TOO_FEW_ACTUAL_ISSUES",
    "search_info": {
      "repo": "natehouk/flow-ai-hackathon-2023",
      "stars": 8,
      "language": "Python",
      "description": "YASS.ai - Team Orange's entry to the Flow AI Hackathon 2023",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/natehouk/flow-ai-hackathon-2023",
      "topics": [
        "ai",
        "chatgpt",
        "chatgpt-api",
        "django",
        "gpt-3-5-turbo",
        "gpt-4",
        "marketaux-api",
        "newsapi",
        "openai",
        "openai-api",
        "python3",
        "whisper",
        "whisper-ai",
        "whisper-api"
      ],
      "size": 132729,
      "default_branch": "master"
    }
  },
  {
    "repo": "RAHB-REALTORS-Association/email-autodrafts",
    "suitable": false,
    "reason": "NO_ISSUES_ENABLED",
    "search_info": {
      "repo": "RAHB-REALTORS-Association/email-autodrafts",
      "stars": 8,
      "language": "Python",
      "description": "Email Auto-ReplAI is a Python tool that uses AI to automate drafting responses to unread Gmail messages, streamlining email management tasks.",
      "search_query": "email automation openai language:python stars:>3",
      "search_description": "Email automation applications",
      "url": "https://github.com/RAHB-REALTORS-Association/email-autodrafts",
      "topics": [
        "ai",
        "automation",
        "docker",
        "email",
        "email-draft",
        "gmail",
        "gmail-api",
        "llama",
        "llama-cpp",
        "local-ai",
        "openai",
        "openai-api",
        "python"
      ],
      "size": 36,
      "default_branch": "master"
    }
  },
  {
    "repo": "iamarunbrahma/youtube-ai-assistant",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "iamarunbrahma/youtube-ai-assistant",
      "stars": 8,
      "language": "Python",
      "description": "AI Assistant to get summarized text from Youtube video and also get instant answers to your queries related to video",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/iamarunbrahma/youtube-ai-assistant",
      "topics": [
        "chatbot",
        "gradio",
        "langchain",
        "openai",
        "summarization",
        "youtube"
      ],
      "size": 10,
      "default_branch": "main"
    }
  },
  {
    "repo": "marcelo-earth/summer",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "license",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "src"
      ]
    },
    "search_info": {
      "repo": "marcelo-earth/summer",
      "stars": 8,
      "language": "Python",
      "description": "\ud83e\udde0\ud83d\udcd8 OpenAI script that summarizes complex text with GPT-3",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/marcelo-earth/summer",
      "topics": [
        "gpt-3",
        "gpt-3-prompt",
        "natural-language-processing",
        "openai",
        "summarizer"
      ],
      "size": 6059,
      "default_branch": "main"
    }
  },
  {
    "repo": "loglux/FlexAudioPrint",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "loglux/FlexAudioPrint",
      "stars": 8,
      "language": "Python",
      "description": "FlexAudioPrint is a Python-based app for transcribing audio to text using OpenAI's Whisper model. It offers a Gradio web interface and a script for pr",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/loglux/FlexAudioPrint",
      "topics": [
        "ai",
        "artificial-intelligence",
        "audio-processing",
        "gradio",
        "openai-whisper",
        "transcribe",
        "transcribe-audio-files"
      ],
      "size": 171,
      "default_branch": "master"
    }
  },
  {
    "repo": "petermartens98/OpenAI-Dalle2-Image-Generation-Streamlit-Web-App",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "petermartens98/OpenAI-Dalle2-Image-Generation-Streamlit-Web-App",
      "stars": 8,
      "language": "Python",
      "description": "Python Streamlit web app utilizing the OpenAI API to communicate with the Dalle2 image generation model, based on user input. ",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/petermartens98/OpenAI-Dalle2-Image-Generation-Streamlit-Web-App",
      "topics": [
        "dalle2",
        "imagegeneration",
        "openai",
        "python",
        "streamlit"
      ],
      "size": 7,
      "default_branch": "main"
    }
  },
  {
    "repo": "dguisadom/GPTranslator",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "changelog.md",
        "gptranslator.py",
        "license",
        "readme.md",
        "config.json",
        "context.txt",
        "example.json",
        "example_de.json"
      ],
      "dirs": [
        ".vscode",
        "images"
      ]
    },
    "stats": {
      "total_issues_checked": 4,
      "llm_related_issues": 4,
      "llm_percentage": 100.0,
      "issues_with_labels": 0,
      "label_percentage": 0.0,
      "avg_labels_per_issue": 0.0,
      "total_repo_labels": 9,
      "repo_stars": 8,
      "repo_language": "Python",
      "repo_description": "Python script to translate JSON values using GPT model. Very usefull to translate apps or webs that ",
      "created_at": "2023-05-11T06:47:05Z",
      "updated_at": "2024-10-10T14:00:17Z"
    },
    "search_info": {
      "repo": "dguisadom/GPTranslator",
      "stars": 8,
      "language": "Python",
      "description": "Python script to translate JSON values using GPT model. Very usefull to translate apps or webs that has a JSON file with the literals",
      "search_query": "openai web app python stars:>3",
      "search_description": "Python web applications using OpenAI",
      "url": "https://github.com/dguisadom/GPTranslator",
      "topics": [
        "chatgpt-api",
        "gpt",
        "openai",
        "python3",
        "translator"
      ],
      "size": 492,
      "default_branch": "main"
    }
  },
  {
    "repo": "Dharamveer9457/AI-Project",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "Dharamveer9457/AI-Project",
      "stars": 8,
      "language": "CSS",
      "description": "This travel chatbot is a cutting-edge digital assistant designed to enhance the travel experience for users. This virtual companion is equipped with t",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/Dharamveer9457/AI-Project",
      "topics": [
        "css3",
        "embeddings",
        "flask",
        "gpt-3",
        "html5",
        "javascript",
        "langchain",
        "openai",
        "openai-api",
        "pinecone",
        "python"
      ],
      "size": 636,
      "default_branch": "main"
    }
  },
  {
    "repo": "ravenobsidian/ChatClaude",
    "suitable": true,
    "reason": "GOOD_LLM_APP",
    "content_analysis": {
      "is_app": true,
      "scores": {
        "app_files": 2,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 1
      },
      "files": [
        ".gitignore",
        "readme.md",
        "main.py",
        "requirement.txt"
      ],
      "dirs": []
    },
    "stats": {
      "total_issues_checked": 2,
      "llm_related_issues": 2,
      "llm_percentage": 100.0,
      "issues_with_labels": 2,
      "label_percentage": 100.0,
      "avg_labels_per_issue": 1.0,
      "total_repo_labels": 9,
      "repo_stars": 7,
      "repo_language": "Python",
      "repo_description": "A slack bot that interfaces Claude with OpenAI-like chat completion API",
      "created_at": "2023-05-28T06:53:10Z",
      "updated_at": "2024-11-01T11:20:47Z"
    },
    "search_info": {
      "repo": "ravenobsidian/ChatClaude",
      "stars": 7,
      "language": "Python",
      "description": "A slack bot that interfaces Claude with OpenAI-like chat completion API",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/ravenobsidian/ChatClaude",
      "topics": [],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "tsmith4014/Django-OpenAI-ImageCreation-Chat-Application",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "tsmith4014/Django-OpenAI-ImageCreation-Chat-Application",
      "stars": 7,
      "language": "Python",
      "description": "Django-based application designed to interact with OpenAI's GPT models for generating text and images.  Provides an interface to send user prompts to ",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/tsmith4014/Django-OpenAI-ImageCreation-Chat-Application",
      "topics": [
        "django",
        "django-framework",
        "gpt-2",
        "gpt-3",
        "gpt-4",
        "html-css-javascript",
        "python3",
        "requests"
      ],
      "size": 7753,
      "default_branch": "master"
    }
  },
  {
    "repo": "MITSUHIRO-KURIKI/DjangoOpenAIStreamingChat",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "deploygcp.bat",
        "license",
        "projectsetupbat.bat",
        "readme.md",
        "runceleryworker.bat",
        "runredisserver.bat",
        "runserver.bat",
        "app.yaml",
        "app_worker.yaml",
        "cloudbuild.yaml"
      ],
      "dirs": [
        "accounts",
        "apps",
        "common",
        "config",
        "static",
        "templates",
        "templatetags"
      ]
    },
    "search_info": {
      "repo": "MITSUHIRO-KURIKI/DjangoOpenAIStreamingChat",
      "stars": 7,
      "language": "Python",
      "description": "Conversations are streamed from the Django channel (WebSockets) using the OpenAI API(GPT) and processed asynchronously in the background using Celery.",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/MITSUHIRO-KURIKI/DjangoOpenAIStreamingChat",
      "topics": [
        "boostrap",
        "bootstrap5",
        "chatgpt",
        "django",
        "django-application",
        "django-channels",
        "javascript",
        "markdown",
        "openai-api",
        "openai-api-chatbot",
        "openai-chatgpt",
        "python",
        "sanitizer",
        "social-login",
        "syntax-highlighting",
        "websocket"
      ],
      "size": 31849,
      "default_branch": "main"
    }
  },
  {
    "repo": "AtharvPorate1/teachmeanything",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".readme.md",
        "license",
        "db.sqlite3",
        "manage.py"
      ],
      "dirs": [
        "sensei",
        "static",
        "teachmeanything",
        "templates",
        "users"
      ]
    },
    "search_info": {
      "repo": "AtharvPorate1/teachmeanything",
      "stars": 7,
      "language": "Python",
      "description": "AI based Learning Platform",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/AtharvPorate1/teachmeanything",
      "topics": [
        "chatbot",
        "chatgpt",
        "django",
        "django-application",
        "django-project",
        "html-css-javascript",
        "openai",
        "openai-api",
        "sqlite"
      ],
      "size": 307,
      "default_branch": "main"
    }
  },
  {
    "repo": "Sam120204/Fin4All",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Sam120204/Fin4All",
      "stars": 7,
      "language": "Python",
      "description": "Fin4All is an all-in-one investment assistant that democratizes access to real-time stock analysis, sentiment-driven insights, and personalized invest",
      "search_query": "openai django language:python stars:>3",
      "search_description": "Django apps using OpenAI",
      "url": "https://github.com/Sam120204/Fin4All",
      "topics": [
        "agents",
        "django",
        "docker",
        "embeddings",
        "fingpt",
        "finhub",
        "fintech",
        "fintech-app",
        "google-cloud",
        "langchain",
        "llm",
        "matplotlib",
        "mongodb",
        "numpy",
        "openai",
        "stock",
        "stock-market",
        "streamlit",
        "vader-sentiment-analysis",
        "yahoo-finance"
      ],
      "size": 2257,
      "default_branch": "main"
    }
  },
  {
    "repo": "whosblue/terra",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "terra.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "whosblue/terra",
      "stars": 7,
      "language": "Python",
      "description": "Terra is a Discord AI chatbot implementation featuring the Claude 3 family of AI models. You will need to provide your own Discord application API key",
      "search_query": "ANTHROPIC_API_KEY language:python stars:>3",
      "search_description": "Apps with Claude API usage",
      "url": "https://github.com/whosblue/terra",
      "topics": [],
      "size": 108,
      "default_branch": "main"
    }
  },
  {
    "repo": "pandeyankit83/Deep_Learning_Recommender_System",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "autorec.py",
        "autorecalgorithm.py",
        "autorecbakeoff.py",
        "evaluatedalgorithm.py",
        "evaluationdata.py",
        "evaluator.py",
        "movielens.py",
        "rbm.py",
        "rbmalgorithm.py",
        "rbmbakeoff.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "pandeyankit83/Deep_Learning_Recommender_System",
      "stars": 7,
      "language": "Python",
      "description": "You can train a neural network with user ratings or purchases, and use it to make recommendations; deep learning can be very good at recognizing patte",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/pandeyankit83/Deep_Learning_Recommender_System",
      "topics": [],
      "size": 39,
      "default_branch": "master"
    }
  },
  {
    "repo": "theshajha/whisper-realtime-speech-to-text-summary",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "theshajha/whisper-realtime-speech-to-text-summary",
      "stars": 7,
      "language": "Python",
      "description": "Transcribe real-world speech with an API call. Based on Whisper(ASR by OpenAI) - https://openai.com/blog/whisper/",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/theshajha/whisper-realtime-speech-to-text-summary",
      "topics": [
        "ai",
        "diarization",
        "speech-recognition",
        "speech-to-text",
        "summarization"
      ],
      "size": 11926,
      "default_branch": "main"
    }
  },
  {
    "repo": "deep-div/Lecture-Summarize",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "deep-div/Lecture-Summarize",
      "stars": 7,
      "language": "Python",
      "description": "LectureSummarizer is an AI-powered website that transcribes and summarizes lectures. It uses OpenAI Whisper for accurate speech-to-text and Llama 2 fo",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/deep-div/Lecture-Summarize",
      "topics": [
        "audio-processing",
        "audio-text",
        "gemini",
        "gradio",
        "llama2",
        "torch",
        "whisper"
      ],
      "size": 183,
      "default_branch": "main"
    }
  },
  {
    "repo": "cloudycotton/browser-operator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "code_of_conduct.md",
        "license",
        "readme.md",
        "package-lock.json",
        "package.json",
        "tsconfig.json"
      ],
      "dirs": [
        "bin",
        "examples",
        "src"
      ]
    },
    "search_info": {
      "repo": "cloudycotton/browser-operator",
      "stars": 7,
      "language": "TypeScript",
      "description": "Build your own AI operators like OpenAI",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/cloudycotton/browser-operator",
      "topics": [
        "ai",
        "anthropic",
        "browser",
        "browser-agent",
        "computer-use",
        "javascript",
        "nextjs",
        "nodejs",
        "open-operator",
        "openai",
        "playwright",
        "typescript"
      ],
      "size": 34,
      "default_branch": "main"
    }
  },
  {
    "repo": "krisograbek/ai-voice-minimal",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "krisograbek/ai-voice-minimal",
      "stars": 7,
      "language": "JavaScript",
      "description": "The AI Voice Assistant to transcript your voice into text, send that text to GPT-3.5 and synthesize the response into audio",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/krisograbek/ai-voice-minimal",
      "topics": [
        "flask",
        "gpt-3",
        "javascript",
        "large-language-models",
        "openai-api",
        "python",
        "reactjs",
        "speech-to-text",
        "text-to-speech",
        "websocket"
      ],
      "size": 204,
      "default_branch": "main"
    }
  },
  {
    "repo": "GonzoTheDev/MyTherapyPal",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".firebaserc",
        ".flutter-plugins-dependencies 2",
        ".gitignore",
        ".metadata",
        "readme.md",
        "analysis_options.yaml",
        "chatcbtq.yml",
        "devtools_options.yaml",
        "firebase.json",
        "pubspec.lock"
      ],
      "dirs": [
        ".github",
        "android",
        "assets",
        "chatcbt",
        "coverage",
        "functions",
        "ios",
        "lib",
        "linux",
        "macos"
      ]
    },
    "search_info": {
      "repo": "GonzoTheDev/MyTherapyPal",
      "stars": 7,
      "language": "Dart",
      "description": "This is the main repository for the final MyTherapyPal application. It consists of a flutter mobile & web user interface application with account regi",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/GonzoTheDev/MyTherapyPal",
      "topics": [],
      "size": 2972,
      "default_branch": "main"
    }
  },
  {
    "repo": "AnshKathpal/Documentor-pdfChatbot",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "AnshKathpal/Documentor-pdfChatbot",
      "stars": 6,
      "language": "Python",
      "description": "DocuMentor is a sophisticated chatbot application designed to assist users in extracting valuable information from uploaded PDF documents. Users can u",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/AnshKathpal/Documentor-pdfChatbot",
      "topics": [
        "chatgpt",
        "chromadb",
        "embeddings",
        "flask",
        "langchain",
        "openai",
        "python",
        "reactjs",
        "vectorsearch"
      ],
      "size": 233549,
      "default_branch": "main"
    }
  },
  {
    "repo": "BrunoTanabe/chatpdf-ai-powered-document-interaction",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "BrunoTanabe/chatpdf-ai-powered-document-interaction",
      "stars": 6,
      "language": "Python",
      "description": "ChatPDF leverages Retrieval Augmented Generation (RAG) to let users chat with their PDF documents using natural language. Simply upload a PDF, and int",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/BrunoTanabe/chatpdf-ai-powered-document-interaction",
      "topics": [
        "chat-bot",
        "chat-with-your-data",
        "chatbot",
        "faiss",
        "faiss-vector-database",
        "groq",
        "groq-api",
        "huggingface",
        "huggingface-embeddings",
        "langchain",
        "langchain-python",
        "langsmith",
        "large-language-model",
        "llm",
        "openai",
        "openai-api",
        "python",
        "rag",
        "retrieval-augmented-generation",
        "retrieval-chatbot"
      ],
      "size": 1654,
      "default_branch": "main"
    }
  },
  {
    "repo": "CANOLIO/QA-Chatbot-PDF",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "codigo.bat",
        "readme.md",
        "requirements.txt"
      ],
      "dirs": [
        "src"
      ]
    },
    "search_info": {
      "repo": "CANOLIO/QA-Chatbot-PDF",
      "stars": 6,
      "language": "Python",
      "description": "Python app for QA based on PDF context. ",
      "search_query": "pdf qa chatbot language:python stars:>3",
      "search_description": "PDF Q&A chatbot applications",
      "url": "https://github.com/CANOLIO/QA-Chatbot-PDF",
      "topics": [
        "gpt-3",
        "pdf"
      ],
      "size": 33,
      "default_branch": "main"
    }
  },
  {
    "repo": "alexbobes/chatgpt-slack-bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "alexbobes/chatgpt-slack-bot",
      "stars": 6,
      "language": "Python",
      "description": "AI-Powered Slack Bot: A Python application integrating Slack with OpenAI's GPT-3 or GPT-4 model to create an interactive, AI-powered bot capable of un",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/alexbobes/chatgpt-slack-bot",
      "topics": [
        "python"
      ],
      "size": 4,
      "default_branch": "main"
    }
  },
  {
    "repo": "heathhenley/ChatGPTBot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "heathhenley/ChatGPTBot",
      "stars": 6,
      "language": "Python",
      "description": "High level AI chatbot module, wraps OpenAI GPT Chat API. Examples are given for Slack, Google Chat, and FastAPI",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/heathhenley/ChatGPTBot",
      "topics": [
        "bot",
        "chatbot",
        "chatgpt",
        "openai",
        "openai-api",
        "python",
        "rag"
      ],
      "size": 77,
      "default_branch": "main"
    }
  },
  {
    "repo": "hasaranga/AutoCode",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "hasaranga/AutoCode",
      "stars": 6,
      "language": "Python",
      "description": "OpenAI based desktop tool generator",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/hasaranga/AutoCode",
      "topics": [],
      "size": 26,
      "default_branch": "main"
    }
  },
  {
    "repo": "Zakk-Yang/meta-prompt-generator",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Zakk-Yang/meta-prompt-generator",
      "stars": 6,
      "language": "Python",
      "description": "One line of code for your meta prompting based on the latest OpenAI meta prompting strategy",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/Zakk-Yang/meta-prompt-generator",
      "topics": [
        "ai",
        "llm",
        "llms",
        "openai",
        "openai-api",
        "prompt",
        "prompt-engineering"
      ],
      "size": 32,
      "default_branch": "main"
    }
  },
  {
    "repo": "PayasPandey11/gitwise",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 2,
        "framework_files": 3,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        ".gitignore",
        "changelog.md",
        "code_of_conduct.md",
        "contributing.md",
        "license",
        "manifest.in",
        "makefile",
        "readme.md",
        "another_test_file.md"
      ],
      "dirs": [
        ".cursor",
        ".github",
        "docs",
        "gitwise",
        "test_dir",
        "tests"
      ]
    },
    "search_info": {
      "repo": "PayasPandey11/gitwise",
      "stars": 6,
      "language": "Python",
      "description": " GitWise is a command-line tool designed for experienced developers to enhance their Git workflow with intelligent AI assistance. It focuses on speed,",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/PayasPandey11/gitwise",
      "topics": [
        "ai",
        "automation",
        "git",
        "llm",
        "open-source",
        "python3"
      ],
      "size": 739,
      "default_branch": "main"
    }
  },
  {
    "repo": "HeyNina101/aimin",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md"
      ],
      "dirs": [
        "agent-ollama-basic",
        "rag-ollama-basic"
      ]
    },
    "search_info": {
      "repo": "HeyNina101/aimin",
      "stars": 6,
      "language": "Python",
      "description": "Real AI use cases focused on backend automation, agent-based workflows, RAG pipelines, and system-level integrations using Python, Make, n8n, and loca",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/HeyNina101/aimin",
      "topics": [],
      "size": 42,
      "default_branch": "main"
    }
  },
  {
    "repo": "PolybitRockzz/calendar-automation",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "app.py",
        "concept-picture.jpg",
        "data.json"
      ],
      "dirs": [
        "api",
        "training"
      ]
    },
    "search_info": {
      "repo": "PolybitRockzz/calendar-automation",
      "stars": 6,
      "language": "Python",
      "description": "A prototype Python script for automating the process of scheduling a calendar based on existing events, goals, and todo tasks. Currently using OpenAI'",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/PolybitRockzz/calendar-automation",
      "topics": [
        "automation",
        "calendar",
        "gpt-35-turbo",
        "openai",
        "python3"
      ],
      "size": 1337,
      "default_branch": "main"
    }
  },
  {
    "repo": "LoL123413/Voice-GPT.me",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "readme.md",
        "google3b370e74f6039d2a.html",
        "package-lock.json",
        "package.json",
        "privacy.html"
      ],
      "dirs": [
        ".github",
        ".well-known",
        ".wellknown",
        "pages",
        "public"
      ]
    },
    "search_info": {
      "repo": "LoL123413/Voice-GPT.me",
      "stars": 6,
      "language": "JavaScript",
      "description": "An OpenAI chatbot you can interact with using your voice",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/LoL123413/Voice-GPT.me",
      "topics": [
        "ai",
        "chatbot",
        "chatgpt",
        "javascript",
        "js",
        "next",
        "nextjs",
        "nodejs",
        "openai",
        "react",
        "react-native",
        "reactjs",
        "web",
        "webapp",
        "website"
      ],
      "size": 193,
      "default_branch": "main"
    }
  },
  {
    "repo": "cbmongithub/cbm_2023",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".eslintrc.json",
        ".gitignore",
        ".prettierrc.json",
        "license",
        "readme.md",
        "next.config.js",
        "package-lock.json",
        "package.json",
        "postcss.config.js",
        "tailwind.config.js"
      ],
      "dirs": [
        "components",
        "constants",
        "helpers",
        "lib",
        "pages",
        "posts",
        "public",
        "styles"
      ]
    },
    "search_info": {
      "repo": "cbmongithub/cbm_2023",
      "stars": 6,
      "language": "JavaScript",
      "description": "My 2023 website",
      "search_query": "openai nextjs javascript stars:>5",
      "search_description": "Next.js apps using OpenAI",
      "url": "https://github.com/cbmongithub/cbm_2023",
      "topics": [
        "emailjs",
        "framer-motion",
        "giphy-api",
        "github-api",
        "javascript",
        "mongodb",
        "nextjs",
        "openai",
        "rate-limiting",
        "reactjs",
        "redis",
        "tailwindcss",
        "tsparticles"
      ],
      "size": 17861,
      "default_branch": "main"
    }
  },
  {
    "repo": "Saransh1650/OpenAi-Project",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env",
        ".gitignore",
        "readme.md",
        "app.js",
        "package-lock.json",
        "package.json"
      ],
      "dirs": [
        "config",
        "controllers",
        "node_modules",
        "public"
      ]
    },
    "search_info": {
      "repo": "Saransh1650/OpenAi-Project",
      "stars": 6,
      "language": "JavaScript",
      "description": "The YouTube Meta Data Generator is a web application that uses OpenAI's powerful language model to automatically generate captivating meta description",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/Saransh1650/OpenAi-Project",
      "topics": [
        "ai",
        "express",
        "html",
        "nodejs",
        "openai",
        "web",
        "yt"
      ],
      "size": 872,
      "default_branch": "main"
    }
  },
  {
    "repo": "Anonymous961/openAI-2.0",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "code_of_conduct.md",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "backend",
        "client"
      ]
    },
    "search_info": {
      "repo": "Anonymous961/openAI-2.0",
      "stars": 6,
      "language": "JavaScript",
      "description": "OpenAI 2.0 empowers developers with ChatGPT and DALL\u00b7E, cutting-edge AI models for natural language processing and image generation. Seamlessly integr",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/Anonymous961/openAI-2.0",
      "topics": [
        "express",
        "mongodb",
        "nodejs",
        "openai",
        "reactjs",
        "rest-api",
        "vite"
      ],
      "size": 219,
      "default_branch": "main"
    }
  },
  {
    "repo": "ShafferMichael/EnhancedGPT",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "package-lock.json",
        "package.json",
        "server.js"
      ],
      "dirs": [
        "client"
      ]
    },
    "search_info": {
      "repo": "ShafferMichael/EnhancedGPT",
      "stars": 6,
      "language": "JavaScript",
      "description": "OpenAI Text Chatbot",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/ShafferMichael/EnhancedGPT",
      "topics": [
        "artificial-intelligence",
        "body-parser",
        "chatgpt",
        "cors",
        "express",
        "nodejs",
        "openai",
        "react"
      ],
      "size": 1082,
      "default_branch": "main"
    }
  },
  {
    "repo": "ChrisMunozCodes/PixelVisionize",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "lens-readme.txt",
        "package-lock.json",
        "package.json",
        "server.js"
      ],
      "dirs": [
        "controllers",
        "public",
        "routes"
      ]
    },
    "search_info": {
      "repo": "ChrisMunozCodes/PixelVisionize",
      "stars": 6,
      "language": "CSS",
      "description": "AI image generator application using DALL\u00b7E generation technology.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/ChrisMunozCodes/PixelVisionize",
      "topics": [
        "cloudinary",
        "css",
        "express",
        "html",
        "javascript",
        "mongodb",
        "nodejs",
        "openai"
      ],
      "size": 44457,
      "default_branch": "main"
    }
  },
  {
    "repo": "AnshKathpal/Story-Generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md"
      ],
      "dirs": [
        "backend",
        "frontend"
      ]
    },
    "search_info": {
      "repo": "AnshKathpal/Story-Generator",
      "stars": 6,
      "language": "JavaScript",
      "description": "StoryGenerator is an innovative application that allows users to generate brief stories on any topic by providing a keyword or prompt.",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/AnshKathpal/Story-Generator",
      "topics": [
        "chakra-ui",
        "chatgpt",
        "express",
        "mongodb",
        "nodejs",
        "openai",
        "openai-api",
        "reactjs"
      ],
      "size": 401,
      "default_branch": "main"
    }
  },
  {
    "repo": "ranmalmendis/python_flask_whatsapp_bot_with_open_ai_assistant_apis",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "ranmalmendis/python_flask_whatsapp_bot_with_open_ai_assistant_apis",
      "stars": 6,
      "language": "Python",
      "description": "This repository contains the source code for an AI-powered WhatsApp bot developed using Python and Flask. Leveraging the Meta (formerly Facebook) Clou",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/ranmalmendis/python_flask_whatsapp_bot_with_open_ai_assistant_apis",
      "topics": [],
      "size": 832,
      "default_branch": "main"
    }
  },
  {
    "repo": "danfmaia/CodeQuery-API",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 3,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".agentignore",
        ".gitignore",
        ".pylintrc",
        "dockerfile",
        "license",
        "makefile",
        "readme.md",
        "entrypoint.sh",
        "privacy.md",
        "template.env"
      ],
      "dirs": [
        ".vscode",
        "assets",
        "core",
        "docs",
        "gateway"
      ]
    },
    "search_info": {
      "repo": "danfmaia/CodeQuery-API",
      "stars": 6,
      "language": "Python",
      "description": "CodeQuery API is a Python/Flask tool designed to serve code-focused AI assistants with the real-time status of a codebase, by allowing seamless queryi",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/danfmaia/CodeQuery-API",
      "topics": [
        "ai-integration",
        "api-for-developers",
        "automation-tools",
        "code-analysis",
        "code-inspection",
        "codebase-query",
        "custom-ai-agents",
        "custom-gpt",
        "developer-support-tools",
        "developer-tools",
        "file-retrieval-api",
        "file-structure-query",
        "flask-api",
        "ngrok",
        "openapi",
        "project-structure",
        "python",
        "python-flask"
      ],
      "size": 28777,
      "default_branch": "main"
    }
  },
  {
    "repo": "rachit901109/Summarize-PDF-to-Keypoints-with-ChatGPT",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "rachit901109/Summarize-PDF-to-Keypoints-with-ChatGPT",
      "stars": 5,
      "language": "Python",
      "description": "PDF Summarization with ChatGPT-3.5! This repository contains a Python script that uses the power of ChatGPT, a large language model trained by OpenAI,",
      "search_query": "document chat pdf openai language:python stars:>3",
      "search_description": "PDF document chat applications",
      "url": "https://github.com/rachit901109/Summarize-PDF-to-Keypoints-with-ChatGPT",
      "topics": [],
      "size": 12611,
      "default_branch": "master"
    }
  },
  {
    "repo": "alsaif1431/AI-Legal-Document-Summarizer",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "alsaif1431/AI-Legal-Document-Summarizer",
      "stars": 5,
      "language": "Python",
      "description": "The Legal-Doc-Summarizer repository is a Streamlit-based application that leverages OpenAI's API to process legal documents and generate concise summa",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/alsaif1431/AI-Legal-Document-Summarizer",
      "topics": [],
      "size": 68,
      "default_branch": "master"
    }
  },
  {
    "repo": "akshatsingh523/Content-Generation-from-Unstrutured-Document",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "content_generation_for_ppt.py",
        "readme.md"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "akshatsingh523/Content-Generation-from-Unstrutured-Document",
      "stars": 5,
      "language": "Python",
      "description": "DocuSummarizeAI is an AI-driven platform that extracts and summarizes content from unstructured documents (PPT, DOC, PDF). It generates various summar",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/akshatsingh523/Content-Generation-from-Unstrutured-Document",
      "topics": [],
      "size": 9,
      "default_branch": "main"
    }
  },
  {
    "repo": "Piece-Of-Schmidt/PaperReader",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Piece-Of-Schmidt/PaperReader",
      "stars": 5,
      "language": "Python",
      "description": "A Python-based tool designed to automatically convert PDF documents into summarized audio files. Notion integration available. Reads PDF files, genera",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/Piece-Of-Schmidt/PaperReader",
      "topics": [],
      "size": 8699,
      "default_branch": "main"
    }
  },
  {
    "repo": "pyr0mind/AI-powered-PDF-agent-project",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 2,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "security.md",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "ai-pdf-agent",
        "requirements",
        "tests"
      ]
    },
    "search_info": {
      "repo": "pyr0mind/AI-powered-PDF-agent-project",
      "stars": 5,
      "language": "Python",
      "description": "AI-PDF-Agent converts PDFs into queryable data using AI. Extracts text (PyMuPDF), generates embeddings, and answers questions via LLMs (OpenAI). Modul",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/pyr0mind/AI-powered-PDF-agent-project",
      "topics": [
        "agent",
        "ai",
        "ml",
        "pyhton",
        "pytorch"
      ],
      "size": 175993,
      "default_branch": "main"
    }
  },
  {
    "repo": "BlueBash/unstructured-io-demo",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.sample",
        ".gitignore",
        "dockerfile",
        "readme.md",
        "app.py",
        "google_drive_ingest.py",
        "poetry.lock",
        "pyproject.toml"
      ],
      "dirs": [
        "data",
        "langchain_components"
      ]
    },
    "search_info": {
      "repo": "BlueBash/unstructured-io-demo",
      "stars": 5,
      "language": "Python",
      "description": "The PDF Chatbot project uses advanced NLP models and Unstructured.io for parsing complex PDFs, enabling streamlined extraction and querying of informa",
      "search_query": "information extraction openai language:python stars:>3",
      "search_description": "Information extraction applications",
      "url": "https://github.com/BlueBash/unstructured-io-demo",
      "topics": [
        "demo",
        "langchain",
        "openai",
        "poetry",
        "rag",
        "streamlit",
        "unstructured"
      ],
      "size": 11950,
      "default_branch": "main"
    }
  },
  {
    "repo": "FredrikHaugen/imessage_chatbot_openai",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "FredrikHaugen/imessage_chatbot_openai",
      "stars": 5,
      "language": "Python",
      "description": "The iMessage chatbot is a Python script that automatically responds to incoming messages on iMessage using OpenAI's chat completion model. It is highl",
      "search_query": "customer support chatbot openai language:python stars:>3",
      "search_description": "Customer support chatbot apps",
      "url": "https://github.com/FredrikHaugen/imessage_chatbot_openai",
      "topics": [],
      "size": 14,
      "default_branch": "main"
    }
  },
  {
    "repo": "patilanirudh/Slack_bot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "patilanirudh/Slack_bot",
      "stars": 5,
      "language": "Python",
      "description": "Create a conversational bot in slack using openai",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/patilanirudh/Slack_bot",
      "topics": [],
      "size": 3,
      "default_branch": "main"
    }
  },
  {
    "repo": "presidio-oss/aider-based-code-generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "contributing.md",
        "license",
        "makefile",
        "readme.md"
      ],
      "dirs": [
        ".github",
        "assets",
        "code-generator",
        "coder",
        "plugin"
      ]
    },
    "search_info": {
      "repo": "presidio-oss/aider-based-code-generator",
      "stars": 5,
      "language": "Python",
      "description": "VS Code extension that streamlines development workflows through AI-powered task execution, intelligent file management, and automated code generation",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/presidio-oss/aider-based-code-generator",
      "topics": [
        "aider",
        "code-context",
        "code-generator",
        "code-index",
        "generative-ai",
        "hai",
        "hai-build",
        "human-ai",
        "openai",
        "owasp-top-10",
        "presidio",
        "vscode-extension"
      ],
      "size": 174104,
      "default_branch": "main"
    }
  },
  {
    "repo": "Beliavsky/ChatGPT-Fortran-generator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "readme.md",
        "chat_python.py",
        "fortran.py",
        "output.txt",
        "output_xdebug_fortran.txt",
        "output_xdebug_fortran_chatgpt_4.txt",
        "output_xfortran_chat.txt",
        "util.py",
        "xdebug_fortran.py",
        "xfortran_chat.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "Beliavsky/ChatGPT-Fortran-generator",
      "stars": 5,
      "language": "Python",
      "description": "Python scripts to generate Fortran code by ChatGPT, compile it, correct errors, and run it -- broken by API changes. Try https://github.com/Beliavsky/",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/Beliavsky/ChatGPT-Fortran-generator",
      "topics": [
        "chatgpt",
        "chatgpt4",
        "chatgptapi",
        "chatgptapi-use",
        "code-generation",
        "code-generator",
        "fortran",
        "gfortran"
      ],
      "size": 53,
      "default_branch": "main"
    }
  },
  {
    "repo": "lulu-wang/Creative-Writing-AI-Webapp",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "lulu-wang/Creative-Writing-AI-Webapp",
      "stars": 5,
      "language": "Python",
      "description": "Creative writing sentence generator using user input prompts. Coded with OpenAI API, Stable Diffusion, HTML/CSS and Python (Flask) backend.",
      "search_query": "code generator openai language:python stars:>3",
      "search_description": "Code generation applications",
      "url": "https://github.com/lulu-wang/Creative-Writing-AI-Webapp",
      "topics": [],
      "size": 71,
      "default_branch": "main"
    }
  },
  {
    "repo": "William-kaihhu/LLM-Inference",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".ds_store",
        "readme.md"
      ],
      "dirs": [
        "quantization",
        "gpt2_examples",
        "imgs"
      ]
    },
    "search_info": {
      "repo": "William-kaihhu/LLM-Inference",
      "stars": 5,
      "language": "Python",
      "description": "This repository presents key techniques for optimizing inference of large language models (LLMs). The code is adapted from the Efficiently Serving LLM",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/William-kaihhu/LLM-Inference",
      "topics": [],
      "size": 376,
      "default_branch": "main"
    }
  },
  {
    "repo": "omhq/llmt",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "omhq/llmt",
      "stars": 5,
      "language": "Python",
      "description": "LLM chat helper for workflow automation",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/omhq/llmt",
      "topics": [
        "chatbot",
        "cicd",
        "data-engineering",
        "functions",
        "llm",
        "openai-api"
      ],
      "size": 87,
      "default_branch": "main"
    }
  },
  {
    "repo": "saofund/LLM-Blender-Agent",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "saofund/LLM-Blender-Agent",
      "stars": 5,
      "language": "Python",
      "description": "An AI-powered agent utilizing LLMs (e.g., Claude) with Function Calling to automate tasks in Blender. Enhances workflow efficiency by integrating inte",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/saofund/LLM-Blender-Agent",
      "topics": [
        "agents",
        "blender",
        "blender-addon"
      ],
      "size": 7671,
      "default_branch": "main"
    }
  },
  {
    "repo": "lightningorb/autocommit",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "setup.py"
      ],
      "dirs": [
        "autocommit"
      ]
    },
    "search_info": {
      "repo": "lightningorb/autocommit",
      "stars": 5,
      "language": "Python",
      "description": "This python utility automatically generates git commit messages using GPT3.5",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/lightningorb/autocommit",
      "topics": [
        "automation",
        "commit",
        "devtools",
        "git",
        "llm",
        "message",
        "openai",
        "workflow"
      ],
      "size": 2,
      "default_branch": "main"
    }
  },
  {
    "repo": "raaasin/Whispurr",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license.chromedriver",
        "readme.md",
        "bot.py",
        "chromedriver.exe",
        "gapi.py",
        "pgpt.py",
        "requirements.txt",
        "task.py",
        "test.py"
      ],
      "dirs": [
        "__pycache__"
      ]
    },
    "search_info": {
      "repo": "raaasin/Whispurr",
      "stars": 5,
      "language": "Python",
      "description": "A python based assistant that replies to your WhatsApp text on your behalf, replies like you, notes down tasks assigned by people and tells what you'r",
      "search_query": "task automation gpt language:python stars:>3",
      "search_description": "Task automation applications",
      "url": "https://github.com/raaasin/Whispurr",
      "topics": [
        "automation",
        "chatbot",
        "selenium",
        "transformers"
      ],
      "size": 8057,
      "default_branch": "main"
    }
  },
  {
    "repo": "valentimarco/Together-AI-Integration",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "valentimarco/Together-AI-Integration",
      "stars": 5,
      "language": "Python",
      "description": "A CheshireCat plugin adding Together AI service",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/valentimarco/Together-AI-Integration",
      "topics": [],
      "size": 13,
      "default_branch": "main"
    }
  },
  {
    "repo": "NitzanBarzilay/PickUsLunch",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "pickuslunch - project review (hebrew).pdf",
        "readme.md",
        "dataframeparser.py",
        "gainfunction.py",
        "geneticalgorithm.py",
        "localsearchalgorithms.py",
        "main.py",
        "naivealgorithm.py",
        "requirements.txt"
      ],
      "dirs": [
        "data",
        "example_preferences"
      ]
    },
    "search_info": {
      "repo": "NitzanBarzilay/PickUsLunch",
      "stars": 5,
      "language": "Python",
      "description": "AI assistant that helps groups of friends or co-workers find a restaurant to order from together, that best matches the group members' dining preferen",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/NitzanBarzilay/PickUsLunch",
      "topics": [
        "ai",
        "decision-making",
        "local-search-algoirthms",
        "search-space-tree"
      ],
      "size": 2651,
      "default_branch": "main"
    }
  },
  {
    "repo": "LeadingIndiaAI/TECHNICAL-SOLUTIONS-FOR-VISUALLY-IMPAIRED",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "report.docx",
        "gui.py",
        "imagetospeech.py",
        "interface.py",
        "save_audio.py",
        "st1.mp3",
        "st2.mp3",
        "st3.mp3",
        "st4.mp3",
        "st5.mp3"
      ],
      "dirs": [
        "__pycache__",
        "font",
        "model_data",
        "yolo3"
      ]
    },
    "search_info": {
      "repo": "LeadingIndiaAI/TECHNICAL-SOLUTIONS-FOR-VISUALLY-IMPAIRED",
      "stars": 5,
      "language": "Python",
      "description": "Designed for the blind and low vision community, this research project harnesses the power of AI to describe people, text and objects. This project br",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/LeadingIndiaAI/TECHNICAL-SOLUTIONS-FOR-VISUALLY-IMPAIRED",
      "topics": [],
      "size": 3385,
      "default_branch": "master"
    }
  },
  {
    "repo": "raghavan/Life-Logs",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "raghavan/Life-Logs",
      "stars": 5,
      "language": "Python",
      "description": "Host Your Own Journaling App with OpenAI RAG Summarizer - Allows you to log daily life events, thoughts, and happenings through a text box on the land",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/raghavan/Life-Logs",
      "topics": [],
      "size": 13,
      "default_branch": "main"
    }
  },
  {
    "repo": "Adarsreg/Notegpt",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md"
      ],
      "dirs": [
        "notegpt"
      ]
    },
    "search_info": {
      "repo": "Adarsreg/Notegpt",
      "stars": 5,
      "language": "TypeScript",
      "description": "Notes app made using Openai API",
      "search_query": "openai express nodejs stars:>3",
      "search_description": "Express.js apps using OpenAI",
      "url": "https://github.com/Adarsreg/Notegpt",
      "topics": [
        "express",
        "mongodb",
        "nodejs",
        "react",
        "typescript-react"
      ],
      "size": 208,
      "default_branch": "main"
    }
  },
  {
    "repo": "phoenixdev100/AI-Chatbot",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "phoenixdev100/AI-Chatbot",
      "stars": 5,
      "language": "JavaScript",
      "description": "A modern, responsive AI chatbot web application built with Flask and Together API. Experience seamless conversations with an intelligent AI assistant.",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/phoenixdev100/AI-Chatbot",
      "topics": [
        "ai",
        "chatbot",
        "python"
      ],
      "size": 245,
      "default_branch": "main"
    }
  },
  {
    "repo": "AnubhavChaturvedi-GitHub/PARAS-Ai",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md",
        "app.py",
        "brain.py",
        "p.jpg",
        "requirements.txt"
      ],
      "dirs": [
        "__pycache__",
        "chromedata",
        "static",
        "templates"
      ]
    },
    "search_info": {
      "repo": "AnubhavChaturvedi-GitHub/PARAS-Ai",
      "stars": 5,
      "language": "JavaScript",
      "description": "Empowering Minds with AI: Building a Machine Learning Assistant for Mental Health Diagnosis \ud83c\udf10\ud83e\udde0 | Leveraging #ComputationalPsychology to Identify Behav",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/AnubhavChaturvedi-GitHub/PARAS-Ai",
      "topics": [
        "ai",
        "chatbot",
        "chatbots",
        "flask",
        "flask-application",
        "ml",
        "paras",
        "paras-ai",
        "python",
        "python3"
      ],
      "size": 9785,
      "default_branch": "main"
    }
  },
  {
    "repo": "BlueBash/RAG-Raptor-RE-Ranker-demo",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".env.sample",
        ".gitignore",
        "readme.md",
        "app.py",
        "pyproject.toml"
      ],
      "dirs": [
        "data",
        "demo",
        "ingest",
        "langchain_components"
      ]
    },
    "search_info": {
      "repo": "BlueBash/RAG-Raptor-RE-Ranker-demo",
      "stars": 4,
      "language": "Python",
      "description": "The method of re-ranking involves a two-stage retrieval system, with re-rankers playing a crucial role in evaluating the relevance of each document to",
      "search_query": "document summarization openai language:python stars:>3",
      "search_description": "Document summarization applications",
      "url": "https://github.com/BlueBash/RAG-Raptor-RE-Ranker-demo",
      "topics": [
        "embeddings",
        "genrative-ai",
        "langchain",
        "openai",
        "raptor-rag",
        "reranker",
        "retrieval-augmented-generation",
        "summarization"
      ],
      "size": 4370,
      "default_branch": "main"
    }
  },
  {
    "repo": "Gyanbardhan/Gemini_Student",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Gyanbardhan/Gemini_Student",
      "stars": 4,
      "language": "Python",
      "description": "An educational app powered by Gemini, a large language model provides 5 components a chatbot for real-time Q&A,an image & text question answerer,a gen",
      "search_query": "pdf qa chatbot language:python stars:>3",
      "search_description": "PDF Q&A chatbot applications",
      "url": "https://github.com/Gyanbardhan/Gemini_Student",
      "topics": [
        "chatbot",
        "genai",
        "genai-chatbot",
        "generative-ai",
        "google-gemini",
        "google-gemini-ai",
        "huggingface-spaces",
        "langchain",
        "langchain-python",
        "pdf-chat-bot",
        "pinecone",
        "python",
        "qa",
        "streamlit",
        "vector-database"
      ],
      "size": 17101,
      "default_branch": "main"
    }
  },
  {
    "repo": "automateyournetwork/Document_KAI8",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "dockerfile",
        "license",
        "readme.md",
        "document_kai8.py",
        "nginx-config.yaml",
        "ollama-pod.yaml",
        "ollama-service.yaml",
        "requirements.txt"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "automateyournetwork/Document_KAI8",
      "stars": 4,
      "language": "Python",
      "description": "Document Buddy using Kubernetes with 8 different SLM/LLM for multi-AI analysis ",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/automateyournetwork/Document_KAI8",
      "topics": [],
      "size": 46,
      "default_branch": "main"
    }
  },
  {
    "repo": "chris17453/docu-nator",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 2,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        ".vscode-upload.json",
        "license",
        "makefile",
        "pipfile",
        "pipfile.lock",
        "readme.md",
        "conf.py",
        "patch.sh"
      ],
      "dirs": [
        ".github",
        "_patch",
        "assets",
        "docs",
        "docunator"
      ]
    },
    "search_info": {
      "repo": "chris17453/docu-nator",
      "stars": 4,
      "language": "Python",
      "description": "A  for documenting python code with AI (LLMs) with guard rails via static analysis ",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/chris17453/docu-nator",
      "topics": [],
      "size": 3084,
      "default_branch": "main"
    }
  },
  {
    "repo": "shubcodes/earnings-ai-demo",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "shubcodes/earnings-ai-demo",
      "stars": 4,
      "language": "Python",
      "description": "EarningsAI Demo is a powerful tool that combines audio transcription, document processing, and AI-powered analysis to help users extract insights from",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/shubcodes/earnings-ai-demo",
      "topics": [
        "ai",
        "ai-rag-chatbot",
        "fireworksai",
        "llm",
        "llm-inference",
        "llm-ra",
        "llm-rag-chatbot",
        "llm-rag-finance",
        "mongodb",
        "mongodb-atlas",
        "rag",
        "rag-ai"
      ],
      "size": 55462,
      "default_branch": "main"
    }
  },
  {
    "repo": "kcentric/deep_nlp_on_sf_literature",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        "license",
        "readme.md"
      ],
      "dirs": [
        "archive",
        "argilla_dataset",
        "input files",
        "json_files_for_doccano",
        "llm",
        "process comments",
        "prompt templates",
        "tf-idf",
        "main files"
      ]
    },
    "search_info": {
      "repo": "kcentric/deep_nlp_on_sf_literature",
      "stars": 4,
      "language": "Python",
      "description": "Multi-pronged, multi-stage analysis of a 3.5M-sentences science fiction corpus using optimized NLP, with NER techniques, LDA modeling and LLM integrat",
      "search_query": "document analysis llm language:python stars:>3",
      "search_description": "Document analysis LLM apps",
      "url": "https://github.com/kcentric/deep_nlp_on_sf_literature",
      "topics": [
        "algorithm-design",
        "data-engineering",
        "data-visualization",
        "latent-dirichlet-allocation",
        "named-entity-recognition",
        "nlp-machine-learning"
      ],
      "size": 12202,
      "default_branch": "main"
    }
  },
  {
    "repo": "AkshatBhat/Langflow-Customer-Support-Agent",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "license",
        "langflow customer support agent.json",
        "readme.md",
        "app.py",
        "demo_thumbnail.png",
        "demo_video.mp4",
        "requirements.txt"
      ],
      "dirs": [
        "sample_data",
        "sample_documents"
      ]
    },
    "search_info": {
      "repo": "AkshatBhat/Langflow-Customer-Support-Agent",
      "stars": 4,
      "language": "Python",
      "description": "Langflow Customer Support Agent: An LLM-powered, multi-agent chatbot using Langflow, Streamlit, and OpenAI GPT-4o mini, with RAG-based retrieval via A",
      "search_query": "customer support chatbot openai language:python stars:>3",
      "search_description": "Customer support chatbot apps",
      "url": "https://github.com/AkshatBhat/Langflow-Customer-Support-Agent",
      "topics": [
        "astradb",
        "gpt-4o-mini",
        "langflow",
        "llm-agents",
        "openai",
        "rag",
        "streamlit"
      ],
      "size": 10130,
      "default_branch": "main"
    }
  },
  {
    "repo": "garyzava/openai-slack-python",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "garyzava/openai-slack-python",
      "stars": 4,
      "language": "Python",
      "description": "Slack App Bot that calls ChatGPT using Python",
      "search_query": "slack bot openai language:python stars:>3",
      "search_description": "Slack bot applications",
      "url": "https://github.com/garyzava/openai-slack-python",
      "topics": [
        "chatgpt",
        "openai",
        "slack-api",
        "slack-bot"
      ],
      "size": 19,
      "default_branch": "main"
    }
  },
  {
    "repo": "Shiyuan-eric/LLM-Self-Explanation",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "Shiyuan-eric/LLM-Self-Explanation",
      "stars": 4,
      "language": "Python",
      "description": "This is a GitHub repository for our team members to upload the most recent code and exchange experimental outcomes.",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/Shiyuan-eric/LLM-Self-Explanation",
      "topics": [],
      "size": 4040,
      "default_branch": "main"
    }
  },
  {
    "repo": "neuro-symbolic-ai/explanation_refinement",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "neuro-symbolic-ai/explanation_refinement",
      "stars": 4,
      "language": "Python",
      "description": "Code and data for paper \"Verification and Refinement of Natural Language Explanations through LLM-Symbolic Theorem Proving\"",
      "search_query": "code explanation llm language:python stars:>3",
      "search_description": "Code explanation applications",
      "url": "https://github.com/neuro-symbolic-ai/explanation_refinement",
      "topics": [
        "natural-language-explanations",
        "natural-language-inference",
        "neuro-symbolic",
        "textual-entailment",
        "theorem-proving"
      ],
      "size": 517,
      "default_branch": "main"
    }
  },
  {
    "repo": "broomva/vortex",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 6,
        "app_dirs": 2,
        "framework_files": 4,
        "llm_usage": 2
      },
      "files": [
        ".env.example",
        ".eslintrc.json",
        ".gitcommit",
        ".gitignore",
        "changelog.md",
        "code_of_conduct.md",
        "license",
        "manifest.in",
        "makefile",
        "readme.md"
      ],
      "dirs": [
        ".chainlit",
        ".github",
        "example_flows",
        "notebooks",
        "public",
        "src",
        "vortex"
      ]
    },
    "search_info": {
      "repo": "broomva/vortex",
      "stars": 4,
      "language": "Python",
      "description": "Versatile Orchestrated Execution Engine for Data & AI Pipelines | LLM-powered Smart Agent for Workflows Development and Automation",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/broomva/vortex",
      "topics": [
        "agents",
        "artificial-intelligence",
        "langchain-python",
        "llm",
        "openai-api"
      ],
      "size": 18072,
      "default_branch": "main"
    }
  },
  {
    "repo": "sinamhd/autonomous",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "sinamhd/autonomous",
      "stars": 4,
      "language": "Python",
      "description": "Tutorials on building intelligent agents and autonomous workflows using LLMs. Learn to design and optimize AI-driven systems for real-world automation",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/sinamhd/autonomous",
      "topics": [],
      "size": 22,
      "default_branch": "main"
    }
  },
  {
    "repo": "lwardzala/business_rules_reasoning",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 2,
        "framework_files": 1,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "readme.md",
        "license",
        "pyproject.toml",
        "requirements.txt"
      ],
      "dirs": [
        ".github",
        "examples",
        "graphs",
        "images",
        "model_evaluation",
        "src",
        "test"
      ]
    },
    "search_info": {
      "repo": "lwardzala/business_rules_reasoning",
      "stars": 4,
      "language": "Python",
      "description": "A Python-based logical reasoning system combining rule-based engines with Large Language Models (LLMs) for business automation. Supports deduction and",
      "search_query": "workflow automation llm language:python stars:>3",
      "search_description": "Workflow automation with LLMs",
      "url": "https://github.com/lwardzala/business_rules_reasoning",
      "topics": [
        "ai",
        "horn-clauses",
        "inference",
        "llm",
        "llm-agent",
        "logical-reasoning",
        "reasoning",
        "reasoning-engine"
      ],
      "size": 450,
      "default_branch": "main"
    }
  },
  {
    "repo": "lrmantovani10/Email-Automation",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "backend.py",
        "license",
        "readme.md"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "lrmantovani10/Email-Automation",
      "stars": 4,
      "language": "Python",
      "description": "Application that automates response to emails using OpenAI and Google's APIs",
      "search_query": "email automation openai language:python stars:>3",
      "search_description": "Email automation applications",
      "url": "https://github.com/lrmantovani10/Email-Automation",
      "topics": [],
      "size": 11,
      "default_branch": "main"
    }
  },
  {
    "repo": "ashworks1706/SparkyAI",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "ashworks1706/SparkyAI",
      "stars": 4,
      "language": "Python",
      "description": "A Swarm of Intelligent AI Agents who work together to answer any student specific query, perform actual actions on their behalf and self improve over ",
      "search_query": "together.ai OR together_ai language:python stars:>3",
      "search_description": "Apps using Together AI",
      "url": "https://github.com/ashworks1706/SparkyAI",
      "topics": [
        "artificial-intelligence",
        "bot-development",
        "library-development"
      ],
      "size": 66892,
      "default_branch": "main"
    }
  },
  {
    "repo": "tunaflsh/summarizer",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 1,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "evals.py",
        "model.py",
        "prompt.py",
        "summarizer.py",
        "translator.py"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "tunaflsh/summarizer",
      "stars": 4,
      "language": "Python",
      "description": "Summarizes texts, videos and audios recursively. Allows custom prompts.",
      "search_query": "text summarization openai language:python stars:>3",
      "search_description": "Text summarization apps",
      "url": "https://github.com/tunaflsh/summarizer",
      "topics": [
        "llm",
        "llm-chain",
        "openai",
        "openai-api",
        "openai-chatgpt",
        "summarization"
      ],
      "size": 40,
      "default_branch": "main"
    }
  },
  {
    "repo": "FedericoNegri2001/Fact-Checking-Q-A-system-for-2024-European-Election",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 0,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes"
      ],
      "dirs": [
        "fact_checking_q&a_system"
      ]
    },
    "search_info": {
      "repo": "FedericoNegri2001/Fact-Checking-Q-A-system-for-2024-European-Election",
      "stars": 4,
      "language": "Jupyter Notebook",
      "description": "ETL process on MongoDB, RAG Approach to an LLM and an interactive Dashboard made with Streamlit",
      "search_query": "llm dashboard streamlit stars:>3",
      "search_description": "LLM dashboard applications",
      "url": "https://github.com/FedericoNegri2001/Fact-Checking-Q-A-system-for-2024-European-Election",
      "topics": [],
      "size": 9232,
      "default_branch": "main"
    }
  },
  {
    "repo": "vy-phan/Data_anylist_tool",
    "suitable": false,
    "reason": "TOO_FEW_ISSUES",
    "issue_count": 0,
    "search_info": {
      "repo": "vy-phan/Data_anylist_tool",
      "stars": 4,
      "language": "Python",
      "description": "Streamlit dashboard for CSV/Excel visualization and AI insights via Gemini API, offering chart creation, analysis, and recommendations.",
      "search_query": "llm dashboard streamlit stars:>3",
      "search_description": "LLM dashboard applications",
      "url": "https://github.com/vy-phan/Data_anylist_tool",
      "topics": [
        "ai",
        "gemini-api",
        "llm",
        "python"
      ],
      "size": 16159,
      "default_branch": "main"
    }
  },
  {
    "repo": "mewerton/Dashboard_Painel_do_Gestor",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "readme.md",
        "adiantamentos.py",
        "analyzer.py",
        "app.py",
        "auth_utils.py",
        "chatbot.py",
        "combustivel.py",
        "contratos.py",
        "data_loader.py"
      ],
      "dirs": [
        ".devcontainer",
        ".streamlit",
        "database",
        "src"
      ]
    },
    "search_info": {
      "repo": "mewerton/Dashboard_Painel_do_Gestor",
      "stars": 4,
      "language": "Python",
      "description": "Dashboard interativo em Python/Streamlit, Desenvolvido para gestores p\u00fablicos de Alagoas. Exibe m\u00e9tricas estrat\u00e9gicas com filtros din\u00e2micos, gr\u00e1ficos ",
      "search_query": "llm dashboard streamlit stars:>3",
      "search_description": "LLM dashboard applications",
      "url": "https://github.com/mewerton/Dashboard_Painel_do_Gestor",
      "topics": [],
      "size": 3027,
      "default_branch": "main"
    }
  },
  {
    "repo": "VidhyaVarshanyJS/EnsembleX",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitignore",
        "license",
        "readme.md",
        "app.py",
        "model_names.txt",
        "requirements.txt",
        "style.css"
      ],
      "dirs": []
    },
    "search_info": {
      "repo": "VidhyaVarshanyJS/EnsembleX",
      "stars": 4,
      "language": "Python",
      "description": "EnsembleX utilizes the Knapsack algorithm to optimize Large Language Model (LLM) ensembles for quality-cost trade-offs, offering tailored suggestions ",
      "search_query": "llm dashboard streamlit stars:>3",
      "search_description": "LLM dashboard applications",
      "url": "https://github.com/VidhyaVarshanyJS/EnsembleX",
      "topics": [
        "benchmark",
        "huggingface",
        "knapsack",
        "large-language-models",
        "llm",
        "llm-evaluation",
        "open-llm-leaderboard",
        "python",
        "streamlit"
      ],
      "size": 135,
      "default_branch": "master"
    }
  },
  {
    "repo": "davidawad/chase",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 4,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".gitattributes",
        ".gitignore",
        "dockerfile",
        "makefile",
        "procfile",
        "readme.md",
        "requirements.txt",
        "searcher.py",
        "server.py"
      ],
      "dirs": [
        "state_data"
      ]
    },
    "search_info": {
      "repo": "davidawad/chase",
      "stars": 4,
      "language": "Python",
      "description": "Assistant to the world's first AI paralegal",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/davidawad/chase",
      "topics": [
        "docker",
        "flask",
        "json",
        "legal",
        "lobe",
        "make",
        "python",
        "statedb"
      ],
      "size": 16811,
      "default_branch": "master"
    }
  },
  {
    "repo": "HenryLok0/IT114115-FYP-EaseParkHK",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 0,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".deployment",
        "contributing.md",
        "license",
        "readme.md",
        "icon.png",
        "microblog.py",
        "requirements.txt",
        "run.py",
        "test_data.py",
        "tests.py"
      ],
      "dirs": [
        ".devcontainer",
        ".vscode",
        "app",
        "logs",
        "migrations",
        "venv"
      ]
    },
    "search_info": {
      "repo": "HenryLok0/IT114115-FYP-EaseParkHK",
      "stars": 4,
      "language": "Python",
      "description": "Flask-based system for real-time car park vacancy in Hong Kong. Intuitive interface for finding parking, traffic info, road conditions, and AI assista",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/HenryLok0/IT114115-FYP-EaseParkHK",
      "topics": [
        "carpark",
        "carparking",
        "flask",
        "hk",
        "hongkong",
        "python"
      ],
      "size": 1673,
      "default_branch": "main"
    }
  },
  {
    "repo": "gupta-v/Eva",
    "suitable": false,
    "reason": "NOT_AN_APPLICATION",
    "content_analysis": {
      "is_app": false,
      "scores": {
        "app_files": 3,
        "app_dirs": 1,
        "framework_files": 0,
        "llm_usage": 0
      },
      "files": [
        ".env.example",
        ".gitignore",
        "readme.md",
        "eva.py",
        "launch_eva.py",
        "path.py.example",
        "requirements.txt",
        "searchdir.py"
      ],
      "dirs": [
        ".idea",
        "ai_responses",
        "evafunctions",
        "flaskapp",
        "assets"
      ]
    },
    "search_info": {
      "repo": "gupta-v/Eva",
      "stars": 4,
      "language": "Python",
      "description": "Eva - Desktop Assistant: A Python-based desktop assistant designed for streamlining everyday tasks through voice commands. Leveraging speech recogniti",
      "search_query": "ai assistant flask python stars:>3",
      "search_description": "AI assistant Flask applications",
      "url": "https://github.com/gupta-v/Eva",
      "topics": [
        "ai-integrations",
        "artificial-intelligence",
        "flask",
        "gemini-api",
        "python3",
        "speech-recognition",
        "text-to-speech"
      ],
      "size": 35556,
      "default_branch": "main"
    }
  }
]